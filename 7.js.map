{"version":3,"sources":["./src/app/core/services/room.service.ts","./src/app/pages/room/room.component.ts","./src/app/pages/room/room.component.html","./src/app/pages/room/room.component.css","./src/app/pages/room/room-routing.module.ts","./src/app/pages/room/room.module.ts"],"names":["RoomService","httpClient","auth","apiURL","this","sede","getSedeId","room","postRoom","nombre","descripcion","capacidad","post","console","log","id","put","get","request","body","providedIn","RoomComponent","roomService","router","toastr","roomList","edit","routeReuseStrategy","shouldReuseRoute","window","scrollTo","getRooms","subscribe","res","data","item","deteleRoom","success","navigateByUrl","putRoom","navigate","selector","template","routes","path","component","RoomRoutingModule","imports","forChild","exports","RoomModule","declarations","schemas"],"mappings":"+LASaA,EAAW,MAItB,YAAoBC,EACAC,GADA,KAAAD,aACA,KAAAC,OAHZ,KAAAC,OAAS,IAAYA,OAIfC,KAAKC,KAAOD,KAAKF,KAAKI,YAGpC,SAASC,GACP,MAAMC,EAAW,CACfC,OAAQF,EAAKE,OACbC,YAAaH,EAAKG,YAClBC,UAAWJ,EAAKI,UAChBN,KAAMD,KAAKC,MAEb,OAAOD,KAAKH,WAAWW,KAAKR,KAAKD,OAAS,wBAAyBK,GAErE,QAAQD,GACNM,QAAQC,IAAIP,GAEZ,MAAMC,EAAW,CACfO,GAAIR,EAAKQ,GACTN,OAAQF,EAAKE,OACbC,YAAaH,EAAKG,YAClBC,UAAWJ,EAAKI,UAChBN,KAAMD,KAAKC,MAEb,OAAOD,KAAKH,WAAWe,IAAIZ,KAAKD,OAAS,yBAA0BK,GAGrE,WACE,OAAOJ,KAAKH,WAAWgB,IAAIb,KAAKD,OAAS,iCAAmCC,KAAKC,MAGnF,WAAWE,GAET,OAAOH,KAAKH,WAAWiB,QAAQ,SAAUd,KAAKD,OAAS,2BACvD,CAACgB,KAAM,CAACJ,GAAIR,EAAKQ,GAAIV,KAAMD,KAAKC,U,4BA/C3B,K,MAIA,MAKIL,EAAW,aAHvB,YAAW,CACVoB,WAAY,UAEDpB,I,kKCEAqB,EAAa,MAExB,YAAoBC,EACAC,EACAC,GAFA,KAAAF,cACA,KAAAC,SACA,KAAAC,SAMpB,KAAAC,SAAW,GACX,KAAAC,MAAO,EACP,KAAAnB,KAAO,GACP,KAAAQ,GAAK,GAPSX,KAAKmB,OAAOI,mBAAmBC,iBAAmB,KACzC,EAQvB,WACEC,OAAOC,SAAS,EAAG,GACnB1B,KAAK2B,WAGP,WACE3B,KAAKkB,YAAYS,WAAWC,UAAWC,IACpC7B,KAAKqB,SAAWQ,EAAIC,KAAK,KAI9B,UACE9B,KAAKsB,MAAQtB,KAAKsB,KAClBtB,KAAKG,KAAO,GAId,WAAW4B,GACT/B,KAAKkB,YAAYc,WAAWD,GAAMH,UAAWC,IAC3C7B,KAAKoB,OAAOa,QAAQ,6BACpBjC,KAAKmB,OAAOe,cAAc,WAI9B,SAAS/B,GACPH,KAAKsB,MAAQtB,KAAKsB,KAClBtB,KAAKG,KAAOA,EAGd,iBAAiB4B,GACC,OAAZA,EAAKpB,GACPX,KAAKkB,YAAYd,SAAS2B,GAAMH,UAAWC,IACzC7B,KAAKoB,OAAOa,QAAQ,eACpBjC,KAAKmB,OAAOe,cAAc,WAI5BlC,KAAKkB,YAAYiB,QAAQJ,GAAMH,UAAWC,IACxC7B,KAAKoB,OAAOa,QAAQ,mBACpBjC,KAAKmB,OAAOe,cAAc,WAG9BlC,KAAK2B,WAGP,SACE3B,KAAKmB,OAAOiB,SAAS,CAAC,oB,4BApEjB,K,MAHgB,K,MAChB,MASInB,EAAa,aALzB,YAAU,CACToB,SAAU,gBACVC,SCRa,2U,QCAA,OFWFrB,GGPb,MAAMsB,EAAiB,CAAC,CACtBC,KAAM,GACNC,UAAWxB,I,IAOAyB,EAAiB,QAAjBA,EAAiB,aAJ7B,YAAS,CACRC,QAAS,CAAC,IAAaC,SAASL,IAChCM,QAAS,CAAC,QAECH,G,oBCKAI,EAAU,QAAVA,EAAU,aATtB,YAAS,CACRC,aAAc,CAAC9B,GACf0B,QAAS,CACP,IACAD,EACA,KAEFM,QAAS,CAAC,QAECF","file":"7.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { IRoom } from '../models/IRoom';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoomService {\n\n  private apiURL = environment.apiURL;\n  sede: number;\n  constructor(private httpClient: HttpClient,\n              private auth: AuthService) {\n                this.sede = this.auth.getSedeId();\n               }\n\n  postRoom(room: any): any{\n    const postRoom = {\n      nombre: room.nombre,\n      descripcion: room.descripcion,\n      capacidad: room.capacidad,\n      sede: this.sede\n    };\n    return this.httpClient.post(this.apiURL + 'congresos/crear-aula/', postRoom);\n  }\n  putRoom(room: any): any{\n    console.log(room);\n\n    const postRoom = {\n      id: room.id,\n      nombre: room.nombre,\n      descripcion: room.descripcion,\n      capacidad: room.capacidad,\n      sede: this.sede\n    };\n    return this.httpClient.put(this.apiURL + 'congresos/editar-aula/', postRoom);\n  }\n\n  getRooms(): any{\n    return this.httpClient.get(this.apiURL + 'congresos/lista-aulas/?idSede=' + this.sede);\n  }\n\n  deteleRoom(room: IRoom): any{\n    // return this.httpClient.delete<IRoom>(this.apiURL);\n    return this.httpClient.request('delete', this.apiURL + 'congresos/eliminar-aula/',\n    {body: {id: room.id, sede: this.sede}});\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { IRoom } from 'src/app/core/models/IRoom';\nimport { RoomService } from 'src/app/core/services/room.service';\n\n@Component({\n  selector: 'app-room-page',\n  templateUrl: './room.component.html',\n  styleUrls: ['./room.component.css']\n})\nexport class RoomComponent implements OnInit {\n\n  constructor(private roomService: RoomService,\n              private router: Router,\n              private toastr: ToastrService,\n              ) {\n                this.router.routeReuseStrategy.shouldReuseRoute = () => {\n                  return false;\n                };\n              }\n  roomList = [];\n  edit = false;\n  room = {};\n  id = '';\n\n  ngOnInit(): void {\n    window.scrollTo(0, 0);\n    this.getRooms();\n  }\n\n  getRooms(): void{\n    this.roomService.getRooms().subscribe((res: any) => {\n       this.roomList = res.data[0];\n      });\n  }\n\n  newRoom(): void{\n    this.edit = !this.edit;\n    this.room = {};\n\n  }\n\n  deleteRoom(item: IRoom): void{\n    this.roomService.deteleRoom(item).subscribe((res: any) => {\n      this.toastr.success('El aula ha sido eliminada');\n      this.router.navigateByUrl('/room');\n    });\n  }\n\n  editRoom(room: any): void {\n    this.edit = !this.edit;\n    this.room = room;\n  }\n\n  toggleCreateRoom(item: IRoom): void{\n    if (item.id === null) {\n      this.roomService.postRoom(item).subscribe((res: any) => {\n        this.toastr.success('Aula Creada');\n        this.router.navigateByUrl('/room');\n      });\n    }\n    else{\n      this.roomService.putRoom(item).subscribe((res: any) => {\n        this.toastr.success('Aula Modificada');\n        this.router.navigateByUrl('/room');\n      });\n    }\n    this.getRooms();\n  }\n\n  goBack(): void {\n    this.router.navigate(['/misCongresos']);\n  }\n}\n","export default \"<app-room *ngIf=\\\"!edit\\\"\\n[roomList]='roomList'\\n(newRoomEvent)='newRoom()' (editRoomEvent)='editRoom($event)'\\n(deleteRoomEvent)='deleteRoom($event)' (goBackEvent) = 'goBack()'\\n></app-room>\\n<app-room-form *ngIf='edit' [room]='room' (roomEmitter)= 'toggleCreateRoom($event)'\\n(cancelRoom)='newRoom($event)'></app-room-form>\\n\";","export default \"\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RoomComponent } from './room.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: RoomComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RoomRoutingModule { }\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RoomRoutingModule } from './room-routing.module';\nimport { RoomComponent } from './room.component';\nimport { CoreModule } from 'src/app/core/core.module';\n\n\n\n@NgModule({\n  declarations: [RoomComponent],\n  imports: [\n    CommonModule, \n    RoomRoutingModule,\n    CoreModule\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class RoomModule { }\n"],"sourceRoot":"webpack:///"}