{"version":3,"sources":["./src/app/pages/inscripcion-fisica/inscripcion-fisica.component.ts","./src/app/pages/inscripcion-fisica/inscripcion-fisica.component.html","./src/app/pages/inscripcion-fisica/inscripcion-fisica.component.css","./src/app/pages/inscripcion-fisica/inscripcion-fisica-routing.module.ts","./src/app/pages/inscripcion-fisica/inscripcion-fisica.module.ts"],"names":["formBuilder","userService","tarifaService","inscriptionService","toast","submitted","userChecked","tipoDniList","tarifaList","datos","email","nombre","apellido","fechaNacimiento","dni","tipoDni","window","scrollTo","this","formCorreo","group","correo","required","formInscripcion","min","getTiposDni","getTarifas","disable","invalid","error","controls","value","checkUser","subscribe","res","btnDatosPersonales","document","getElementById","data","length","setValue","success","click","reset","enable","patchValue","info","inscripcionFisicaConUsuario","clearAll","err","valid","inscripcionFisicaSinUsuario","warning","btnContinuar","fecha","split","getDni","console","log","selector","template","routes","path","component","InscripcionFisicaRoutingModule","imports","forChild","exports","InscripcionFisicaModule","declarations"],"mappings":"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","file":"40.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { InscriptionsService } from 'src/app/core/services/inscriptions.service';\nimport { TarifasService } from 'src/app/core/services/tarifas.service';\nimport { UserService } from 'src/app/core/services/user.service';\n\n@Component({\n  selector: 'app-inscripcion-fisica',\n  templateUrl: './inscripcion-fisica.component.html',\n  styleUrls: ['./inscripcion-fisica.component.css']\n})\nexport class InscripcionFisicaComponent implements OnInit {\n\n  formCorreo: FormGroup;\n  formInscripcion: FormGroup;\n  submitted = false;\n  userChecked = false;\n  tipoDniList = [];\n  tarifaList = [];\n  datos = {\n    email: '',\n    nombre: '',\n    apellido: '',\n    fechaNacimiento: '',\n    dni: '',\n    tipoDni: ''\n  };\n\n  constructor(private formBuilder: FormBuilder,\n              private userService: UserService,\n              private tarifaService: TarifasService,\n              private inscriptionService: InscriptionsService,\n              private toast: ToastrService) { }\n\n  ngOnInit(): void {\n    window.scrollTo(0, 0);\n    this.formCorreo = this.formBuilder.group({\n      correo: ['', [Validators.required, Validators.email]]});\n\n    this.formInscripcion = this.formBuilder.group({\n      email: [this.datos.email, [Validators.required, Validators.email]],\n      nombre: [this.datos.nombre, [Validators.required]],\n      apellido: [this.datos.apellido, [Validators.required]],\n      fechaNacimiento: [this.datos.fechaNacimiento, [Validators.required]],\n      dni: [this.datos.dni, [Validators.required, Validators.min(0)]],\n      tipoDni: [this.datos.tipoDni, [Validators.required]]\n    });\n    this.getTiposDni();\n    this.getTarifas();\n    this.formInscripcion.disable();\n  }\n\n  checkUser(): void {\n    this.submitted = true;\n    if (this.formCorreo.invalid) {\n      this.toast.error('Ingrese una dirección de correo válida.');\n      return;\n    }\n    const email = this.formCorreo.controls.correo.value;\n    this.userService.checkUser(email).subscribe((res: any) => {\n      this.submitted = false;\n      const btnDatosPersonales = document.getElementById('datos-personales') as HTMLButtonElement;\n      const data = res.data;\n      if (data.length !== 0) {\n        this.formInscripcion.setValue({\n          nombre: data.nombre,\n          apellido: data.apellido,\n          email: data.email,\n          fechaNacimiento: data.fechaNacimiento,\n          dni: data.dni,\n          tipoDni: data.tipoDni,\n        });\n        this.userChecked = true;\n        this.formInscripcion.disable();\n        this.toast.success('Usuario Verificado!');\n        btnDatosPersonales.click();\n      } else {\n        this.userChecked = false;\n        this.formInscripcion.reset();\n        this.formInscripcion.enable();\n        this.formInscripcion.patchValue({\n          email\n        });\n        this.toast.info('No existe un usuario registrado con ese correo.');\n        btnDatosPersonales.click();\n      }\n    });\n  }\n\n  inscribir(): void {\n    if (this.userChecked) { // Usuario con cuenta\n      const email = this.formInscripcion.controls.email.value;\n      this.inscriptionService.inscripcionFisicaConUsuario(email).subscribe(\n        (res: any) => {this.toast.success('Inscripción realizada con éxito!');\n                       this.clearAll(); },\n        (err: any) => {this.toast.error(err.error); });\n      return;\n    } else if (this.formInscripcion.valid) { // Usuario sin cuenta\n      const data = {\n        email: this.formInscripcion.controls.email.value,\n        nombre: this.formInscripcion.controls.nombre.value,\n        apellido: this.formInscripcion.controls.apellido.value,\n        fechaNacimiento: this.formInscripcion.controls.fechaNacimiento.value,\n        dni: this.formInscripcion.controls.dni.value,\n        tipoDni: this.formInscripcion.controls.tipoDni.value\n      };\n      this.inscriptionService.inscripcionFisicaSinUsuario(data).subscribe(\n        (res: any) => {this.toast.success('Inscripción realizada con éxito!');\n                       this.clearAll(); },\n        (err: any) => {this.toast.error(err.error); });\n      return;\n    } else {\n      const btnForm = document.getElementById('datos-personales') as HTMLButtonElement;\n      btnForm.click();\n      this.toast.warning('Por favor, complete el formulario de datos personales.');\n    }\n  }\n\n  goToInscription(): void {\n    const btnContinuar = document.getElementById('inscripcion') as HTMLButtonElement;\n    if (this.userChecked) {\n      btnContinuar.click();\n    } else if (this.formInscripcion.valid) {\n      this.submitted = false;\n      btnContinuar.click();\n    } else {\n      this.toast.warning('Por favor, complete todos los campos.');\n    }\n  }\n\n  handleDateFormat(): void {\n    const fecha = this.datos.fechaNacimiento.split('-');\n    this.datos.fechaNacimiento = fecha[2] + '/' + fecha[1] + '/' + fecha[0];\n  }\n\n  clearAll(): void {\n    this.formCorreo.reset();\n    this.formInscripcion.reset();\n    this.formInscripcion.disable();\n    const btnVerificar = document.getElementById('verificacion-usuario') as HTMLButtonElement;\n    btnVerificar.click();\n  }\n\n  getTiposDni(): void {\n    this.userService.getDni().subscribe((res: any) => {\n      this.tipoDniList = res;\n    });\n  }\n\n  getTarifas(): void {\n    this.tarifaService.getTarifas().subscribe((res: any) => {\n      this.tarifaList = res.data;\n      console.log(this.tarifaList);\n    });\n  }\n}\n","export default \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"contenidos\\\">\\n      <hr>\\n      <h3 class=\\\"text-center\\\">Inscripción Física</h3>\\n      <hr>\\n    </div>\\n    <div class=\\\"container\\\">\\n      <div class=\\\"accordion\\\" id=\\\"accordionExample\\\">\\n        <div class=\\\"accordion-item\\\">\\n          <h2 class=\\\"accordion-header\\\" id=\\\"headingOne\\\">\\n            <button class=\\\"accordion-button\\\" type=\\\"button\\\" id=\\\"verificacion-usuario\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#collapseOne\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseOne\\\">\\n              Verificación de Usuario\\n            </button>\\n          </h2>\\n          <div id=\\\"collapseOne\\\" class=\\\"accordion-collapse collapse show\\\" aria-labelledby=\\\"headingOne\\\" data-bs-parent=\\\"#accordionExample\\\">\\n            <div class=\\\"accordion-body\\\">\\n              <form [formGroup]=\\\"formCorreo\\\">\\n                <div class=\\\"row justify-content-md-center\\\">\\n                    <div class=\\\"col-auto col-form-label\\\">\\n                        <label for=\\\"correo\\\" class=\\\"form-label\\\">Correo</label>\\n                    </div>\\n                    <div class=\\\"col-md-4\\\">\\n                        <input type=\\\"email\\\"  class=\\\"form-control\\\" id=\\\"correo\\\" onClick=\\\"this.select();\\\"\\n                        formControlName=\\\"correo\\\" [ngClass]=\\\"{'is-invalid': submitted && formCorreo.controls.correo.errors}\\\">\\n                    </div>\\n                    <div class=\\\"col-auto\\\">\\n                        <a class=\\\"btn btn-primary\\\" role=\\\"button\\\" (click)=\\\"checkUser()\\\">Verificar Usuario</a>\\n                    </div>\\n                </div>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"accordion-item\\\">\\n          <h2 class=\\\"accordion-header\\\" id=\\\"headingTwo\\\">\\n            <button class=\\\"accordion-button collapsed\\\" type=\\\"button\\\" id=\\\"datos-personales\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#collapseTwo\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"collapseTwo\\\">\\n              Datos Personales\\n            </button>\\n          </h2>\\n          <div id=\\\"collapseTwo\\\" class=\\\"accordion-collapse collapse\\\" aria-labelledby=\\\"headingTwo\\\" data-bs-parent=\\\"#accordionExample\\\">\\n            <div class=\\\"accordion-body\\\">\\n              <div class=\\\"container-md\\\">\\n                <form [formGroup]=\\\"formInscripcion\\\">\\n                    <div class=\\\"row datos-personales\\\">\\n                        <div class=\\\"col-md-4\\\">\\n                            <label for=\\\"nombre\\\" class=\\\"form-label\\\">Nombre</label>\\n                            <input type=\\\"text\\\"  class=\\\"form-control\\\" id=\\\"nombre\\\" onClick=\\\"this.select();\\\"\\n                            formControlName=\\\"nombre\\\" [ngClass]=\\\"{'is-invalid': submitted && formInscripcion.controls.nombre.errors}\\\">\\n                        </div>\\n                        <div class=\\\"col-md-4\\\">\\n                            <label for=\\\"apellido\\\" class=\\\"form-label\\\">Apellido</label>\\n                            <input type=\\\"text\\\"  class=\\\"form-control\\\" id=\\\"apellido\\\" onClick=\\\"this.select();\\\"\\n                            formControlName=\\\"apellido\\\" [ngClass]=\\\"{'is-invalid': submitted && formInscripcion.controls.apellido.errors}\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row datos-personales\\\">\\n                        <div class=\\\"col-md-4\\\">\\n                            <label for=\\\"email\\\" class=\\\"form-label\\\">Correo</label>\\n                            <input type=\\\"email\\\"  class=\\\"form-control\\\" id=\\\"email\\\" onClick=\\\"this.select();\\\"\\n                            formControlName=\\\"email\\\" [ngClass]=\\\"{'is-invalid': submitted && formInscripcion.controls.email.errors}\\\">\\n                        </div>\\n                        <div class=\\\"col-md-2\\\">\\n                            <label for=\\\"fechaNacimiento\\\" class=\\\"form-label\\\">Fecha de Nacimiento</label>\\n                            <input type=\\\"date\\\"  class=\\\"form-control\\\" id=\\\"fechaNacimiento\\\" onClick=\\\"this.select();\\\"\\n                            formControlName=\\\"fechaNacimiento\\\" [ngClass]=\\\"{'is-invalid': submitted && formInscripcion.controls.fechaNacimiento.errors}\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row datos-personales\\\">\\n                        <div class=\\\"col-md-4\\\">\\n                            <label for=\\\"tipoDni\\\" class=\\\"form-label\\\">Tipo de Documento</label>\\n                            <select class=\\\"form-select\\\" id=\\\"tipoDni\\\" formControlName=\\\"tipoDni\\\" [ngClass]=\\\"{'is-invalid': submitted && formInscripcion.controls.tipoDni.errors}\\\">\\n                                <option *ngFor=\\\"let item of tipoDniList\\\" value=\\\"{{item.id}}\\\" [selected]='item.nombre===datos.tipoDni' >{{item.nombre}}</option>\\n                            </select>\\n                        </div>\\n                        <div class=\\\"col-md-4\\\">\\n                            <label for=\\\"dni\\\" class=\\\"form-label\\\">Número de Documento</label>\\n                            <input type=\\\"number\\\"  class=\\\"form-control\\\" id=\\\"dni\\\" onClick=\\\"this.select();\\\" min=\\\"0\\\"\\n                            formControlName=\\\"dni\\\" [ngClass]=\\\"{'is-invalid': submitted && formInscripcion.controls.dni.errors}\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-2\\\">\\n                        <a class=\\\"btn btn-primary\\\" role=\\\"button\\\" (click)=\\\"goToInscription()\\\">Continuar</a>\\n                      </div>\\n                  </div>\\n                </form>\\n            </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"accordion-item\\\">\\n          <h2 class=\\\"accordion-header\\\" id=\\\"headingThree\\\">\\n            <button class=\\\"accordion-button collapsed\\\" type=\\\"button\\\" id=\\\"inscripcion\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#collapseThree\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"collapseThree\\\">\\n              Inscripción\\n            </button>\\n          </h2>\\n          <div id=\\\"collapseThree\\\" class=\\\"accordion-collapse collapse\\\" aria-labelledby=\\\"headingThree\\\" data-bs-parent=\\\"#accordionExample\\\">\\n            <div class=\\\"accordion-body\\\">\\n              <div class=\\\"row justify-content-md-center\\\">\\n                <div class=\\\"col-md-2\\\" *ngFor=\\\"let tar of tarifaList\\\">\\n                  <div class=\\\"card\\\">\\n                      <div class=\\\"card-body text-center\\\">\\n                        <h5 class=\\\"card-title\\\">{{tar.nombre}}</h5>\\n                        <h5 class=\\\"card-title\\\">{{tar.precio | currency:ARS}}</h5>\\n                        <a class=\\\"btn btn-primary stretched-link\\\" (click)=\\\"inscribir()\\\">Inscribir</a>\\n                      </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n</div>\\n  \\n\";","export default \"@media (min-width: 768px) {\\n    hr{\\n        margin-left: 25%;\\n        margin-right: 25%;\\n        border:#00609C solid 1px;\\n    }\\n  \\n    .container-fluid{\\n        padding: 5rem;\\n        background-color: #F4F4F4;\\n    }\\n}\\n\\n.card{\\n    border-radius: 10px;\\n}\\n\\n.card:hover {\\n    border-color: #3CAFE0;\\n}\\n\\n.contenidos{\\n    padding-bottom: 10px;\\n}\\n\\n.datos-personales{\\n    margin-bottom: 15px;\\n}\\n\\n.btn{\\n    border: none;\\n}\\n\\n.btn-primary{\\n    background-color: #3CAFE0 ;\\n}\\n\\n.btn-primary:hover{\\n    background-color: #3994bb ;\\n}\\n\\ni{\\n    padding-top: 0.5rem;\\n    cursor: pointer;\\n}\\n\\n.fas{\\n    font-size: 1.25rem;\\n    color: #00609C;\\n}\\n\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { InscripcionFisicaComponent } from './inscripcion-fisica.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: InscripcionFisicaComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InscripcionFisicaRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { InscripcionFisicaRoutingModule } from './inscripcion-fisica-routing.module';\nimport { InscripcionFisicaComponent } from './inscripcion-fisica.component';\nimport { CoreModule } from 'src/app/core/core.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [InscripcionFisicaComponent],\n  imports: [\n    CommonModule,\n    InscripcionFisicaRoutingModule,\n    CoreModule,\n    ReactiveFormsModule,\n    FormsModule,\n  ]\n})\nexport class InscripcionFisicaModule { }\n"],"sourceRoot":"webpack:///"}