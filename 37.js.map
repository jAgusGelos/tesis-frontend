{"version":3,"sources":["./src/app/pages/graphs/graphs.component.ts","./src/app/pages/graphs/graphs.component.html","./src/app/pages/graphs/graphs.component.css","./src/app/pages/graphs/graphs-routing.module.ts","./node_modules/rxjs/_esm2015/internal/operators/throttle.js","./node_modules/rxjs/_esm2015/internal/operators/throttleTime.js","./node_modules/ngx-echarts/__ivy_ngcc__/fesm2015/ngx-echarts.js","./src/app/pages/graphs/graphs.module.ts"],"names":["GraphsComponent","statsService","data","selectedOption","value","this","getTopEval","subscribe","res","getTopSimposioXCongreso","getTopSimpoGeneral","getTopSimpoXEval","getEdadesXCongress","name","getPartXSede","getSimpoXCalif","getTopEventos","getEvalXCancelXCongreso","getEvalXCancel","getEstadoArticulos","aprobados","reentrega","rechazados","datos","labels","i","length","element","push","substring","console","log","chartOption","tooltip","show","toolbox","feature","saveAsImage","xAxis","type","yAxis","series","showBackground","backgroundStyle","color","label","fontSize","legend","radius","center","position","alignTo","bleedMargin","left","right","top","bottom","selector","template","routes","path","component","GraphsRoutingModule","imports","forChild","exports","defaultThrottleConfig","leading","trailing","ThrottleTimeOperator","duration","scheduler","subscriber","source","Subscriber","destination","super","_hasTrailingValue","_trailingValue","throttled","add","schedule","dispatchNext","next","complete","unsubscribe","remove","arg","clearThrottle","changes","key","currentValue","of","isFirstChange","NGX_ECHARTS_CONFIG","config","el","ngZone","autoResize","loadingType","chartInit","optionsError","chartClick","createLazyEvent","chartDblClick","chartMouseDown","chartMouseMove","chartMouseUp","chartMouseOver","chartMouseOut","chartGlobalOut","chartContextMenu","chartLegendSelectChanged","chartLegendSelected","chartLegendUnselected","chartLegendScroll","chartDataZoom","chartDataRangeSelected","chartTimelineChanged","chartTimelinePlayChanged","chartRestore","chartDataViewChanged","chartMagicTypeChanged","chartPieSelectChanged","chartPieSelected","chartPieUnselected","chartMapSelectChanged","chartMapSelected","chartMapUnselected","chartAxisAreaSelected","chartFocusNodeAdjacency","chartUnfocusNodeAdjacency","chartBrush","chartBrushEnd","chartBrushSelected","chartRendered","chartFinished","animationFrameID","resize$","Subject","echarts","filter","notFirstAndEmpty","opt","onOptionsChange","setOption","has","v","toggleLoading","notFirst","refreshChart","window","ResizeObserver","Error","resizeSub","pipe","lift","throttleTime","resize","resizeOb","runOutsideAngular","requestAnimationFrame","observe","nativeElement","clearTimeout","initChartTimer","cancelAnimationFrame","unobserve","dispose","setTimeout","initChart","chart","isDisposed","loading","showLoading","loadingOpts","hideLoading","option","opts","e","error","emit","dom","getComputedStyle","prop","getPropertyValue","style","height","Promise","resolve","then","init","theme","initOpts","options","merge","createChart","eventName","switchMap","Observable","observer","on","run","off","ɵfac","t","ɵdir","selectors","inputs","outputs","exportAs","features","ctorParameters","undefined","decorators","args","propDecorators","NgxEchartsModule","ngModule","providers","provide","useValue","ɵmod","ɵinj","ngJitMode","declarations","GraphsModule","forRoot"],"mappings":"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","file":"37.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { EChartsOption } from 'echarts';\nimport { StatsService } from 'src/app/core/services/stats.service';\n\n@Component({\n  selector: 'app-graphs',\n  templateUrl: './graphs.component.html',\n  styleUrls: ['./graphs.component.css']\n})\n\n\nexport class GraphsComponent implements OnInit {\n\n  chartOption: EChartsOption;\n  data = [];\n  selectedOption = false;\n\n  constructor(private statsService: StatsService) { }\n\n  ngOnInit(): void {\n\n  }\n\n  selectStats(value: string): void {\n    this.selectedOption = false;\n    switch (value) {\n      case 'topEval':\n        this.statsService.getTopEval().subscribe((res: any) => {\n          this.data = res.data;\n        });\n        break;\n      case 'topSimpo':\n        this.statsService.getTopSimposioXCongreso().subscribe((res: any) => {\n          this.data = res.data;\n        });\n        break;\n      case 'topSimpoCongre':\n        this.statsService.getTopSimpoGeneral().subscribe((res: any) => {\n          this.data = res.data;\n        });\n        break;\n      case 'topSimpoXEval':\n        this.statsService.getTopSimpoXEval().subscribe((res: any) => {\n          this.data = res.data;\n        });\n        break;\n      case 'gEtario':\n        this.statsService.getEdadesXCongress().subscribe((res: any) => {\n          this.data = [\n            { name: 'Menores 18', value: res.data[0]['menor-18'] },\n            { name: 'Entre 18-24', value: res.data[0]['entre-18-24'] },\n            { name: 'Entre 25-40', value: res.data[0]['entre-25-40'] },\n            { name: 'Mayores de 40', value: res.data[0]['mayor-40'] }\n          ];\n        });\n        break;\n      case 'participSede':\n        this.statsService.getPartXSede().subscribe((res: any) => {\n          this.data = res.data;\n        });\n        break;\n      case 'califSimposios':\n        this.statsService.getSimpoXCalif().subscribe((res: any) => {\n          this.data = res.data;\n        });\n        break;\n      case 'topEventos':\n        this.statsService.getTopEventos().subscribe((res: any) => {\n          this.data = res.data;\n        });\n        break;\n      case 'cancelaciones':\n        this.statsService.getEvalXCancelXCongreso().subscribe((res: any) => {\n          this.data = res.data;\n        });\n        break;\n      case 'cancelCongre':\n        this.statsService.getEvalXCancel().subscribe((res: any) => {\n          this.data = res.data;\n        });\n        break;\n      case 'estadoArt':\n        this.statsService.getEstadoArticulos().subscribe((res: any) => {\n          this.data = [\n            { name: 'Aprobados', value: res.data.aprobados },\n            { name: 'Reentregados', value: res.data.reentrega },\n            { name: 'Rechazados', value: res.data.rechazados }\n          ];\n        });\n        break;\n      default:\n        break;\n    }\n\n  }\n\n  // \"line\" | \"bar\" | \"scatter\" | \"pie\" | \"radar\" | \"map\" | \"tree\" | \"treemap\" | \"graph\" | \"gauge\"\n  // | \"funnel\" | \"parallel\" | \"sankey\" | \"boxplot\" | \"candlestick\" | \"effectScatter\" |\"custom\"\n  selectGraph(value: any): void {\n    const datos = [];\n    const labels = [];\n    this.selectedOption = true;\n    for (let i = 0; i < this.data.length; i++) {\n      const element = this.data[i];\n      datos.push(element.value);\n      labels.push(element.name.substring(0, 26));\n    }\n    console.log(labels);\n    switch (value) {\n      case 'bar':\n        this.chartOption = {\n          tooltip: {\n            show: true\n          },\n          toolbox: {\n            feature: {\n              saveAsImage: {}\n            }\n          },\n          xAxis: {\n            type: 'category',\n            data: labels,\n\n          },\n          yAxis: {\n            type: 'value'\n          },\n          series: [\n            {\n              data: datos,\n              type: 'bar',\n              showBackground: true,\n              backgroundStyle: {\n                color: 'rgba(180, 180, 180, 0.2)'\n              },\n              label: {\n                show: true,\n                color: 'white',\n                fontSize: 12,\n              },\n            }\n          ]\n        };\n        break;\n      case 'pie':\n        this.chartOption = {\n          tooltip: {\n            show: true\n          },\n          toolbox: {\n            feature: {\n              saveAsImage: {}\n            }\n          },\n          legend: {\n            show: true\n          },\n          series:\n          {\n            type: 'pie',\n            radius: '75%',\n            center: ['50%', '50%'],\n            data: this.data,\n            label: {\n              position: 'outer',\n              alignTo: 'labelLine',\n              bleedMargin: 5\n            },\n            left: '33.3333%',\n            right: '33.3333%',\n            top: 0,\n            bottom: 0\n          },\n        };\n        break;\n      default:\n        break;\n    }\n  }\n\n}\n","export default \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"contenidos\\\">\\n    <hr>\\n    <div class=\\\"row justify-content-center\\\">\\n      <h3 class='text-center col-md-3'>Estadísticas</h3>\\n    </div>\\n    <hr>\\n  </div>\\n  <br>\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"form-group col-sm-6\\\">\\n      <label>Seleccione el gráfico a visualizar</label>\\n      <select class=\\\"form-control\\\" (change)=\\\"selectStats($event.target.value)\\\">\\n        <option value=\\\"-1\\\" hidden selected>--Seleccione una fuente de datos--</option>\\n        <option value=\\\"topEval\\\">Top Evaluadores</option>\\n        <option value=\\\"topSimpo\\\">Top simposios por Congreso</option>\\n        <option value=\\\"topSimpoCongre\\\">Top simposios General</option>\\n        <option value=\\\"topSimpoXEval\\\">Top simposios por Evaluadores</option>\\n        <option value=\\\"gEtario\\\">Grupo Etario por congreso</option>\\n        <option value=\\\"participSede\\\">Participantes por sede</option>\\n        <option value=\\\"califSimposios\\\">Calificaciones por Simposios</option>\\n        <option value=\\\"topEventos\\\">Top Eventos</option>\\n        <option value=\\\"cancelaciones\\\">Cancelaciones por evaluador general</option>\\n        <option value=\\\"cancelCongre\\\">Cancelaciones por evaluador por congreso</option>\\n\\n        <option value=\\\"estadoArt\\\">Estado artículos</option>\\n\\n\\n\\n      </select>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row justify-content-center pt-2\\\">\\n    <div class=\\\"form-group col-sm-6\\\">\\n      <label>Seleccione el tipo de gráfico</label>\\n      <select class=\\\"form-control\\\" (change)=\\\"selectGraph($event.target.value)\\\">\\n        <option value=\\\"-1\\\" hidden [selected]='!selectedOption'>--Seleccione un Gráfico--</option>\\n        <option value=\\\"pie\\\">Torta</option>\\n        <option value=\\\"bar\\\">Barras</option>\\n\\n      </select>\\n    </div>\\n  </div>\\n  <div class=\\\"row justify-content-between pt-3\\\">\\n    <div echarts [options]=\\\"chartOption\\\" class=\\\"demo-chart\\\"></div>\\n  </div>\\n\\n</div>\\n\\n\\n\";","export default \".demo-chart {\\n  height: 400px;\\n}\\n\\n.container-fluid {\\n  background-color: #F4F4F4;\\n\\n}\\n\\n.contenidos {\\n  padding-bottom: 3rem;\\n}\\n\\n.greyned {\\n  color: grey;\\n}\\n\\n.btn-primary {\\n  background-color: #3CAFE0;\\n  border: none;\\n}\\n\\nhr {\\n  border: #00609C solid 1px;\\n}\\n\\n@media (min-width: 768px) {\\n  hr {\\n    margin-left: 25%;\\n    margin-right: 25%;\\n\\n  }\\n\\n  .container-fluid {\\n    padding: 5rem;\\n  }\\n\\n}\\n\\n\\n\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GraphsComponent } from './graphs.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: GraphsComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GraphsRoutingModule { }\n","import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport const defaultThrottleConfig = {\n    leading: true,\n    trailing: false\n};\nexport function throttle(durationSelector, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleOperator(durationSelector, !!config.leading, !!config.trailing));\n}\nclass ThrottleOperator {\n    constructor(durationSelector, leading, trailing) {\n        this.durationSelector = durationSelector;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n    }\n}\nclass ThrottleSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, durationSelector, _leading, _trailing) {\n        super(destination);\n        this.destination = destination;\n        this.durationSelector = durationSelector;\n        this._leading = _leading;\n        this._trailing = _trailing;\n        this._hasValue = false;\n    }\n    _next(value) {\n        this._hasValue = true;\n        this._sendValue = value;\n        if (!this._throttled) {\n            if (this._leading) {\n                this.send();\n            }\n            else {\n                this.throttle(value);\n            }\n        }\n    }\n    send() {\n        const { _hasValue, _sendValue } = this;\n        if (_hasValue) {\n            this.destination.next(_sendValue);\n            this.throttle(_sendValue);\n        }\n        this._hasValue = false;\n        this._sendValue = undefined;\n    }\n    throttle(value) {\n        const duration = this.tryDurationSelector(value);\n        if (!!duration) {\n            this.add(this._throttled = innerSubscribe(duration, new SimpleInnerSubscriber(this)));\n        }\n    }\n    tryDurationSelector(value) {\n        try {\n            return this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return null;\n        }\n    }\n    throttlingDone() {\n        const { _throttled, _trailing } = this;\n        if (_throttled) {\n            _throttled.unsubscribe();\n        }\n        this._throttled = undefined;\n        if (_trailing) {\n            this.send();\n        }\n    }\n    notifyNext() {\n        this.throttlingDone();\n    }\n    notifyComplete() {\n        this.throttlingDone();\n    }\n}\n//# sourceMappingURL=throttle.js.map","import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { defaultThrottleConfig } from './throttle';\nexport function throttleTime(duration, scheduler = async, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\nclass ThrottleTimeOperator {\n    constructor(duration, scheduler, leading, trailing) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n    }\n}\nclass ThrottleTimeSubscriber extends Subscriber {\n    constructor(destination, duration, scheduler, leading, trailing) {\n        super(destination);\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n        this._hasTrailingValue = false;\n        this._trailingValue = null;\n    }\n    _next(value) {\n        if (this.throttled) {\n            if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n        else {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n            if (this.leading) {\n                this.destination.next(value);\n            }\n            else if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n    }\n    _complete() {\n        if (this._hasTrailingValue) {\n            this.destination.next(this._trailingValue);\n            this.destination.complete();\n        }\n        else {\n            this.destination.complete();\n        }\n    }\n    clearThrottle() {\n        const throttled = this.throttled;\n        if (throttled) {\n            if (this.trailing && this._hasTrailingValue) {\n                this.destination.next(this._trailingValue);\n                this._trailingValue = null;\n                this._hasTrailingValue = false;\n            }\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    }\n}\nfunction dispatchNext(arg) {\n    const { subscriber } = arg;\n    subscriber.clearThrottle();\n}\n//# sourceMappingURL=throttleTime.js.map","import { InjectionToken, EventEmitter, Directive, Inject, ElementRef, NgZone, Input, Output, NgModule } from '@angular/core';\nimport { __awaiter } from 'tslib';\nimport { of, EMPTY, Subject, asyncScheduler, Observable } from 'rxjs';\nimport { throttleTime, switchMap } from 'rxjs/operators';\n\nimport * as ɵngcc0 from '@angular/core';\nclass ChangeFilter {\n    constructor(changes) {\n        this.changes = changes;\n    }\n    static of(changes) {\n        return new ChangeFilter(changes);\n    }\n    notEmpty(key) {\n        if (this.changes[key]) {\n            const value = this.changes[key].currentValue;\n            if (value !== undefined && value !== null) {\n                return of(value);\n            }\n        }\n        return EMPTY;\n    }\n    has(key) {\n        if (this.changes[key]) {\n            const value = this.changes[key].currentValue;\n            return of(value);\n        }\n        return EMPTY;\n    }\n    notFirst(key) {\n        if (this.changes[key] && !this.changes[key].isFirstChange()) {\n            const value = this.changes[key].currentValue;\n            return of(value);\n        }\n        return EMPTY;\n    }\n    notFirstAndEmpty(key) {\n        if (this.changes[key] && !this.changes[key].isFirstChange()) {\n            const value = this.changes[key].currentValue;\n            if (value !== undefined && value !== null) {\n                return of(value);\n            }\n        }\n        return EMPTY;\n    }\n}\n\nconst NGX_ECHARTS_CONFIG = new InjectionToken('NGX_ECHARTS_CONFIG');\nclass NgxEchartsDirective {\n    constructor(config, el, ngZone) {\n        this.el = el;\n        this.ngZone = ngZone;\n        this.autoResize = true;\n        this.loadingType = 'default';\n        // ngx-echarts events\n        this.chartInit = new EventEmitter();\n        this.optionsError = new EventEmitter();\n        // echarts mouse events\n        this.chartClick = this.createLazyEvent('click');\n        this.chartDblClick = this.createLazyEvent('dblclick');\n        this.chartMouseDown = this.createLazyEvent('mousedown');\n        this.chartMouseMove = this.createLazyEvent('mousemove');\n        this.chartMouseUp = this.createLazyEvent('mouseup');\n        this.chartMouseOver = this.createLazyEvent('mouseover');\n        this.chartMouseOut = this.createLazyEvent('mouseout');\n        this.chartGlobalOut = this.createLazyEvent('globalout');\n        this.chartContextMenu = this.createLazyEvent('contextmenu');\n        // echarts mouse events\n        this.chartLegendSelectChanged = this.createLazyEvent('legendselectchanged');\n        this.chartLegendSelected = this.createLazyEvent('legendselected');\n        this.chartLegendUnselected = this.createLazyEvent('legendunselected');\n        this.chartLegendScroll = this.createLazyEvent('legendscroll');\n        this.chartDataZoom = this.createLazyEvent('datazoom');\n        this.chartDataRangeSelected = this.createLazyEvent('datarangeselected');\n        this.chartTimelineChanged = this.createLazyEvent('timelinechanged');\n        this.chartTimelinePlayChanged = this.createLazyEvent('timelineplaychanged');\n        this.chartRestore = this.createLazyEvent('restore');\n        this.chartDataViewChanged = this.createLazyEvent('dataviewchanged');\n        this.chartMagicTypeChanged = this.createLazyEvent('magictypechanged');\n        this.chartPieSelectChanged = this.createLazyEvent('pieselectchanged');\n        this.chartPieSelected = this.createLazyEvent('pieselected');\n        this.chartPieUnselected = this.createLazyEvent('pieunselected');\n        this.chartMapSelectChanged = this.createLazyEvent('mapselectchanged');\n        this.chartMapSelected = this.createLazyEvent('mapselected');\n        this.chartMapUnselected = this.createLazyEvent('mapunselected');\n        this.chartAxisAreaSelected = this.createLazyEvent('axisareaselected');\n        this.chartFocusNodeAdjacency = this.createLazyEvent('focusnodeadjacency');\n        this.chartUnfocusNodeAdjacency = this.createLazyEvent('unfocusnodeadjacency');\n        this.chartBrush = this.createLazyEvent('brush');\n        this.chartBrushEnd = this.createLazyEvent('brushend');\n        this.chartBrushSelected = this.createLazyEvent('brushselected');\n        this.chartRendered = this.createLazyEvent('rendered');\n        this.chartFinished = this.createLazyEvent('finished');\n        this.animationFrameID = null;\n        this.resize$ = new Subject();\n        this.echarts = config.echarts;\n    }\n    ngOnChanges(changes) {\n        const filter = ChangeFilter.of(changes);\n        filter.notFirstAndEmpty('options').subscribe((opt) => this.onOptionsChange(opt));\n        filter.notFirstAndEmpty('merge').subscribe((opt) => this.setOption(opt));\n        filter.has('loading').subscribe((v) => this.toggleLoading(!!v));\n        filter.notFirst('theme').subscribe(() => this.refreshChart());\n    }\n    ngOnInit() {\n        if (!window.ResizeObserver) {\n            throw new Error('please install a polyfill for ResizeObserver');\n        }\n        this.resizeSub = this.resize$.pipe(throttleTime(100, asyncScheduler, { leading: false, trailing: true })).subscribe(() => this.resize());\n        if (this.autoResize) {\n            this.resizeOb = this.ngZone.runOutsideAngular(() => new window.ResizeObserver(() => {\n                this.animationFrameID = window.requestAnimationFrame(() => this.resize$.next());\n            }));\n            this.resizeOb.observe(this.el.nativeElement);\n        }\n    }\n    ngOnDestroy() {\n        window.clearTimeout(this.initChartTimer);\n        if (this.resizeSub) {\n            this.resizeSub.unsubscribe();\n        }\n        if (this.animationFrameID) {\n            window.cancelAnimationFrame(this.animationFrameID);\n        }\n        if (this.resizeOb) {\n            this.resizeOb.unobserve(this.el.nativeElement);\n        }\n        this.dispose();\n    }\n    ngAfterViewInit() {\n        this.initChartTimer = window.setTimeout(() => this.initChart());\n    }\n    dispose() {\n        if (this.chart) {\n            if (!this.chart.isDisposed()) {\n                this.chart.dispose();\n            }\n            this.chart = null;\n        }\n    }\n    /**\n     * resize chart\n     */\n    resize() {\n        if (this.chart) {\n            this.chart.resize();\n        }\n    }\n    toggleLoading(loading) {\n        if (this.chart) {\n            loading\n                ? this.chart.showLoading(this.loadingType, this.loadingOpts)\n                : this.chart.hideLoading();\n        }\n    }\n    setOption(option, opts) {\n        if (this.chart) {\n            try {\n                this.chart.setOption(option, opts);\n            }\n            catch (e) {\n                console.error(e);\n                this.optionsError.emit(e);\n            }\n        }\n    }\n    /**\n     * dispose old chart and create a new one.\n     */\n    refreshChart() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.dispose();\n            yield this.initChart();\n        });\n    }\n    createChart() {\n        const dom = this.el.nativeElement;\n        if (window && window.getComputedStyle) {\n            const prop = window.getComputedStyle(dom, null).getPropertyValue('height');\n            if ((!prop || prop === '0px') && (!dom.style.height || dom.style.height === '0px')) {\n                dom.style.height = '400px';\n            }\n        }\n        // here a bit tricky: we check if the echarts module is provided as function returning native import('...') then use the promise\n        // otherwise create the function that imitates behaviour above with a provided as is module\n        return this.ngZone.runOutsideAngular(() => {\n            const load = typeof this.echarts === 'function' ? this.echarts : () => Promise.resolve(this.echarts);\n            return load().then(({ init }) => init(dom, this.theme, this.initOpts));\n        });\n    }\n    initChart() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.onOptionsChange(this.options);\n            if (this.merge && this.chart) {\n                this.setOption(this.merge);\n            }\n        });\n    }\n    onOptionsChange(opt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!opt) {\n                return;\n            }\n            if (this.chart) {\n                this.setOption(this.options, true);\n            }\n            else {\n                this.chart = yield this.createChart();\n                this.chartInit.emit(this.chart);\n                this.setOption(this.options, true);\n            }\n        });\n    }\n    // allows to lazily bind to only those events that are requested through the `@Output` by parent components\n    // see https://stackoverflow.com/questions/51787972/optimal-reentering-the-ngzone-from-eventemitter-event for more info\n    createLazyEvent(eventName) {\n        return this.chartInit.pipe(switchMap((chart) => new Observable((observer) => {\n            chart.on(eventName, (data) => this.ngZone.run(() => observer.next(data)));\n            return () => {\n                if (this.chart) {\n                    if (!this.chart.isDisposed()) {\n                        chart.off(eventName);\n                    }\n                }\n            };\n        })));\n    }\n}\nNgxEchartsDirective.ɵfac = function NgxEchartsDirective_Factory(t) { return new (t || NgxEchartsDirective)(ɵngcc0.ɵɵdirectiveInject(NGX_ECHARTS_CONFIG), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nNgxEchartsDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgxEchartsDirective, selectors: [[\"echarts\"], [\"\", \"echarts\", \"\"]], inputs: { autoResize: \"autoResize\", loadingType: \"loadingType\", options: \"options\", theme: \"theme\", loading: \"loading\", initOpts: \"initOpts\", merge: \"merge\", loadingOpts: \"loadingOpts\" }, outputs: { chartInit: \"chartInit\", optionsError: \"optionsError\", chartClick: \"chartClick\", chartDblClick: \"chartDblClick\", chartMouseDown: \"chartMouseDown\", chartMouseMove: \"chartMouseMove\", chartMouseUp: \"chartMouseUp\", chartMouseOver: \"chartMouseOver\", chartMouseOut: \"chartMouseOut\", chartGlobalOut: \"chartGlobalOut\", chartContextMenu: \"chartContextMenu\", chartLegendSelectChanged: \"chartLegendSelectChanged\", chartLegendSelected: \"chartLegendSelected\", chartLegendUnselected: \"chartLegendUnselected\", chartLegendScroll: \"chartLegendScroll\", chartDataZoom: \"chartDataZoom\", chartDataRangeSelected: \"chartDataRangeSelected\", chartTimelineChanged: \"chartTimelineChanged\", chartTimelinePlayChanged: \"chartTimelinePlayChanged\", chartRestore: \"chartRestore\", chartDataViewChanged: \"chartDataViewChanged\", chartMagicTypeChanged: \"chartMagicTypeChanged\", chartPieSelectChanged: \"chartPieSelectChanged\", chartPieSelected: \"chartPieSelected\", chartPieUnselected: \"chartPieUnselected\", chartMapSelectChanged: \"chartMapSelectChanged\", chartMapSelected: \"chartMapSelected\", chartMapUnselected: \"chartMapUnselected\", chartAxisAreaSelected: \"chartAxisAreaSelected\", chartFocusNodeAdjacency: \"chartFocusNodeAdjacency\", chartUnfocusNodeAdjacency: \"chartUnfocusNodeAdjacency\", chartBrush: \"chartBrush\", chartBrushEnd: \"chartBrushEnd\", chartBrushSelected: \"chartBrushSelected\", chartRendered: \"chartRendered\", chartFinished: \"chartFinished\" }, exportAs: [\"echarts\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nNgxEchartsDirective.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [NGX_ECHARTS_CONFIG,] }] },\n    { type: ElementRef },\n    { type: NgZone }\n];\nNgxEchartsDirective.propDecorators = {\n    options: [{ type: Input }],\n    theme: [{ type: Input }],\n    loading: [{ type: Input }],\n    initOpts: [{ type: Input }],\n    merge: [{ type: Input }],\n    autoResize: [{ type: Input }],\n    loadingType: [{ type: Input }],\n    loadingOpts: [{ type: Input }],\n    chartInit: [{ type: Output }],\n    optionsError: [{ type: Output }],\n    chartClick: [{ type: Output }],\n    chartDblClick: [{ type: Output }],\n    chartMouseDown: [{ type: Output }],\n    chartMouseMove: [{ type: Output }],\n    chartMouseUp: [{ type: Output }],\n    chartMouseOver: [{ type: Output }],\n    chartMouseOut: [{ type: Output }],\n    chartGlobalOut: [{ type: Output }],\n    chartContextMenu: [{ type: Output }],\n    chartLegendSelectChanged: [{ type: Output }],\n    chartLegendSelected: [{ type: Output }],\n    chartLegendUnselected: [{ type: Output }],\n    chartLegendScroll: [{ type: Output }],\n    chartDataZoom: [{ type: Output }],\n    chartDataRangeSelected: [{ type: Output }],\n    chartTimelineChanged: [{ type: Output }],\n    chartTimelinePlayChanged: [{ type: Output }],\n    chartRestore: [{ type: Output }],\n    chartDataViewChanged: [{ type: Output }],\n    chartMagicTypeChanged: [{ type: Output }],\n    chartPieSelectChanged: [{ type: Output }],\n    chartPieSelected: [{ type: Output }],\n    chartPieUnselected: [{ type: Output }],\n    chartMapSelectChanged: [{ type: Output }],\n    chartMapSelected: [{ type: Output }],\n    chartMapUnselected: [{ type: Output }],\n    chartAxisAreaSelected: [{ type: Output }],\n    chartFocusNodeAdjacency: [{ type: Output }],\n    chartUnfocusNodeAdjacency: [{ type: Output }],\n    chartBrush: [{ type: Output }],\n    chartBrushEnd: [{ type: Output }],\n    chartBrushSelected: [{ type: Output }],\n    chartRendered: [{ type: Output }],\n    chartFinished: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxEchartsDirective, [{\n        type: Directive,\n        args: [{\n                selector: 'echarts, [echarts]',\n                exportAs: 'echarts'\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [NGX_ECHARTS_CONFIG]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { autoResize: [{\n            type: Input\n        }], loadingType: [{\n            type: Input\n        }], chartInit: [{\n            type: Output\n        }], optionsError: [{\n            type: Output\n        }], chartClick: [{\n            type: Output\n        }], chartDblClick: [{\n            type: Output\n        }], chartMouseDown: [{\n            type: Output\n        }], chartMouseMove: [{\n            type: Output\n        }], chartMouseUp: [{\n            type: Output\n        }], chartMouseOver: [{\n            type: Output\n        }], chartMouseOut: [{\n            type: Output\n        }], chartGlobalOut: [{\n            type: Output\n        }], chartContextMenu: [{\n            type: Output\n        }], chartLegendSelectChanged: [{\n            type: Output\n        }], chartLegendSelected: [{\n            type: Output\n        }], chartLegendUnselected: [{\n            type: Output\n        }], chartLegendScroll: [{\n            type: Output\n        }], chartDataZoom: [{\n            type: Output\n        }], chartDataRangeSelected: [{\n            type: Output\n        }], chartTimelineChanged: [{\n            type: Output\n        }], chartTimelinePlayChanged: [{\n            type: Output\n        }], chartRestore: [{\n            type: Output\n        }], chartDataViewChanged: [{\n            type: Output\n        }], chartMagicTypeChanged: [{\n            type: Output\n        }], chartPieSelectChanged: [{\n            type: Output\n        }], chartPieSelected: [{\n            type: Output\n        }], chartPieUnselected: [{\n            type: Output\n        }], chartMapSelectChanged: [{\n            type: Output\n        }], chartMapSelected: [{\n            type: Output\n        }], chartMapUnselected: [{\n            type: Output\n        }], chartAxisAreaSelected: [{\n            type: Output\n        }], chartFocusNodeAdjacency: [{\n            type: Output\n        }], chartUnfocusNodeAdjacency: [{\n            type: Output\n        }], chartBrush: [{\n            type: Output\n        }], chartBrushEnd: [{\n            type: Output\n        }], chartBrushSelected: [{\n            type: Output\n        }], chartRendered: [{\n            type: Output\n        }], chartFinished: [{\n            type: Output\n        }], options: [{\n            type: Input\n        }], theme: [{\n            type: Input\n        }], loading: [{\n            type: Input\n        }], initOpts: [{\n            type: Input\n        }], merge: [{\n            type: Input\n        }], loadingOpts: [{\n            type: Input\n        }] }); })();\n\nclass NgxEchartsModule {\n    static forRoot(config) {\n        return {\n            ngModule: NgxEchartsModule,\n            providers: [{ provide: NGX_ECHARTS_CONFIG, useValue: config }],\n        };\n    }\n    static forChild() {\n        return {\n            ngModule: NgxEchartsModule,\n        };\n    }\n}\nNgxEchartsModule.ɵfac = function NgxEchartsModule_Factory(t) { return new (t || NgxEchartsModule)(); };\nNgxEchartsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxEchartsModule });\nNgxEchartsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxEchartsModule, { declarations: [NgxEchartsDirective], exports: [NgxEchartsDirective] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxEchartsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [],\n                declarations: [NgxEchartsDirective],\n                exports: [NgxEchartsDirective]\n            }]\n    }], null, null); })();\n\n/*\n * Public API Surface of ngx-echarts\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NGX_ECHARTS_CONFIG, NgxEchartsDirective, NgxEchartsModule };\n\n//# sourceMappingURL=ngx-echarts.js.map","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GraphsRoutingModule } from './graphs-routing.module';\nimport { GraphsComponent } from './graphs.component';\nimport { NgxEchartsModule } from 'ngx-echarts';\n\n\n@NgModule({\n  declarations: [\n    GraphsComponent\n  ],\n  imports: [\n    CommonModule,\n    GraphsRoutingModule,\n    NgxEchartsModule.forRoot({\n      /**\n       * This will import all modules from echarts.\n       * If you only need custom modules,\n       * please refer to [Custom Build] section.\n       */\n      echarts: () => import('echarts'), // or import('./path-to-my-custom-echarts')\n    }),\n  ]\n})\nexport class GraphsModule { }\n"],"sourceRoot":"webpack:///"}