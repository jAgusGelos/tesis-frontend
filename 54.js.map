{"version":3,"sources":["./src/app/pages/ver-schedule/ver-schedule.component.ts","./src/app/pages/ver-schedule/ver-schedule.component.html","./src/app/pages/ver-schedule/ver-schedule.component.css","./src/app/pages/ver-schedule/ver-schedule-routing.module.ts","./src/app/pages/ver-schedule/ver-schedule.module.ts"],"names":["locale","dateAdapter","calendarService","formBuild","paperService","congresService","articulosService","router","roomService","toastr","route","CalendarView","view","Week","viewDate","Date","viewDays","refresh","Subject","hourSegments","weekStartsOn","startsWithToday","activeDayIsOpen","excludeDays","dayStartHour","dayEndHour","submitted","minDate","maxDate","endOfDay","addMonths","prevBtnDisabled","nextBtnDisabled","plenaria","submittedPlen","evento","idEvento","date","startHour","startMinute","endHour","endMinute","title","content","idSimposio","idArticulo","paperList","showList","hours","Array","from","length","_","i","minutes","simposios","roomList","loading","idAula","min","max","eventosCompletos","idCongress","scores","actions","this","snapshot","params","id","routeReuseStrategy","shouldReuseRoute","segmentModifier","segment","isDisabled","isDateValid","bind","eventModifier","event","start","adjustViewDays","dateOrViewChanged","paramMap","subscribe","get","getSimposios","getArticles","getRooms","getCongres","formEvento","group","values","formPlenaria","plenariaValues","formCalif","calificacion","puntuacion","getCongressById","res","congress","data","fechaI","fechaInicioExposiciones","split","fechaF","fechaFinExposiciones","fechaIn","fechaFin","setDate","getDate","getEventos","getRoomEvents","events","map","elem","aux","startDays","end","endDays","idARticulo","color","primary","secondary","status","isClickable","console","log","getCameraReady","slice","getSimposiosActivos","required","desc","idPaper","currentWidth","window","innerWidth","Day","changeDate","action","eventoCompleto","find","x","toLocaleDateString","toLocaleTimeString","document","getElementById","click","auxDate","form","controls","op","value","calificar","success","item","filter","selector","template","providers","provide","useClass","routes","path","component","VerScheduleRoutingModule","imports","forChild","exports","VerScheduleModule","declarations","forRoot","useFactory","headerDateFormat","logEnabled","useValue"],"mappings":"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","file":"54.js","sourcesContent":["import { Component, HostListener, Inject, LOCALE_ID, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, SelectMultipleControlValueAccessor, Validators } from '@angular/forms';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport {\n  CalendarView,\n  CalendarDateFormatter,\n  DateAdapter\n} from 'angular-calendar';\nimport {\n  addPeriod,\n  CalendarSchedulerEvent,\n  CalendarSchedulerEventAction,\n  CalendarSchedulerEventStatus,\n  DAYS_IN_WEEK,\n  endOfPeriod,\n  SchedulerDateFormatter,\n  SchedulerEventTimesChangedEvent,\n  SchedulerViewDay,\n  SchedulerViewHour,\n  SchedulerViewHourSegment,\n  startOfPeriod,\n  subPeriod\n} from 'angular-calendar-scheduler';\nimport { addMonths, endOfDay, parseISO } from 'date-fns';\nimport * as moment from 'moment';\nimport { Toast, ToastrService } from 'ngx-toastr';\nimport { Subject } from 'rxjs';\nimport { CustomToastComponent } from 'src/app/core/components/custom-toast/custom-toast.component';\nimport { ArticulosService } from 'src/app/core/services/articulos.service';\nimport { CongressService } from 'src/app/core/services/congress.service';\nimport { PaperService } from 'src/app/core/services/paper.service';\nimport { RoomService } from 'src/app/core/services/room.service';\nimport { ScheduleCalendarService } from 'src/app/core/services/schedule-calendar.service';\n\n\n@Component({\n  selector: 'app-ver-schedule',\n  templateUrl: './ver-schedule.component.html',\n  styleUrls: ['./ver-schedule.component.css'],\n  providers: [\n    {\n      provide: CalendarDateFormatter,\n      useClass: SchedulerDateFormatter,\n    },\n  ],\n})\nexport class VerScheduleComponent implements OnInit {\n\n  CalendarView = CalendarView;\n\n  view: CalendarView = CalendarView.Week;\n  viewDate: Date = new Date(); // Igual a minDate!!\n  viewDays: number = DAYS_IN_WEEK;\n  refresh: Subject<any> = new Subject();\n  locale = 'en';\n  hourSegments = 3;\n  weekStartsOn = 1;\n  startsWithToday = true;\n  activeDayIsOpen = true;\n  excludeDays: number[] = []; // [0];\n  dayStartHour = 8;\n  dayEndHour = 20;\n  submitted = false;\n\n  // Cambiar estos dos por la fecha de inicio y fin del congreso.\n  minDate: Date = new Date();\n  maxDate: Date = endOfDay(addMonths(new Date(), 1));\n  dayModifier: Function;\n  hourModifier: Function;\n  segmentModifier: Function;\n  eventModifier: Function;\n  prevBtnDisabled = false;\n  nextBtnDisabled = false;\n  formEvento: FormGroup;\n  plenaria = false;\n  submittedPlen = false;\n  congress: any;\n\n  evento = {\n    idEvento: null,\n    date: '',\n    startHour: '',\n    startMinute: '',\n    endHour: '',\n    endMinute: '',\n    title: '',\n    content: '',\n    idSimposio: null,\n    idArticulo: null\n  };\n\n  paperList = [];\n  showList = [];\n  hours = Array.from({ length: 15 }, (_, i) => i + 8);\n  minutes = Array.from({ length: 12 }, (_, i) => i * 5);\n  simposios = [];\n  roomList = [];\n  loading = false;\n  idAula = '';\n  min = '';\n  max = '';\n  eventosCompletos = [];\n  formPlenaria: FormGroup;\n  formCalif: FormGroup;\n  idCongress = '';\n  scores = Array.from({ length: 10 }, (_, i) => i + 1);\n\n  actions: CalendarSchedulerEventAction[] = [];\n\n  events: CalendarSchedulerEvent[];\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any): void {\n    this.adjustViewDays();\n  }\n\n  constructor(@Inject(LOCALE_ID) locale: string,\n              private dateAdapter: DateAdapter,\n              private calendarService: ScheduleCalendarService,\n              private formBuild: FormBuilder,\n              private paperService: PaperService,\n              private congresService: CongressService,\n              private articulosService: ArticulosService,\n              private router: Router,\n              private roomService: RoomService,\n              private toastr: ToastrService,\n              private route: ActivatedRoute) {\n    this.idCongress =  this.route.snapshot.params.id;\n    this.router.routeReuseStrategy.shouldReuseRoute = () => {\n      return false;\n    };\n    this.locale = locale;\n\n    this.segmentModifier = ((segment: SchedulerViewHourSegment): void => {\n      segment.isDisabled = !this.isDateValid(segment.date);\n    }).bind(this);\n\n    this.eventModifier = ((event: CalendarSchedulerEvent): void => {\n      event.isDisabled = !this.isDateValid(event.start);\n    }).bind(this);\n\n    this.adjustViewDays();\n    this.dateOrViewChanged();\n  }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(\n      (params: ParamMap) => {\n        this.idCongress = params.get('id');\n        this.getSimposios();\n        this.getArticles();\n        this.getRooms();\n        this.getCongres();\n        this.formEvento = this.formBuild.group(this.values());\n        this.formPlenaria = this.formBuild.group(this.plenariaValues());\n        this.formCalif = this.formBuild.group({\n          calificacion: [''],\n          puntuacion: [1],\n          idEvento: ['']\n        });\n      });\n\n  }\n\n\n  getCongres(): void {\n    this.congresService.getCongressById(this.idCongress).subscribe((res: any) => {\n      this.congress = res.data[0];\n      const fechaI = res.data[0].fechaInicioExposiciones.split(' ')[0].split('/');\n      const fechaF = res.data[0].fechaFinExposiciones.split(' ')[0].split('/');\n\n      const fechaIn = new Date(fechaI[2], fechaI[1] - 1, fechaI[0]);\n      const fechaFin = new Date(fechaF[2], fechaF[1] - 1, fechaF[0]);\n      this.viewDate = fechaIn;\n      this.minDate = fechaIn;\n      this.maxDate.setDate(fechaFin.getDate());\n      this.min = `${fechaI[2]}-${fechaI[1]}-${fechaI[0]}`;\n      this.max = `${fechaF[2]}-${fechaF[1]}-${fechaF[0]}`;\n    });\n  }\n\n  aulaSelected(idAula: any): void {\n    // llamar a los eventos del aula\n    this.idAula = idAula;\n\n    this.loading = true;\n    this.getEventos();\n  }\n\n  getEventos(): void {\n    // con el idAula Llama a los eventos\n    this.calendarService.getRoomEvents(+this.idAula, +this.idCongress).subscribe((res: any) => {\n      this.eventosCompletos = res.data;\n      this.events = res.data.map((elem: any) => {\n        let aux = elem.start.split(' ');\n        const startDays = aux[0].split('/');\n        const startHour = aux[1].split(':');\n\n        aux = elem.end.split(' ');\n        const endDays = aux[0].split('/');\n        const endHour = aux[1].split(':');\n\n        return {\n          id: elem.idEvento,\n          title: elem.title,\n          content: elem.content,\n          idSimposio: elem.idSimposio,\n          idArticulo: elem.idARticulo,\n          start: new Date(startDays[2], startDays[1] - 1, startDays[0], startHour[0], startHour[1], 0),\n          end: new Date(endDays[2], endDays[1] - 1, endDays[0], endHour[0], endHour[1], 0),\n          color: { primary: '#E0E0E0', secondary: '#EEEEEE' },\n          actions: this.actions,\n          status: 'ok' as CalendarSchedulerEventStatus,\n          isClickable: true,\n          isDisabled: false\n        } as CalendarSchedulerEvent;\n      });\n      console.log(this.events);\n      this.loading = false;\n    });\n  }\n\n  getRooms(): void {\n    this.roomService.getRooms().subscribe((res: any) => {\n      this.roomList = res.data[0];\n    });\n  }\n\n  getArticles(): void {\n    this.articulosService.getCameraReady().subscribe((res: any) => {\n      this.paperList = res.data;\n      this.showList = this.paperList.slice();\n    });\n  }\n\n  getSimposios(): void {\n    this.paperService.getSimposiosActivos().subscribe((res: any) => {\n      this.simposios = res.data;\n    });\n  }\n\n  plenariaValues(): any {\n    return {\n      idEvento: [this.evento.idEvento || null],\n      date: [this.evento.date || ''],\n      startHour: [+this.evento.startHour || 0],\n      endHour: [+this.evento.endHour || 0],\n      startMinute: [+this.evento.startMinute || 0],\n      endMinute: [+this.evento.endMinute || 0],\n      title: [this.evento.title || '', [Validators.required]],\n      desc: [this.evento.content || '', [Validators.required]],\n    };\n  }\n\n  values(): any {\n    return {\n      idEvento: [this.evento.idEvento || null],\n      date: [this.evento.date || ''],\n      startHour: [+this.evento.startHour || 0],\n      endHour: [+this.evento.endHour || 0],\n      startMinute: [+this.evento.startMinute || 0],\n      endMinute: [+this.evento.endMinute || 0],\n      title: [this.evento.title, [Validators.required]],\n      desc: [this.evento.content || '', [Validators.required]],\n      idSimposio: [this.evento.idSimposio || '', [Validators.required]],\n      idPaper: [this.evento.idArticulo || '', [Validators.required]]\n    };\n  }\n\n  adjustViewDays(): void {\n    const currentWidth: number = window.innerWidth;\n    if (currentWidth <= 450) {\n      this.viewDays = 1;\n    } else if (currentWidth <= 768) {\n      this.viewDays = 3;\n    } else {\n      this.viewDays = DAYS_IN_WEEK;\n    }\n  }\n\n  changeDate(date: Date): void {\n    console.log('changeDate', date);\n    this.viewDate = date;\n    this.dateOrViewChanged();\n  }\n\n  changeView(view: CalendarView): void {\n    console.log('changeView', view);\n    this.view = view;\n    this.dateOrViewChanged();\n  }\n\n  dateOrViewChanged(): void {\n    if (this.startsWithToday) {\n      this.prevBtnDisabled = !this.isDateValid(\n        subPeriod(\n          this.dateAdapter,\n          CalendarView.Day /*this.view*/,\n          this.viewDate,\n          1\n        )\n      );\n      this.nextBtnDisabled = !this.isDateValid(\n        addPeriod(\n          this.dateAdapter,\n          CalendarView.Day /*this.view*/,\n          this.viewDate,\n          1\n        )\n      );\n    } else {\n      this.prevBtnDisabled = !this.isDateValid(\n        endOfPeriod(\n          this.dateAdapter,\n          CalendarView.Day /*this.view*/,\n          subPeriod(\n            this.dateAdapter,\n            CalendarView.Day /*this.view*/,\n            this.viewDate,\n            1\n          )\n        )\n      );\n      this.nextBtnDisabled = !this.isDateValid(\n        startOfPeriod(\n          this.dateAdapter,\n          CalendarView.Day /*this.view*/,\n          addPeriod(\n            this.dateAdapter,\n            CalendarView.Day /*this.view*/,\n            this.viewDate,\n            1\n          )\n        )\n      );\n    }\n\n    if (this.viewDate < this.minDate) {\n      this.changeDate(this.minDate);\n    } else if (this.viewDate > this.maxDate) {\n      this.changeDate(this.maxDate);\n    }\n  }\n\n  private isDateValid(date: Date): boolean {\n    return /*isToday(date) ||*/ date >= this.minDate && date <= this.maxDate;\n  }\n\n  eventClicked(action: string, event: CalendarSchedulerEvent): void {\n    const eventoCompleto = this.eventosCompletos.find((x: any) => {\n      return x.idEvento === event.id;\n    });\n    this.evento = {\n      ...this.evento,\n      idEvento: event.id || '',\n      date: event.start.toLocaleDateString(),\n      startHour: event.start.toLocaleTimeString().split(':')[0],\n      startMinute: event.start.toLocaleTimeString().split(':')[1],\n      endHour: event.end.toLocaleTimeString().split(':')[0],\n      endMinute: event.end.toLocaleTimeString().split(':')[1],\n      title: event.title,\n      content: eventoCompleto.content,\n      idArticulo: eventoCompleto.idArticulo,\n      idSimposio: eventoCompleto.idSimposio\n    };\n    this.formCalif = this.formBuild.group({\n      calificacion: [''],\n      puntuacion: [1],\n      idEvento: [this.evento.idEvento]\n    });\n    if (this.evento.idSimposio !== null) {\n      this.formEvento = this.formBuild.group(this.values());\n      const btnDetalle = document.getElementById('activar-modal');\n      btnDetalle.click();\n    } else {\n      const strDate = this.evento.date;\n      const auxDate = strDate.split('/');\n      this.evento.date = auxDate[2] + '-' + auxDate[1] + '-' + auxDate[0];\n      this.formPlenaria = this.formBuild.group(this.plenariaValues());\n      const btnDetalle = document.getElementById('btnPLenaria');\n      btnDetalle.click();\n    }\n\n  }\n\n  calificar(): void {\n    const form = this.formCalif.controls;\n    const op = {\n      idEvento: form.idEvento.value,\n      puntuacion: form.puntuacion.value,\n      calificacion: form.calificacion.value\n    };\n    this.calendarService.calificar(op).subscribe((res: any) => {\n      this.toastr.success('Gracias por calificar.');\n    });\n\n  }\n\n  simposioSeleccionado(item: any): void {\n    // Aca tengo que cargar los papers que correspondan a ese simposio;\n    this.showList = this.paperList.filter((elem: any) => {\n      if (+elem.idSimposio === +item) {\n        // tslint:disable-next-line: prefer-for-of\n        for (let i = 0; i < this.eventosCompletos.length; i++) {\n          const element = this.eventosCompletos[i];\n          if (element.idArticulo === elem.idArticulo && this.evento.idArticulo !== elem.idArticulo) {\n            return false;\n          }\n        }\n        return true;\n      }\n    });\n  }\n\n  activarModalCalif(): void {\n    const btnDetalle = document.getElementById('activarModalCalif');\n    btnDetalle.click();\n  }\n}\n\n","export default \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"contenidos\\\">\\n    <hr>\\n    <h3 class='text-center'>Agenda del Congreso</h3>\\n    <h6 class='text-center'>{{congress.nombre}}</h6>\\n    <hr>\\n  </div>\\n  <br>\\n  <div class=\\\"row py-3 \\\">\\n    <div class=\\\"col-md-2\\\">\\n      <label for=\\\"\\\">Seleccione un Aula:</label>\\n    </div>\\n    <div class=\\\"col-md-4  mr-auto\\\">\\n      <div class=\\\"col-sm-12\\\">\\n        <select name=\\\"eval\\\" class=\\\"form-control\\\" (change)=\\\"aulaSelected($event.target.value)\\\">\\n          <option selected disabled> -- Seleccione un Aula --</option>\\n          <option *ngFor=\\\"let room of roomList\\\" value='{{room.id}}'>{{ room.nombre }} </option>\\n        </select>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" id=\\\"loading\\\">\\n    <div class=\\\"row justify-content-center\\\" *ngIf=\\\"loading\\\">\\n      <div class=\\\"spinner-border text-primary\\\" role=\\\"status\\\">\\n        <span class=\\\"sr-only\\\">Loading...</span>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"events && !loading\\\">\\n    <div class=\\\"calendar-container\\\">\\n      <div class=\\\"row mt-4\\\">\\n        <div class=\\\"col-md-4 text-center\\\">\\n          <h3 class=\\\"mt-0\\\">{{ viewDate | calendarSchedulerDate:(view +\\n            'ViewTitle'):locale:weekStartsOn:excludeDays:viewDays:startsWithToday }}</h3>\\n        </div>\\n        <div class=\\\"col-md-4 text-right\\\">\\n          <div class=\\\"btn-group m-1\\\" role=\\\"group\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" mwlCalendarPreviousView [view]=\\\"view\\\" [(viewDate)]=\\\"viewDate\\\"\\n              [daysInWeek]=\\\"viewDays\\\" [excludeDays]=\\\"excludeDays\\\" [disabled]=\\\"prevBtnDisabled\\\"\\n              (viewDateChange)=\\\"dateOrViewChanged()\\\">\\n              <span class=\\\"valign-center\\\">\\n                <i title=\\\"Precedente\\\" class=\\\"material-icons md-18\\\">Anterior</i>\\n              </span>\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-light\\\" mwlCalendarToday [(viewDate)]=\\\"viewDate\\\"\\n              (viewDateChange)=\\\"dateOrViewChanged()\\\" disabled>\\n              <span class=\\\"valign-center\\\">\\n                <i title=\\\"Hoy\\\" class=\\\"material-icons md-18\\\"></i>\\n              </span>\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" mwlCalendarNextView [view]=\\\"view\\\" [(viewDate)]=\\\"viewDate\\\"\\n              [daysInWeek]=\\\"viewDays\\\" [excludeDays]=\\\"excludeDays\\\" [disabled]=\\\"nextBtnDisabled\\\"\\n              (viewDateChange)=\\\"dateOrViewChanged()\\\">\\n              <span class=\\\"valign-center\\\">\\n                <i title=\\\"Siguiente\\\" class=\\\"material-icons md-18\\\">Siguiente</i>\\n              </span>\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n      <br>\\n      <div [ngSwitch]=\\\"view\\\">\\n        <calendar-scheduler-view *ngSwitchCase=\\\"CalendarView.Week\\\" [viewDate]=\\\"viewDate\\\" [events]=\\\"events\\\"\\n          [locale]=\\\"locale\\\" [viewDays]=\\\"viewDays\\\" [weekStartsOn]=\\\"weekStartsOn\\\" [excludeDays]=\\\"excludeDays\\\"\\n          [startsWithToday]=\\\"startsWithToday\\\" [hourSegments]=\\\"hourSegments\\\" [dayStartHour]=\\\"dayStartHour\\\"\\n          [dayEndHour]=\\\"dayEndHour\\\" [dayModifier]=\\\"dayModifier\\\" [hourModifier]=\\\"hourModifier\\\"\\n          [segmentModifier]=\\\"segmentModifier\\\" [eventModifier]=\\\"eventModifier\\\" [showEventActions]=\\\"true\\\"\\n          [showSegmentHour]=\\\"true\\\" [zoomEventOnHover]=\\\"true\\\" (eventClicked)=\\\"eventClicked('Clicked', $event.event)\\\"\\n          [refresh]=\\\"refresh\\\">\\n        </calendar-scheduler-view>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n\\n<!-- Button trigger modal -->\\n<button type=\\\"button\\\" hidden class=\\\"btn btn-primary\\\" data-bs-toggle=\\\"modal\\\" data-bs-target=\\\"#eventModal\\\"\\n  id='activar-modal'>\\n  Launch demo modal\\n</button>\\n\\n<!-- Button trigger modal caluif-->\\n<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-bs-toggle=\\\"modal\\\" data-bs-target=\\\"#calificationModal\\\"  hidden id=\\\"activarModalCalif\\\">\\nBoton oculto\\n</button>\\n\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"eventModal\\\" tabindex=\\\"-1\\\" aria-labelledby=\\\"eventModalLabel\\\" aria-hidden=\\\"true\\\"\\n  *ngIf=\\\"formEvento\\\">\\n  <div class=\\\"modal-dialog  modal-xl\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"eventModalLabel\\\">Información del evento</h5>\\n        <button type=\\\"button\\\" class=\\\"btn-close\\\" data-bs-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"></button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]='formEvento'>\\n          <!-- date -->\\n          <div class='form-group row'>\\n            <label class='col-form-label col-sm-2 col-sm-offset-2' for='date'>Fecha: </label>\\n            <div class='col-sm-6'>\\n              <label class='col-form-label col-sm-2 col-sm-offset-2' for='date'>{{evento.date}}</label>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group row\\\">\\n            <label class='col-form-label col-sm-2 col-md-offset-2' for='startHour'>Hora de inicio: <span\\n                class='text-danger'>*</span></label>\\n            <div class='col-sm-6 row'>\\n              <div class=\\\"col-md-3\\\">\\n                <select class='col-sm-3 form-select' disabled name=\\\"startHour\\\" formControlName=\\\"startHour\\\" [ngClass]=\\\"{'is-invalid': ((formEvento.controls.startHour.touched || submitted) && formEvento.controls.startHour.value === '')\\n            && formEvento.controls.startHour.errors}\\\">\\n                  <option *ngFor=\\\"let opt of hours\\\" value={{opt}}>\\n                    ‌{{ opt }}\\n                  </option>\\n                </select>\\n                <span class='text-danger'\\n                  *ngIf='(formEvento.controls.startHour.touched || submitted) && formEvento.controls.startHour.errors?.required'>\\n                  Requerido\\n                </span>\\n              </div>\\n              <div class=\\\"col-md-3\\\">\\n                <select class='col-sm-3 form-select' disabled name=\\\"startMinute\\\" formControlName=\\\"startMinute\\\"\\n                  [ngClass]=\\\"{'is-invalid': ((formEvento.controls.startMinute.touched || submitted) && formEvento.controls.startMinute.value === '')\\n                  && formEvento.controls.startMinute.errors}\\\">\\n                  <option *ngFor=\\\"let opt of minutes\\\" value={{opt}}>\\n                    ‌{{ opt === 0 ? '00': opt }}\\n                  </option>\\n                </select>\\n                <span class='text-danger'\\n                  *ngIf='(formEvento.controls.startMinute.touched || submitted) && formEvento.controls.startMinute.errors?.required'>\\n                  Requerido\\n                </span>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group row\\\">\\n            <label class='col-form-label col-sm-2 col-md-offset-2' for='endHour'>Hora de Fin: <span\\n                class='text-danger'>*</span></label>\\n            <div class='col-sm-6 row'>\\n              <div class=\\\"col-md-3\\\">\\n                <select class='col-sm-3 form-select' name=\\\"endHour\\\" disabled formControlName=\\\"endHour\\\" [ngClass]=\\\"{'is-invalid': ((formEvento.controls.endHour.touched || submitted) && formEvento.controls.endHour.value === '')\\n            && formEvento.controls.endHour.errors}\\\">\\n                  <option *ngFor=\\\"let opt of hours\\\" value={{opt}}>\\n                    ‌{{ opt }}\\n                  </option>\\n                </select>\\n                <span class='text-danger'\\n                  *ngIf='(formEvento.controls.endHour.touched || submitted) && formEvento.controls.endHour.errors?.required'>\\n                  Requerido\\n                </span>\\n              </div>\\n              <div class=\\\"col-md-3\\\">\\n                <select class='col-sm-3 form-select' name=\\\"endMinute\\\" disabled formControlName=\\\"endMinute\\\" [ngClass]=\\\"{'is-invalid': ((formEvento.controls.endMinute.touched || submitted) && formEvento.controls.endMinute.value === '')\\n                  && formEvento.controls.endMinute.errors}\\\">\\n                  <option *ngFor=\\\"let opt of minutes\\\" value={{opt}}>\\n                    ‌{{ opt === 0 ? '00': opt }}\\n                  </option>\\n                </select>\\n                <span class='text-danger'\\n                  *ngIf='(formEvento.controls.endMinute.touched || submitted) && formEvento.controls.endMinute.errors?.required'>\\n                  Requerido\\n                </span>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <!-- idSimposio -->\\n          <div class='form-group row'>\\n            <label class='col-form-label col-sm-2 col-sm-offset-2' for='idSimposio'>Simposio: <span\\n                class='text-danger'>*</span></label>\\n            <div class='col-sm-6'>\\n              <select class='col-sm-4 form-select' name=\\\"idSimposio\\\" disabled formControlName=\\\"idSimposio\\\"\\n                (change)='simposioSeleccionado($event.target.value)' [ngClass]=\\\"{'is-invalid': ((formEvento.controls.idSimposio.touched || submitted) && formEvento.controls.idSimposio.value === '')\\n          && formEvento.controls.idSimposio.errors}\\\">\\n                <option *ngFor=\\\"let opt of simposios\\\" value={{opt.id}}>\\n                  ‌{{ opt.descripcion }}\\n                </option>\\n              </select>\\n              <span class='text-danger'\\n                *ngIf='(formEvento.controls.idSimposio.touched || submitted) && formEvento.controls.idSimposio.errors?.required'>\\n                Requerido\\n              </span>\\n            </div>\\n          </div>\\n\\n          <!-- idPaper -->\\n          <div class='form-group row' *ngIf=\\\"paperList\\\">\\n            <label class='col-form-label col-sm-2 col-sm-offset-2' for='idPaper'>Paper: <span\\n                class='text-danger'>*</span></label>\\n            <div class='col-sm-6'>\\n              <select class='col-sm-4 form-select' name=\\\"idPaper\\\" disabled formControlName=\\\"idPaper\\\" [ngClass]=\\\"{'is-invalid': ((formEvento.controls.idPaper.touched || submitted) && formEvento.controls.idPaper.value === '')\\n          && formEvento.controls.idPaper.errors}\\\">\\n                <option selected hidden>-- Seleccione un Paper --</option>\\n                <option *ngFor=\\\"let opt of showList\\\" value={{opt.idArticulo}}>\\n                  ‌{{ opt.nombreArticulo }}\\n                </option>\\n              </select>\\n              <span class='text-danger'\\n                *ngIf='(formEvento.controls.idPaper.touched || submitted) && formEvento.controls.idPaper.errors?.required'>\\n                Requerido\\n              </span>\\n            </div>\\n          </div>\\n\\n          <!-- title -->\\n          <div class='form-group row'>\\n            <label class='col-form-label col-sm-2 col-sm-offset-2' for='title'>Titulo: <span\\n                class='text-danger'>*</span></label>\\n            <div class='col-sm-6'>\\n              <input type='text' class='form-control' formControlName='title' disabled [ngClass]=\\\"{'is-invalid': (formEvento.controls.title.touched || submitted)\\n                  && formEvento.controls.title.errors}\\\" onclick='this.select()' />\\n              <span class='text-danger'\\n                *ngIf='(formEvento.controls.title.touched || submitted) && formEvento.controls.title.errors?.required'>\\n                Requerido\\n              </span>\\n            </div>\\n          </div>\\n\\n          <!-- desc -->\\n          <div class='form-group row'>\\n            <label class='col-form-label col-sm-2 col-sm-offset-2' for='desc'>Descripción: <span\\n                class='text-danger'>*</span></label>\\n            <div class='col-sm-6'>\\n              <input type='text' class='form-control' formControlName='desc' disabled [ngClass]=\\\"{'is-invalid': (formEvento.controls.desc.touched || submitted)\\n                  && formEvento.controls.desc.errors}\\\" onclick='this.select()' />\\n              <span class='text-danger'\\n                *ngIf='(formEvento.controls.desc.touched || submitted) && formEvento.controls.desc.errors?.required'>\\n                Requerido\\n              </span>\\n            </div>\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-bs-dismiss=\\\"modal\\\" id='dismiss'>Aceptar</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-bs-dismiss=\\\"modal\\\" id='dismiss' (click)=\\\"activarModalCalif()\\\"\\n              id='activar-modal'>\\n              Dejar una calificación\\n            </button>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"plenariaModal\\\" tabindex=\\\"-1\\\" aria-labelledby=\\\"eventModalLabel\\\" aria-hidden=\\\"true\\\"\\n  *ngIf=\\\"formPlenaria\\\">\\n  <div class=\\\"modal-dialog  modal-xl\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"eventModalLabel\\\">Información del Evento</h5>\\n        <button type=\\\"button\\\" class=\\\"btn-close\\\" data-bs-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"></button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]='formPlenaria'>\\n          <!-- date -->\\n          <div class='form-group row'>\\n            <label class='col-form-label col-sm-2 col-sm-offset-2' for='date'>Fecha: </label>\\n            <div class='col-sm-6'>\\n              <input type='date' min={{min}} max={{max}} value={{min}} disabled class='form-control'\\n                formControlName='date' [ngClass]=\\\"{'is-invalid': (formPlenaria.controls.date.touched || submitted)\\n                  && formPlenaria.controls.date.errors}\\\" onclick='this.select()' />\\n              <span class='text-danger'\\n                *ngIf='(formPlenaria.controls.date.touched || submittedPlen) && formPlenaria.controls.date.errors?.required'>\\n                Requerido\\n              </span>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group row\\\">\\n            <label class='col-form-label col-sm-2 col-md-offset-2' for='startHour'>Hora de inicio: <span\\n                class='text-danger'>*</span></label>\\n            <div class='col-sm-6 row'>\\n              <div class=\\\"col-md-3\\\">\\n                <select class='col-sm-3 form-select' name=\\\"startHour\\\" disabled formControlName=\\\"startHour\\\" [ngClass]=\\\"{'is-invalid': ((formPlenaria.controls.startHour.touched || submittedPlen) && formPlenaria.controls.startHour.value === '')\\n            && formPlenaria.controls.startHour.errors}\\\">\\n                  <option *ngFor=\\\"let opt of hours\\\" value={{opt}}>\\n                    ‌{{ opt }}\\n                  </option>\\n                </select>\\n                <span class='text-danger'\\n                  *ngIf='(formPlenaria.controls.startHour.touched || submittedPlen) && formPlenaria.controls.startHour.errors?.required'>\\n                  Requerido\\n                </span>\\n              </div>\\n              <div class=\\\"col-md-3\\\">\\n                <select class='col-sm-3 form-select' name=\\\"startMinute\\\" disabled formControlName=\\\"startMinute\\\"\\n                  [ngClass]=\\\"{'is-invalid': ((formPlenaria.controls.startMinute.touched || submittedPlen) && formPlenaria.controls.startMinute.value === '')\\n                  && formPlenaria.controls.startMinute.errors}\\\">\\n                  <option *ngFor=\\\"let opt of minutes\\\" value={{opt}}>\\n                    ‌{{ opt === 0 ? '00': opt }}\\n                  </option>\\n                </select>\\n                <span class='text-danger'\\n                  *ngIf='(formPlenaria.controls.startMinute.touched || submittedPlen) && formPlenaria.controls.startMinute.errors?.required'>\\n                  Requerido\\n                </span>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group row\\\">\\n            <label class='col-form-label col-sm-2 col-md-offset-2' for='endHour'>Hora de Fin: <span\\n                class='text-danger'>*</span></label>\\n            <div class='col-sm-6 row'>\\n              <div class=\\\"col-md-3\\\">\\n                <select class='col-sm-3 form-select' name=\\\"endHour\\\" disabled formControlName=\\\"endHour\\\" [ngClass]=\\\"{'is-invalid': ((formPlenaria.controls.endHour.touched || submittedPlen) && formPlenaria.controls.endHour.value === '')\\n            && formPlenaria.controls.endHour.errors}\\\">\\n                  <option *ngFor=\\\"let opt of hours\\\" value={{opt}}>\\n                    ‌{{ opt }}\\n                  </option>\\n                </select>\\n                <span class='text-danger'\\n                  *ngIf='(formPlenaria.controls.endHour.touched || submittedPlen) && formPlenaria.controls.endHour.errors?.required'>\\n                  Requerido\\n                </span>\\n              </div>\\n              <div class=\\\"col-md-3\\\">\\n                <select class='col-sm-3 form-select' name=\\\"endMinute\\\" disabled formControlName=\\\"endMinute\\\" [ngClass]=\\\"{'is-invalid': ((formPlenaria.controls.endMinute.touched || submittedPlen) && formPlenaria.controls.endMinute.value === '')\\n                  && formPlenaria.controls.endMinute.errors}\\\">\\n                  <option *ngFor=\\\"let opt of minutes\\\" value={{opt}}>\\n                    ‌{{ opt === 0 ? '00': opt }}\\n                  </option>\\n                </select>\\n                <span class='text-danger'\\n                  *ngIf='(formPlenaria.controls.endMinute.touched || submittedPlen) && formPlenaria.controls.endMinute.errors?.required'>\\n                  Requerido\\n                </span>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <!-- title -->\\n          <div class='form-group row'>\\n            <label class='col-form-label col-sm-2 col-sm-offset-2' for='title'>Titulo: <span\\n                class='text-danger'>*</span></label>\\n            <div class='col-sm-6'>\\n              <input type='text' class='form-control' formControlName='title' disabled [ngClass]=\\\"{'is-invalid': (formPlenaria.controls.title.touched || submittedPlen)\\n                  && formPlenaria.controls.title.errors}\\\" onclick='this.select()' />\\n              <span class='text-danger'\\n                *ngIf='(formPlenaria.controls.title.touched || submittedPlen) && formPlenaria.controls.title.errors?.required'>\\n                Requerido\\n              </span>\\n            </div>\\n          </div>\\n\\n          <!-- desc -->\\n          <div class='form-group row'>\\n            <label class='col-form-label col-sm-2 col-sm-offset-2' for='desc'>Descripción: <span\\n                class='text-danger'>*</span></label>\\n            <div class='col-sm-6'>\\n              <input type='text' class='form-control' formControlName='desc' disabled [ngClass]=\\\"{'is-invalid': (formPlenaria.controls.desc.touched || submittedPlen)\\n                  && formPlenaria.controls.desc.errors}\\\" onclick='this.select()' />\\n              <span class='text-danger'\\n                *ngIf='(formPlenaria.controls.desc.touched || submittedPlen) && formPlenaria.controls.desc.errors?.required'>\\n                Requerido\\n              </span>\\n            </div>\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-bs-dismiss=\\\"modal\\\"\\n              id='dismissPlenaria'>Aceptar</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-bs-dismiss=\\\"modal\\\" id='dismiss' (click)=\\\"activarModalCalif()\\\"\\n              id='activar-modal'>\\n              Dejar una calificación\\n            </button>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"calificationModal\\\" tabindex=\\\"-1\\\" aria-labelledby=\\\"calificationModalLabel\\\" aria-hidden=\\\"true\\\"\\n  *ngIf=\\\"formEvento\\\">\\n  <div class=\\\"modal-dialog  modal-xl\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"calificationModalLabel\\\">Valoración del evento</h5>\\n        <button type=\\\"button\\\" class=\\\"btn-close\\\" data-bs-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"></button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]='formCalif'>\\n          <!-- puntuacion -->\\n          <div class='form-group row'>\\n            <label class='col-form-label col-sm-2 col-sm-offset-2' for='puntuacion'>Puntuación:</label>\\n            <div class='col-sm-6'>\\n              <select class='col-sm-4 form-select' name=\\\"puntuacion\\\" formControlName=\\\"puntuacion\\\">\\n                <option selected hidden>-- Seleccione --</option>\\n                <option *ngFor=\\\"let opt of scores\\\" value={{opt}}>\\n                  ‌{{ opt }}\\n                </option>\\n              </select>\\n            </div>\\n          </div>\\n          <!-- calificacion -->\\n          <div class='form-group row'>\\n            <label class='col-form-label col-sm-2 col-sm-offset-2' for='calificacion'>Comentario:</label>\\n            <div class='col-sm-6'>\\n              <textarea type='text' maxlength=\\\"512\\\" rows=\\\"3\\\" class='form-control' formControlName='calificacion'></textarea>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-bs-dismiss=\\\"modal\\\" id='dismiss'>Cancelar</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-bs-dismiss=\\\"modal\\\" id='dismiss'\\n              (click)=\\\"calificar()\\\">Aceptar</button>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \".calendar-container {\\n  border: 1px solid transparent;\\n  border-color: #fff #ddd;\\n  margin: 0 2rem 2rem;\\n}\\n\\ncalendar-scheduler-view >>>\\n.cal-scheduler-view {\\n  text-transform: capitalize !important;\\n}\\n\\n.btn-block{\\n  width: 100%;\\n}\\n\\ncalendar-scheduler-view >>>\\n.fas {\\n  font-size: 1.25rem;\\n  color: #00609C;\\n}\\n\\n.login-form{\\n  width:100%;\\n}\\n\\n.form-group{\\n  padding-top: 0.75rem;\\n  padding-bottom: 0.75rem;\\n}\\n\\n.spinner-border {\\n  width: 7rem;\\n  height: 7rem;\\n  margin-top: 10rem;\\n  margin-bottom: 10rem;\\n}\\n\\n.container-fluid {\\n  background-color: #F4F4F4;\\n\\n}\\n\\n.contenidos {\\n  padding-bottom: 3rem;\\n}\\n\\n.thead {\\n  background-color: #C8E5F1;\\n}\\n\\n.greyned {\\n  color: grey;\\n}\\n\\n.btn-primary {\\n  background-color: #3CAFE0;\\n  border: none;\\n}\\n\\ni {\\n  margin-top: 0.2rem;\\n  cursor: pointer;\\n}\\n\\ni:hover {\\n  color: blue;\\n}\\n\\n.fas {\\n  font-size: 1.25rem;\\n  color: #00609C;\\n}\\n\\n.fa {\\n  font-size: 1.25rem;\\n  color: #00609C;\\n}\\n\\nhr {\\n  border: #00609C solid 1px;\\n}\\n\\n@media (min-width: 768px) {\\n  hr {\\n    margin-left: 25%;\\n    margin-right: 25%;\\n\\n  }\\n\\n  .container-fluid {\\n    padding: 5rem;\\n  }\\n\\n}\\n\\n\\n\\n\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { VerScheduleComponent } from './ver-schedule.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: VerScheduleComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class VerScheduleRoutingModule { }\n","import { NgModule, LOCALE_ID } from '@angular/core';\nimport { CommonModule, registerLocaleData } from '@angular/common';\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { SchedulerModule } from 'angular-calendar-scheduler';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ScheduleCalendarService } from 'src/app/core/services/schedule-calendar.service';\nimport localeEs from '@angular/common/locales/es';\nimport { VerScheduleComponent } from './ver-schedule.component';\nimport { VerScheduleRoutingModule } from './ver-schedule-routing.module';\nregisterLocaleData(localeEs);\n\n@NgModule({\n  declarations: [\n    VerScheduleComponent\n  ],\n  imports: [\n    CommonModule,\n    VerScheduleRoutingModule,\n    ReactiveFormsModule,\n    CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory\n    }),\n        SchedulerModule.forRoot({ locale: 'es', headerDateFormat: 'daysRange', logEnabled: true })\n  ],\n  providers: [\n    ScheduleCalendarService,\n    { provide: LOCALE_ID, useValue: 'es-AR' }\n  ],\n})\nexport class VerScheduleModule { }\n"],"sourceRoot":"webpack:///"}