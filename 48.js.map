{"version":3,"sources":["./src/app/pages/schedule-calendar/schedule-calendar.component.ts","./src/app/pages/schedule-calendar/schedule-calendar.component.html","./src/app/pages/schedule-calendar/schedule-calendar.component.css","./src/app/pages/schedule-calendar/schedule-calendar-routing.module.ts","./src/app/pages/schedule-calendar/schedule-calendar.module.ts"],"names":["locale","dateAdapter","calendarService","formBuild","paperService","congresService","articulosService","router","roomService","toastr","CalendarView","view","Week","viewDate","Date","viewDays","refresh","Subject","hourSegments","weekStartsOn","startsWithToday","activeDayIsOpen","excludeDays","dayStartHour","dayEndHour","submitted","minDate","maxDate","endOfDay","addMonths","prevBtnDisabled","nextBtnDisabled","plenaria","submittedPlen","evento","idEvento","date","startHour","startMinute","endHour","endMinute","title","content","idSimposio","idArticulo","paperList","showList","hours","Array","from","length","_","i","minutes","simposios","roomList","loading","idAula","min","max","eventosCompletos","actions","when","label","onClick","event","this","show","toastComponent","disableTimeOut","tapToDismiss","enableHtml","onAction","subscribe","deleteEvento","id","res","success","getEventos","routeReuseStrategy","shouldReuseRoute","segmentModifier","segment","isDisabled","isDateValid","bind","eventModifier","start","adjustViewDays","dateOrViewChanged","getSimposios","getArticles","getRooms","getCongres","formEvento","group","values","formPlenaria","plenariaValues","getCongressById","fechaI","data","fechaInicioExposiciones","split","fechaF","fechaFinExposiciones","fechaIn","fechaFin","setDate","getDate","getRoomEvents","events","map","elem","aux","startDays","end","endDays","idARticulo","color","primary","secondary","status","isClickable","console","log","getCameraReady","getSimposiosActivos","required","desc","idPaper","currentWidth","window","innerWidth","Day","changeDate","hour","action","reset","setErrors","clearValidators","toLocaleDateString","toLocaleTimeString","moment","add","toDate","document","getElementById","click","eventoCompleto","find","x","simposioSeleccionado","auxDate","item","paper","filter","getNotAssigned","push","invalid","warning","form","controls","finDate","value","auxStart","auxEnd","fDate","putEvento","postEvento","setValue","putPlenaria","postPlenaria","generarQR","selector","template","providers","provide","useClass","routes","path","component","ScheduleCalendarRoutingModule","imports","forChild","exports","ScheduleCalendarModule","declarations","forRoot","useFactory","headerDateFormat","logEnabled","useValue"],"mappings":"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","file":"48.js","sourcesContent":["import { Component, HostListener, Inject, LOCALE_ID, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, SelectMultipleControlValueAccessor, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport {\n  CalendarView,\n  CalendarDateFormatter,\n  DateAdapter\n} from 'angular-calendar';\nimport {\n  addPeriod,\n  CalendarSchedulerEvent,\n  CalendarSchedulerEventAction,\n  CalendarSchedulerEventStatus,\n  DAYS_IN_WEEK,\n  endOfPeriod,\n  SchedulerDateFormatter,\n  SchedulerEventTimesChangedEvent,\n  SchedulerViewDay,\n  SchedulerViewHour,\n  SchedulerViewHourSegment,\n  startOfPeriod,\n  subPeriod\n} from 'angular-calendar-scheduler';\nimport { addMonths, endOfDay, parseISO } from 'date-fns';\nimport * as moment from 'moment';\nimport { Toast, ToastrService } from 'ngx-toastr';\nimport { Subject } from 'rxjs';\nimport { CustomToastComponent } from 'src/app/core/components/custom-toast/custom-toast.component';\nimport { ArticulosService } from 'src/app/core/services/articulos.service';\nimport { CongressService } from 'src/app/core/services/congress.service';\nimport { PaperService } from 'src/app/core/services/paper.service';\nimport { RoomService } from 'src/app/core/services/room.service';\nimport { ScheduleCalendarService } from 'src/app/core/services/schedule-calendar.service';\n\n@Component({\n  selector: 'app-schedule-calendar',\n  templateUrl: './schedule-calendar.component.html',\n  styleUrls: ['./schedule-calendar.component.css'],\n  providers: [\n    {\n      provide: CalendarDateFormatter,\n      useClass: SchedulerDateFormatter,\n    },\n  ],\n})\nexport class ScheduleCalendarComponent implements OnInit {\n\n  CalendarView = CalendarView;\n\n  view: CalendarView = CalendarView.Week;\n  viewDate: Date = new Date(); // Igual a minDate!!\n  viewDays: number = DAYS_IN_WEEK;\n  refresh: Subject<any> = new Subject();\n  locale = 'en';\n  hourSegments = 3;\n  weekStartsOn = 1;\n  startsWithToday = true;\n  activeDayIsOpen = true;\n  excludeDays: number[] = []; // [0];\n  dayStartHour = 8;\n  dayEndHour = 20;\n  submitted = false;\n\n  // Cambiar estos dos por la fecha de inicio y fin del congreso.\n  minDate: Date = new Date();\n  maxDate: Date = endOfDay(addMonths(new Date(), 1));\n  dayModifier: Function;\n  hourModifier: Function;\n  segmentModifier: Function;\n  eventModifier: Function;\n  prevBtnDisabled = false;\n  nextBtnDisabled = false;\n  formEvento: FormGroup;\n  plenaria = false;\n  submittedPlen = false;\n\n  evento = {\n    idEvento: null,\n    date: '',\n    startHour: '',\n    startMinute: '',\n    endHour: '',\n    endMinute: '',\n    title: '',\n    content: '',\n    idSimposio: null,\n    idArticulo: null\n  };\n\n  paperList = [];\n  showList = [];\n  hours = Array.from({ length: 15 }, (_, i) => i + 8);\n  minutes = Array.from({ length: 12 }, (_, i) => i * 5);\n  simposios = [];\n  roomList = [];\n  loading = false;\n  idAula = '';\n  min = '';\n  max = '';\n  eventosCompletos = [];\n  formPlenaria: FormGroup;\n\n  actions: CalendarSchedulerEventAction[] = [\n    {\n      when: 'enabled',\n      label: '<span class=\"valign-center\"><i class=\"fas fa-trash\"></i></span>',\n      title: 'Borrar',\n      onClick: (event: CalendarSchedulerEvent): void => {\n\n        this.toastr\n          .show('¿Está seguro que desea eliminar el evento?' + '\\nToda los cambios se perderán.', '¿Borrar evento?', {\n            toastComponent: CustomToastComponent,\n            disableTimeOut: true,\n            tapToDismiss: false,\n            enableHtml: true\n          })\n          .onAction.subscribe(() => {\n            // Aca se hace el camino feliz\n            this.calendarService.deleteEvento(+event.id).subscribe((res: any) => {\n              this.toastr.success('Evento \"' + event.title + '\" eliminado con éxito');\n              this.getEventos();\n            });\n          });\n      }\n    },\n  ];\n\n  events: CalendarSchedulerEvent[];\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any): void {\n    this.adjustViewDays();\n  }\n\n  constructor(@Inject(LOCALE_ID) locale: string,\n              private dateAdapter: DateAdapter,\n              private calendarService: ScheduleCalendarService,\n              private formBuild: FormBuilder,\n              private paperService: PaperService,\n              private congresService: CongressService,\n              private articulosService: ArticulosService,\n              private router: Router,\n              private roomService: RoomService,\n              private toastr: ToastrService) {\n    this.router.routeReuseStrategy.shouldReuseRoute = () => {\n      return false;\n    };\n    this.locale = locale;\n\n    this.segmentModifier = ((segment: SchedulerViewHourSegment): void => {\n      segment.isDisabled = !this.isDateValid(segment.date);\n    }).bind(this);\n\n    this.eventModifier = ((event: CalendarSchedulerEvent): void => {\n      event.isDisabled = !this.isDateValid(event.start);\n    }).bind(this);\n\n    this.adjustViewDays();\n    this.dateOrViewChanged();\n  }\n\n  ngOnInit(): void {\n    this.getSimposios();\n    this.getArticles();\n    this.getRooms();\n    this.getCongres();\n    this.formEvento = this.formBuild.group(this.values());\n    this.formPlenaria = this.formBuild.group(this.plenariaValues());\n  }\n\n\n  getCongres(): void {\n    this.congresService.getCongressById().subscribe((res: any) => {\n      const fechaI = res.data[0].fechaInicioExposiciones.split(' ')[0].split('/');\n      const fechaF = res.data[0].fechaFinExposiciones.split(' ')[0].split('/');\n\n      const fechaIn = new Date(fechaI[2], fechaI[1] - 1, fechaI[0]);\n      const fechaFin = new Date(fechaF[2], fechaF[1] - 1, fechaF[0]);\n      this.viewDate = fechaIn;\n      this.minDate = fechaIn;\n      this.maxDate.setDate(fechaFin.getDate());\n      this.min = `${fechaI[2]}-${fechaI[1]}-${fechaI[0]}`;\n      this.max = `${fechaF[2]}-${fechaF[1]}-${fechaF[0]}`;\n    });\n  }\n\n  aulaSelected(idAula: any): void {\n    // llamar a los eventos del aula\n    this.idAula = idAula;\n\n    this.loading = true;\n    this.getEventos();\n  }\n\n  getEventos(): void {\n    // con el idAula Llama a los eventos\n    this.calendarService.getRoomEvents(+this.idAula).subscribe((res: any) => {\n      this.eventosCompletos = res.data;\n      this.events = res.data.map((elem: any) => {\n        let aux = elem.start.split(' ');\n        const startDays = aux[0].split('/');\n        const startHour = aux[1].split(':');\n\n        aux = elem.end.split(' ');\n        const endDays = aux[0].split('/');\n        const endHour = aux[1].split(':');\n\n        return {\n          id: elem.idEvento,\n          title: elem.title,\n          content: elem.content,\n          idSimposio: elem.idSimposio,\n          idArticulo: elem.idARticulo,\n          start: new Date(startDays[2], startDays[1] - 1, startDays[0], startHour[0], startHour[1], 0),\n          end: new Date(endDays[2], endDays[1] - 1, endDays[0], endHour[0], endHour[1], 0),\n          color: { primary: '#E0E0E0', secondary: '#EEEEEE' },\n          actions: this.actions,\n          status: 'ok' as CalendarSchedulerEventStatus,\n          isClickable: true,\n          isDisabled: false\n        } as CalendarSchedulerEvent;\n      });\n      console.log(this.events);\n      this.loading = false;\n    });\n  }\n\n  getRooms(): void {\n    this.roomService.getRooms().subscribe((res: any) => {\n      this.roomList = res.data[0];\n    });\n  }\n\n  getArticles(): void {\n    this.articulosService.getCameraReady().subscribe((res: any) => {\n      this.paperList = res.data;\n    });\n  }\n\n  getSimposios(): void {\n    this.paperService.getSimposiosActivos().subscribe((res: any) => {\n      this.simposios = res.data;\n    });\n  }\n\n  plenariaValues(): any {\n    return {\n      idEvento: [this.evento.idEvento || null],\n      date: [this.evento.date || ''],\n      startHour: [+this.evento.startHour || 0],\n      endHour: [+this.evento.endHour || 0],\n      startMinute: [+this.evento.startMinute || 0],\n      endMinute: [+this.evento.endMinute || 0],\n      title: [this.evento.title || '', [Validators.required]],\n      desc: [this.evento.content || '', [Validators.required]],\n    };\n  }\n\n  values(): any {\n    return {\n      idEvento: [this.evento.idEvento || null],\n      date: [this.evento.date || ''],\n      startHour: [+this.evento.startHour || 0],\n      endHour: [+this.evento.endHour || 0],\n      startMinute: [+this.evento.startMinute || 0],\n      endMinute: [+this.evento.endMinute || 0],\n      title: [this.evento.title, [Validators.required]],\n      desc: [this.evento.content || '', [Validators.required]],\n      idSimposio: [this.evento.idSimposio || '', [Validators.required]],\n      idPaper: [this.evento.idArticulo || '', [Validators.required]]\n    };\n  }\n\n  adjustViewDays(): void {\n    const currentWidth: number = window.innerWidth;\n    if (currentWidth <= 450) {\n      this.viewDays = 1;\n    } else if (currentWidth <= 768) {\n      this.viewDays = 3;\n    } else {\n      this.viewDays = DAYS_IN_WEEK;\n    }\n  }\n\n  changeDate(date: Date): void {\n    console.log('changeDate', date);\n    this.viewDate = date;\n    this.dateOrViewChanged();\n  }\n\n  changeView(view: CalendarView): void {\n    console.log('changeView', view);\n    this.view = view;\n    this.dateOrViewChanged();\n  }\n\n  dateOrViewChanged(): void {\n    if (this.startsWithToday) {\n      this.prevBtnDisabled = !this.isDateValid(\n        subPeriod(\n          this.dateAdapter,\n          CalendarView.Day /*this.view*/,\n          this.viewDate,\n          1\n        )\n      );\n      this.nextBtnDisabled = !this.isDateValid(\n        addPeriod(\n          this.dateAdapter,\n          CalendarView.Day /*this.view*/,\n          this.viewDate,\n          1\n        )\n      );\n    } else {\n      this.prevBtnDisabled = !this.isDateValid(\n        endOfPeriod(\n          this.dateAdapter,\n          CalendarView.Day /*this.view*/,\n          subPeriod(\n            this.dateAdapter,\n            CalendarView.Day /*this.view*/,\n            this.viewDate,\n            1\n          )\n        )\n      );\n      this.nextBtnDisabled = !this.isDateValid(\n        startOfPeriod(\n          this.dateAdapter,\n          CalendarView.Day /*this.view*/,\n          addPeriod(\n            this.dateAdapter,\n            CalendarView.Day /*this.view*/,\n            this.viewDate,\n            1\n          )\n        )\n      );\n    }\n\n    if (this.viewDate < this.minDate) {\n      this.changeDate(this.minDate);\n    } else if (this.viewDate > this.maxDate) {\n      this.changeDate(this.maxDate);\n    }\n  }\n\n  private isDateValid(date: Date): boolean {\n    return /*isToday(date) ||*/ date >= this.minDate && date <= this.maxDate;\n  }\n\n  hourClicked(hour: SchedulerViewHour): void {\n    console.log('hourClicked Hour', hour);\n  }\n\n\n  segmentClicked(action: string, segment: SchedulerViewHourSegment): void {\n    this.submitted = false;\n    this.submittedPlen = false;\n    this.formEvento.reset();\n    this.formEvento.setErrors({});\n    this.formEvento.clearValidators();\n    this.evento = {\n      idEvento: null,\n      title: '',\n      content: '',\n      idSimposio: null,\n      idArticulo: null,\n      date: segment.date.toLocaleDateString(),\n      startHour: segment.date.toLocaleTimeString().split(':')[0],\n      startMinute: segment.date.toLocaleTimeString().split(':')[1],\n      endHour: moment(segment.date).add(20, 'm').toDate().toLocaleTimeString().split(':')[0],\n      endMinute: moment(segment.date).add(20, 'm').toDate().toLocaleTimeString().split(':')[1],\n    };\n    this.showList = [];\n    this.formEvento = this.formBuild.group(this.values());\n\n    const btnDetalle = document.getElementById('activar-modal');\n    btnDetalle.click();\n  }\n\n  eventClicked(action: string, event: CalendarSchedulerEvent): void {\n    const eventoCompleto = this.eventosCompletos.find((x: any) => {\n      return x.idEvento === event.id;\n    });\n    this.evento = {\n      ...this.evento,\n      idEvento: event.id || '',\n      date: event.start.toLocaleDateString(),\n      startHour: event.start.toLocaleTimeString().split(':')[0],\n      startMinute: event.start.toLocaleTimeString().split(':')[1],\n      endHour: event.end.toLocaleTimeString().split(':')[0],\n      endMinute: event.end.toLocaleTimeString().split(':')[1],\n      title: event.title,\n      content: eventoCompleto.content,\n      idArticulo: eventoCompleto.idArticulo,\n      idSimposio: eventoCompleto.idSimposio\n    };\n    this.showList = [];\n    if (this.evento.idSimposio !== null) {\n      this.simposioSeleccionado(this.evento.idSimposio);\n      this.formEvento = this.formBuild.group(this.values());\n      const btnDetalle = document.getElementById('activar-modal');\n      btnDetalle.click();\n    } else {\n      const strDate = this.evento.date;\n      const auxDate = strDate.split('/');\n      this.evento.date = auxDate[2] + '-' + auxDate[1] + '-' + auxDate[0];\n      this.formPlenaria = this.formBuild.group(this.plenariaValues());\n      const btnDetalle = document.getElementById('btnPLenaria');\n      btnDetalle.click();\n    }\n\n  }\n\n  simposioSeleccionado(item: any): void {\n    // Aca tengo que cargar los papers que correspondan a ese simposio;\n    const paper = this.paperList.filter((elem: any) => elem.idArticulo === this.evento.idArticulo);\n    // llamar al nuevo método del agus\n    this.articulosService.getNotAssigned(item).subscribe((res: any) => {\n      this.showList = res.data;\n      this.showList.push(paper);\n    });\n  }\n\n  submit(): void {\n    this.submitted = true;\n\n    if (this.formEvento.invalid) {\n      this.toastr.warning('Por favor, complete todos los datos');\n      return;\n    }\n    const form = this.formEvento.controls;\n\n    const finDate = form.date.value.split('-');\n    const auxDate = `${finDate[1]}/${finDate[2]}/${finDate[0]}`;\n    const auxStart = new Date(auxDate + ' ' + form.startHour.value + ':' + form.startMinute.value);\n    const auxEnd = new Date(auxDate + ' ' + form.endHour.value + ':' + form.endMinute.value);\n\n    const fDate = form.date.value.split('/');\n    const date = `${fDate[0]}/${fDate[1]}/${fDate[2]}`;\n    // const startHourFinal = (form.startHour.value.length > 1 ? form.startHour.value : '0' + form.startHour.value)\n    const start = date + ' ' + form.startHour.value + ':' + form.startMinute.value + ':00';\n    const end = date + ' ' + form.endHour.value + ':' + form.endMinute.value + ':00';\n\n    if (auxStart >= auxEnd) {\n      this.toastr.warning('Hora inválida');\n      return;\n    }\n    // Chequeo de dos horarios superpuestos\n    // const overStepped = this.events.find((item: any) => {\n    //   if (start === item.startDate){\n    //     return true;\n    //   }\n    //   if (start < item.startDate && end <= item.startDate) {\n    //     return false;\n    //   }\n    //   if (start < item.startDate && end >= item.startDate) {\n    //     return true;\n    //   }\n    //   if (start > item.startDate && start < item.endDate) {\n    //     return true;\n    //   }\n    //   return false;\n    // });\n\n    // if (overStepped) {\n    //   alert('Horarios Superpuestos. Imposible ')\n    //   return;\n    // }\n\n    const evento = {\n      idEvento: form.idEvento.value,\n      title: form.title.value,\n      desc: form.desc.value,\n      start,\n      end,\n      idSimposio: form.idSimposio.value,\n      idAula: this.idAula,\n      idArticulo: form.idPaper.value\n    };\n    console.log(evento.idEvento);\n\n    if (evento.idEvento !== null) {\n      this.calendarService.putEvento(evento).subscribe((res: any) => {\n        const btnDismiss = document.getElementById('dismiss');\n        btnDismiss.click();\n        this.loading = true;\n        this.getEventos();\n      });\n\n    } else {\n      this.calendarService.postEvento(evento).subscribe((res: any) => {\n        const btnDismiss = document.getElementById('dismiss');\n        btnDismiss.click();\n        this.loading = true;\n        this.getEventos();\n      });\n    }\n  }\n\n  submitPlenaria(): void {\n    this.submittedPlen = true;\n    if (this.formPlenaria.invalid) {\n      this.toastr.warning('Por favor, complete todos los datos');\n      return;\n    }\n\n    const form = this.formPlenaria.controls;\n    if (form.date.value === '') {\n      form.date.setValue(this.min);\n    }\n\n    const finDate = form.date.value.split('-');\n    const auxDate = `${finDate[1]}/${finDate[2]}/${finDate[0]}`;\n    const auxStart = new Date(auxDate + ' ' + form.startHour.value + ':' + form.startMinute.value);\n    const auxEnd = new Date(auxDate + ' ' + form.endHour.value + ':' + form.endMinute.value);\n\n    const fDate = form.date.value.split('-');\n    const date = `${fDate[2]}/${fDate[1]}/${fDate[0]}`;\n    // const startHourFinal = (form.startHour.value.length > 1 ? form.startHour.value : '0' + form.startHour.value)\n    const start = date + ' ' + form.startHour.value + ':' + form.startMinute.value + ':00';\n    const end = date + ' ' + form.endHour.value + ':' + form.endMinute.value + ':00';\n\n    if (auxStart >= auxEnd) {\n      this.toastr.warning('Hora inválida');\n      return;\n    }\n    // Chequeo de dos horarios superpuestos\n    // const overStepped = this.events.find((item: any) => {\n    //   if (start === item.startDate){\n    //     return true;\n    //   }\n    //   if (start < item.startDate && end <= item.startDate) {\n    //     return false;\n    //   }\n    //   if (start < item.startDate && end >= item.startDate) {\n    //     return true;\n    //   }\n    //   if (start > item.startDate && start < item.endDate) {\n    //     return true;\n    //   }\n    //   return false;\n    // });\n\n    // if (overStepped) {\n    //   alert('Horarios Superpuestos. Imposible ')\n    //   return;\n    // }\n\n    const evento = {\n      idEvento: form.idEvento.value,\n      title: form.title.value,\n      desc: form.desc.value,\n      start,\n      end\n    };\n\n    if (evento.idEvento !== null) {\n      this.calendarService.putPlenaria(evento).subscribe((res: any) => {\n        const btnDismiss = document.getElementById('dismissPlenaria');\n        btnDismiss.click();\n        this.loading = true;\n        if (this.idAula) {\n          this.getEventos();\n        }\n\n      });\n\n    } else {\n      this.calendarService.postPlenaria(evento).subscribe((res: any) => {\n        const btnDismiss = document.getElementById('dismissPlenaria');\n        btnDismiss.click();\n        this.loading = true;\n        if (this.idAula) {\n          this.getEventos();\n        }\n      });\n    }\n  }\n  generarQR(): void {\n    console.log('llego');\n    this.calendarService.generarQR().subscribe((res: any) => {\n      this.toastr.success('Se ha enviado un mail con los QR para cada una de las Aulas');\n    });\n  }\n}\n","export default \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"contenidos\\\">\\n    <hr>\\n    <h3 class='text-center'>Agenda del Evento</h3>\\n    <hr>\\n  </div>\\n  <br>\\n  <div class=\\\"row py-3 \\\">\\n    <div class=\\\"col-md-2\\\">\\n      <label for=\\\"\\\">Seleccione un Aula:</label>\\n    </div>\\n    <div class=\\\"col-md-4  mr-auto\\\">\\n      <div class=\\\"col-sm-12\\\">\\n        <select name=\\\"eval\\\" class=\\\"form-control\\\" (change)=\\\"aulaSelected($event.target.value)\\\">\\n          <option selected disabled> -- Seleccione un Aula --</option>\\n          <option *ngFor=\\\"let room of roomList\\\" value='{{room.id}}'>{{ room.nombre }} </option>\\n        </select>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-3 ml-auto\\\">\\n      <button type=\\\"button \\\" class=\\\"btn btn-primary\\\">\\n        <i class=\\\"fas fa-plus-circle\\\"></i>\\n        Agregar charla Plenaria / Break\\n      </button>\\n    </div>\\n    <div class=\\\"col-md-2 ml-auto\\\">\\n      <button type=\\\"button \\\" class=\\\"btn btn-primary\\\" (click)=\\\"generarQR()\\\">\\n       <i class=\\\"fas fa-plus-circle\\\"></i>\\n       Generar QR\\n      </button>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" id=\\\"loading\\\">\\n    <div class=\\\"row justify-content-center\\\" *ngIf=\\\"loading\\\">\\n      <div class=\\\"spinner-border text-primary\\\" role=\\\"status\\\">\\n        <span class=\\\"sr-only\\\">Loading...</span>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"events && !loading\\\">\\n    <div class=\\\"calendar-container\\\">\\n      <div class=\\\"row mt-4\\\">\\n        <div class=\\\"col-md-4 text-center\\\">\\n          <h3 class=\\\"mt-0\\\">{{ viewDate | calendarSchedulerDate:(view +\\n            'ViewTitle'):locale:weekStartsOn:excludeDays:viewDays:startsWithToday }}</h3>\\n        </div>\\n        <div class=\\\"col-md-4 text-right\\\">\\n          <div class=\\\"btn-group m-1\\\" role=\\\"group\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" mwlCalendarPreviousView [view]=\\\"view\\\" [(viewDate)]=\\\"viewDate\\\"\\n              [daysInWeek]=\\\"viewDays\\\" [excludeDays]=\\\"excludeDays\\\" [disabled]=\\\"prevBtnDisabled\\\"\\n              (viewDateChange)=\\\"dateOrViewChanged()\\\">\\n              <span class=\\\"valign-center\\\">\\n                <i title=\\\"Precedente\\\" class=\\\"material-icons md-18\\\">Anterior</i>\\n              </span>\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-light\\\" mwlCalendarToday [(viewDate)]=\\\"viewDate\\\"\\n              (viewDateChange)=\\\"dateOrViewChanged()\\\" disabled>\\n              <span class=\\\"valign-center\\\">\\n                <i title=\\\"Hoy\\\" class=\\\"material-icons md-18\\\"></i>\\n              </span>\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" mwlCalendarNextView [view]=\\\"view\\\" [(viewDate)]=\\\"viewDate\\\"\\n              [daysInWeek]=\\\"viewDays\\\" [excludeDays]=\\\"excludeDays\\\" [disabled]=\\\"nextBtnDisabled\\\"\\n              (viewDateChange)=\\\"dateOrViewChanged()\\\">\\n              <span class=\\\"valign-center\\\">\\n                <i title=\\\"Siguiente\\\" class=\\\"material-icons md-18\\\">Siguiente</i>\\n              </span>\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n      <br>\\n      <div [ngSwitch]=\\\"view\\\">\\n        <calendar-scheduler-view *ngSwitchCase=\\\"CalendarView.Week\\\" [viewDate]=\\\"viewDate\\\" [events]=\\\"events\\\"\\n          [locale]=\\\"locale\\\" [viewDays]=\\\"viewDays\\\" [weekStartsOn]=\\\"weekStartsOn\\\" [excludeDays]=\\\"excludeDays\\\"\\n          [startsWithToday]=\\\"startsWithToday\\\" [hourSegments]=\\\"hourSegments\\\" [dayStartHour]=\\\"dayStartHour\\\"\\n          [dayEndHour]=\\\"dayEndHour\\\" [dayModifier]=\\\"dayModifier\\\" [hourModifier]=\\\"hourModifier\\\"\\n          [segmentModifier]=\\\"segmentModifier\\\" [eventModifier]=\\\"eventModifier\\\" [showEventActions]=\\\"true\\\"\\n          [showSegmentHour]=\\\"true\\\" [zoomEventOnHover]=\\\"true\\\" (hourClicked)=\\\"hourClicked($event.hour)\\\"\\n          (segmentClicked)=\\\"segmentClicked('Clicked', $event.segment)\\\"\\n          (eventClicked)=\\\"eventClicked('Clicked', $event.event)\\\" [refresh]=\\\"refresh\\\">\\n        </calendar-scheduler-view>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n\\n\\n\\n\\n<!-- Button trigger modal -->\\n<button type=\\\"button\\\" hidden class=\\\"btn btn-primary\\\" data-bs-toggle=\\\"modal\\\" data-bs-target=\\\"#eventModal\\\"\\n  id='activar-modal'>\\n  Launch demo modal\\n</button>\\n\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"eventModal\\\" tabindex=\\\"-1\\\" aria-labelledby=\\\"eventModalLabel\\\" aria-hidden=\\\"true\\\"\\n  *ngIf=\\\"formEvento\\\">\\n  <div class=\\\"modal-dialog  modal-xl\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"eventModalLabel\\\">{{evento.id ? 'Editar Evento' : 'Nuevo Evento'}}</h5>\\n        <button type=\\\"button\\\" class=\\\"btn-close\\\" data-bs-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"></button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]='formEvento'>\\n          <!-- date -->\\n          <div class='form-group row'>\\n            <label class='col-form-label col-sm-2 col-sm-offset-2' for='date'>Fecha: </label>\\n            <div class='col-sm-6'>\\n              <label class='col-form-label col-sm-2 col-sm-offset-2' for='date'>{{evento.date}}</label>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group row\\\">\\n            <label class='col-form-label col-sm-2 col-md-offset-2' for='startHour'>Hora de inicio: <span\\n                class='text-danger'>*</span></label>\\n            <div class='col-sm-6 row'>\\n              <div class=\\\"col-md-3\\\">\\n                <select class='col-sm-3 form-select' name=\\\"startHour\\\" formControlName=\\\"startHour\\\" [ngClass]=\\\"{'is-invalid': ((formEvento.controls.startHour.touched || submitted) && formEvento.controls.startHour.value === '')\\n            && formEvento.controls.startHour.errors}\\\">\\n                  <option *ngFor=\\\"let opt of hours\\\" value={{opt}}>\\n                    ‌{{ opt }}\\n                  </option>\\n                </select>\\n                <span class='text-danger'\\n                  *ngIf='(formEvento.controls.startHour.touched || submitted) && formEvento.controls.startHour.errors?.required'>\\n                  Requerido\\n                </span>\\n              </div>\\n              <div class=\\\"col-md-3\\\">\\n                <select class='col-sm-3 form-select' name=\\\"startMinute\\\" formControlName=\\\"startMinute\\\" [ngClass]=\\\"{'is-invalid': ((formEvento.controls.startMinute.touched || submitted) && formEvento.controls.startMinute.value === '')\\n                  && formEvento.controls.startMinute.errors}\\\">\\n                  <option *ngFor=\\\"let opt of minutes\\\" value={{opt}}>\\n                    ‌{{ opt === 0 ? '00': opt }}\\n                  </option>\\n                </select>\\n                <span class='text-danger'\\n                  *ngIf='(formEvento.controls.startMinute.touched || submitted) && formEvento.controls.startMinute.errors?.required'>\\n                  Requerido\\n                </span>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group row\\\">\\n            <label class='col-form-label col-sm-2 col-md-offset-2' for='endHour'>Hora de Fin: <span\\n                class='text-danger'>*</span></label>\\n            <div class='col-sm-6 row'>\\n              <div class=\\\"col-md-3\\\">\\n                <select class='col-sm-3 form-select' name=\\\"endHour\\\" formControlName=\\\"endHour\\\" [ngClass]=\\\"{'is-invalid': ((formEvento.controls.endHour.touched || submitted) && formEvento.controls.endHour.value === '')\\n            && formEvento.controls.endHour.errors}\\\">\\n                  <option *ngFor=\\\"let opt of hours\\\" value={{opt}}>\\n                    ‌{{ opt }}\\n                  </option>\\n                </select>\\n                <span class='text-danger'\\n                  *ngIf='(formEvento.controls.endHour.touched || submitted) && formEvento.controls.endHour.errors?.required'>\\n                  Requerido\\n                </span>\\n              </div>\\n              <div class=\\\"col-md-3\\\">\\n                <select class='col-sm-3 form-select' name=\\\"endMinute\\\" formControlName=\\\"endMinute\\\" [ngClass]=\\\"{'is-invalid': ((formEvento.controls.endMinute.touched || submitted) && formEvento.controls.endMinute.value === '')\\n                  && formEvento.controls.endMinute.errors}\\\">\\n                  <option *ngFor=\\\"let opt of minutes\\\" value={{opt}}>\\n                    ‌{{ opt === 0 ? '00': opt }}\\n                  </option>\\n                </select>\\n                <span class='text-danger'\\n                  *ngIf='(formEvento.controls.endMinute.touched || submitted) && formEvento.controls.endMinute.errors?.required'>\\n                  Requerido\\n                </span>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <!-- idSimposio -->\\n          <div class='form-group row'>\\n            <label class='col-form-label col-sm-2 col-sm-offset-2' for='idSimposio'>Simposio: <span\\n                class='text-danger'>*</span></label>\\n            <div class='col-sm-6'>\\n              <select class='col-sm-4 form-select' name=\\\"idSimposio\\\" formControlName=\\\"idSimposio\\\"\\n                (change)='simposioSeleccionado($event.target.value)' [ngClass]=\\\"{'is-invalid': ((formEvento.controls.idSimposio.touched || submitted) && formEvento.controls.idSimposio.value === '')\\n          && formEvento.controls.idSimposio.errors}\\\">\\n                <option *ngFor=\\\"let opt of simposios\\\" value={{opt.id}}>\\n                  ‌{{ opt.descripcion }}\\n                </option>\\n              </select>\\n              <span class='text-danger'\\n                *ngIf='(formEvento.controls.idSimposio.touched || submitted) && formEvento.controls.idSimposio.errors?.required'>\\n                Requerido\\n              </span>\\n            </div>\\n          </div>\\n\\n          <!-- idPaper -->\\n          <div class='form-group row' *ngIf=\\\"showList\\\">\\n            <label class='col-form-label col-sm-2 col-sm-offset-2' for='idPaper'>Paper: <span\\n                class='text-danger'>*</span></label>\\n            <div class='col-sm-6'>\\n              <select class='col-sm-4 form-select' name=\\\"idPaper\\\" formControlName=\\\"idPaper\\\" [ngClass]=\\\"{'is-invalid': ((formEvento.controls.idPaper.touched || submitted) && formEvento.controls.idPaper.value === '')\\n          && formEvento.controls.idPaper.errors}\\\">\\n                <option selected hidden>-- Seleccione un Paper --</option>\\n                <option *ngFor=\\\"let opt of showList\\\" value={{opt.idArticulo}}>\\n                  ‌{{ opt.nombreArticulo }}\\n                </option>\\n              </select>\\n              <span class='text-danger'\\n                *ngIf='(formEvento.controls.idPaper.touched || submitted) && formEvento.controls.idPaper.errors?.required'>\\n                Requerido\\n              </span>\\n            </div>\\n          </div>\\n\\n          <!-- title -->\\n          <div class='form-group row'>\\n            <label class='col-form-label col-sm-2 col-sm-offset-2' for='title'>Titulo: <span\\n                class='text-danger'>*</span></label>\\n            <div class='col-sm-6'>\\n              <input type='text' class='form-control' formControlName='title' [ngClass]=\\\"{'is-invalid': (formEvento.controls.title.touched || submitted)\\n                  && formEvento.controls.title.errors}\\\" onclick='this.select()' />\\n              <span class='text-danger'\\n                *ngIf='(formEvento.controls.title.touched || submitted) && formEvento.controls.title.errors?.required'>\\n                Requerido\\n              </span>\\n            </div>\\n          </div>\\n\\n          <!-- desc -->\\n          <div class='form-group row'>\\n            <label class='col-form-label col-sm-2 col-sm-offset-2' for='desc'>Descripción: <span\\n                class='text-danger'>*</span></label>\\n            <div class='col-sm-6'>\\n              <input type='text' class='form-control' formControlName='desc' [ngClass]=\\\"{'is-invalid': (formEvento.controls.desc.touched || submitted)\\n                  && formEvento.controls.desc.errors}\\\" onclick='this.select()' />\\n              <span class='text-danger'\\n                *ngIf='(formEvento.controls.desc.touched || submitted) && formEvento.controls.desc.errors?.required'>\\n                Requerido\\n              </span>\\n            </div>\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-bs-dismiss=\\\"modal\\\" id='dismiss'>Cancelar</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)='submit()'>{{evento.idEvento ? 'Actualizar Evento' : 'Nuevo Evento'}}</button>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"plenariaModal\\\" tabindex=\\\"-1\\\" aria-labelledby=\\\"eventModalLabel\\\" aria-hidden=\\\"true\\\"\\n  *ngIf=\\\"formPlenaria\\\">\\n  <div class=\\\"modal-dialog  modal-xl\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"eventModalLabel\\\">{{evento.id ? 'Editar Evento' : 'Nuevo Evento'}}</h5>\\n        <button type=\\\"button\\\" class=\\\"btn-close\\\" data-bs-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"></button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form [formGroup]='formPlenaria'>\\n          <!-- date -->\\n          <div class='form-group row'>\\n            <label class='col-form-label col-sm-2 col-sm-offset-2' for='date'>Fecha: </label>\\n            <div class='col-sm-6'>\\n              <input type='date' min={{min}} max={{max}} value={{min}} class='form-control' formControlName='date' [ngClass]=\\\"{'is-invalid': (formPlenaria.controls.date.touched || submitted)\\n                  && formPlenaria.controls.date.errors}\\\" onclick='this.select()' />\\n              <span class='text-danger'\\n                *ngIf='(formPlenaria.controls.date.touched || submittedPlen) && formPlenaria.controls.date.errors?.required'>\\n                Requerido\\n              </span>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group row\\\">\\n            <label class='col-form-label col-sm-2 col-md-offset-2' for='startHour'>Hora de inicio: <span\\n                class='text-danger'>*</span></label>\\n            <div class='col-sm-6 row'>\\n              <div class=\\\"col-md-3\\\">\\n                <select class='col-sm-3 form-select' name=\\\"startHour\\\" formControlName=\\\"startHour\\\" [ngClass]=\\\"{'is-invalid': ((formPlenaria.controls.startHour.touched || submittedPlen) && formPlenaria.controls.startHour.value === '')\\n            && formPlenaria.controls.startHour.errors}\\\">\\n                  <option *ngFor=\\\"let opt of hours\\\" value={{opt}}>\\n                    ‌{{ opt }}\\n                  </option>\\n                </select>\\n                <span class='text-danger'\\n                  *ngIf='(formPlenaria.controls.startHour.touched || submittedPlen) && formPlenaria.controls.startHour.errors?.required'>\\n                  Requerido\\n                </span>\\n              </div>\\n              <div class=\\\"col-md-3\\\">\\n                <select class='col-sm-3 form-select' name=\\\"startMinute\\\" formControlName=\\\"startMinute\\\" [ngClass]=\\\"{'is-invalid': ((formPlenaria.controls.startMinute.touched || submittedPlen) && formPlenaria.controls.startMinute.value === '')\\n                  && formPlenaria.controls.startMinute.errors}\\\">\\n                  <option *ngFor=\\\"let opt of minutes\\\" value={{opt}}>\\n                    ‌{{ opt === 0 ? '00': opt }}\\n                  </option>\\n                </select>\\n                <span class='text-danger'\\n                  *ngIf='(formPlenaria.controls.startMinute.touched || submittedPlen) && formPlenaria.controls.startMinute.errors?.required'>\\n                  Requerido\\n                </span>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group row\\\">\\n            <label class='col-form-label col-sm-2 col-md-offset-2' for='endHour'>Hora de Fin: <span\\n                class='text-danger'>*</span></label>\\n            <div class='col-sm-6 row'>\\n              <div class=\\\"col-md-3\\\">\\n                <select class='col-sm-3 form-select' name=\\\"endHour\\\" formControlName=\\\"endHour\\\" [ngClass]=\\\"{'is-invalid': ((formPlenaria.controls.endHour.touched || submittedPlen) && formPlenaria.controls.endHour.value === '')\\n            && formPlenaria.controls.endHour.errors}\\\">\\n                  <option *ngFor=\\\"let opt of hours\\\" value={{opt}}>\\n                    ‌{{ opt }}\\n                  </option>\\n                </select>\\n                <span class='text-danger'\\n                  *ngIf='(formPlenaria.controls.endHour.touched || submittedPlen) && formPlenaria.controls.endHour.errors?.required'>\\n                  Requerido\\n                </span>\\n              </div>\\n              <div class=\\\"col-md-3\\\">\\n                <select class='col-sm-3 form-select' name=\\\"endMinute\\\" formControlName=\\\"endMinute\\\" [ngClass]=\\\"{'is-invalid': ((formPlenaria.controls.endMinute.touched || submittedPlen) && formPlenaria.controls.endMinute.value === '')\\n                  && formPlenaria.controls.endMinute.errors}\\\">\\n                  <option *ngFor=\\\"let opt of minutes\\\" value={{opt}}>\\n                    ‌{{ opt === 0 ? '00': opt }}\\n                  </option>\\n                </select>\\n                <span class='text-danger'\\n                  *ngIf='(formPlenaria.controls.endMinute.touched || submittedPlen) && formPlenaria.controls.endMinute.errors?.required'>\\n                  Requerido\\n                </span>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <!-- title -->\\n          <div class='form-group row'>\\n            <label class='col-form-label col-sm-2 col-sm-offset-2' for='title'>Titulo: <span\\n                class='text-danger'>*</span></label>\\n            <div class='col-sm-6'>\\n              <input type='text' class='form-control' formControlName='title' [ngClass]=\\\"{'is-invalid': (formPlenaria.controls.title.touched || submittedPlen)\\n                  && formPlenaria.controls.title.errors}\\\" onclick='this.select()' />\\n              <span class='text-danger'\\n                *ngIf='(formPlenaria.controls.title.touched || submittedPlen) && formPlenaria.controls.title.errors?.required'>\\n                Requerido\\n              </span>\\n            </div>\\n          </div>\\n\\n          <!-- desc -->\\n          <div class='form-group row'>\\n            <label class='col-form-label col-sm-2 col-sm-offset-2' for='desc'>Descripción: <span\\n                class='text-danger'>*</span></label>\\n            <div class='col-sm-6'>\\n              <input type='text' class='form-control' formControlName='desc' [ngClass]=\\\"{'is-invalid': (formPlenaria.controls.desc.touched || submittedPlen)\\n                  && formPlenaria.controls.desc.errors}\\\" onclick='this.select()' />\\n              <span class='text-danger'\\n                *ngIf='(formPlenaria.controls.desc.touched || submittedPlen) && formPlenaria.controls.desc.errors?.required'>\\n                Requerido\\n              </span>\\n            </div>\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-bs-dismiss=\\\"modal\\\" id='dismissPlenaria'>Cancelar</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)='submitPlenaria()'>{{evento.idEvento ? 'Actualizar Plenaria' : 'Nueva Plenaria'}}</button>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \".calendar-container {\\n  border: 1px solid transparent;\\n  border-color: #fff #ddd;\\n  margin: 0 2rem 2rem;\\n}\\n\\ncalendar-scheduler-view >>>\\n.cal-scheduler-view {\\n  text-transform: capitalize !important;\\n}\\n\\n.btn-block{\\n  width: 100%;\\n}\\n\\ncalendar-scheduler-view >>>\\n.fas {\\n  font-size: 1.25rem;\\n  color: #00609C;\\n}\\n\\n.login-form{\\n  width:100%;\\n}\\n\\n.form-group{\\n  padding-top: 0.75rem;\\n  padding-bottom: 0.75rem;\\n}\\n\\n.spinner-border {\\n  width: 7rem;\\n  height: 7rem;\\n  margin-top: 10rem;\\n  margin-bottom: 10rem;\\n}\\n\\n.container-fluid {\\n  background-color: #F4F4F4;\\n\\n}\\n\\n.contenidos {\\n  padding-bottom: 3rem;\\n}\\n\\n.thead {\\n  background-color: #C8E5F1;\\n}\\n\\n.greyned {\\n  color: grey;\\n}\\n\\n.btn-primary {\\n  background-color: #3CAFE0;\\n  border: none;\\n}\\n\\ni {\\n  margin-top: 0.2rem;\\n  cursor: pointer;\\n}\\n\\ni:hover {\\n  color: blue;\\n}\\n\\n.fas {\\n  font-size: 1.25rem;\\n  color: #00609C;\\n}\\n\\n.fa {\\n  font-size: 1.25rem;\\n  color: #00609C;\\n}\\n\\nhr {\\n  border: #00609C solid 1px;\\n}\\n\\n@media (min-width: 768px) {\\n  hr {\\n    margin-left: 25%;\\n    margin-right: 25%;\\n\\n  }\\n\\n  .container-fluid {\\n    padding: 5rem;\\n  }\\n\\n}\\n\\n\\n\\n\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ScheduleCalendarComponent } from './schedule-calendar.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ScheduleCalendarComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ScheduleCalendarRoutingModule { }\n","import { LOCALE_ID, NgModule } from '@angular/core';\nimport { CommonModule, registerLocaleData } from '@angular/common';\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { SchedulerModule } from 'angular-calendar-scheduler';\nimport { ScheduleCalendarRoutingModule } from './schedule-calendar-routing.module';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport { ScheduleCalendarComponent } from './schedule-calendar.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ScheduleCalendarService } from 'src/app/core/services/schedule-calendar.service';\nimport localeEs from '@angular/common/locales/es';\nregisterLocaleData(localeEs);\n\n@NgModule({\n  declarations: [ScheduleCalendarComponent],\n  imports: [\n    CommonModule,\n    ScheduleCalendarRoutingModule,\n    ReactiveFormsModule,\n    CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory\n    }),\n        SchedulerModule.forRoot({ locale: 'es', headerDateFormat: 'daysRange', logEnabled: true })\n  ],\n  providers: [\n    ScheduleCalendarService,\n    { provide: LOCALE_ID, useValue: 'es-AR' }\n  ],\n})\nexport class ScheduleCalendarModule { }\n"],"sourceRoot":"webpack:///"}