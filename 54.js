(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{"4Inl":function(e,t,n){"use strict";n.r(t),n.d(t,"VerScheduleModule",function(){return P});var o=n("mrSG"),s=n("fXoL"),i=n("ofXK"),a=n("kRoH"),r=n("SA0W"),l=n("L/mj"),d=n("3Pt+"),c=n("OEuk"),m=n("2Yyj"),u=n.n(m),v=n("tyNb"),p=n("piIK"),f=n("dLU1"),h=n("5eHb"),b=n("XNiG"),g=n("isFk"),w=n("VRfU"),y=n("TJ9D"),x=n("PHhj");let D=class{constructor(e,t,n,o,s,i,l,d,c,m,u){this.dateAdapter=t,this.calendarService=n,this.formBuild=o,this.paperService=s,this.congresService=i,this.articulosService=l,this.router=d,this.roomService=c,this.toastr=m,this.route=u,this.CalendarView=a.e,this.view=a.e.Week,this.viewDate=new Date,this.viewDays=r.a,this.refresh=new b.a,this.locale="en",this.hourSegments=3,this.weekStartsOn=1,this.startsWithToday=!0,this.activeDayIsOpen=!0,this.excludeDays=[],this.dayStartHour=8,this.dayEndHour=20,this.submitted=!1,this.minDate=new Date,this.maxDate=Object(p.a)(Object(f.a)(new Date,1)),this.prevBtnDisabled=!1,this.nextBtnDisabled=!1,this.plenaria=!1,this.submittedPlen=!1,this.evento={idEvento:null,date:"",startHour:"",startMinute:"",endHour:"",endMinute:"",title:"",content:"",idSimposio:null,idArticulo:null},this.paperList=[],this.showList=[],this.hours=Array.from({length:15},(e,t)=>t+8),this.minutes=Array.from({length:12},(e,t)=>5*t),this.simposios=[],this.roomList=[],this.loading=!1,this.idAula="",this.min="",this.max="",this.eventosCompletos=[],this.idCongress="",this.scores=Array.from({length:10},(e,t)=>t+1),this.actions=[],this.router.routeReuseStrategy.shouldReuseRoute=()=>!1,this.locale=e,this.segmentModifier=(e=>{e.isDisabled=!this.isDateValid(e.date)}).bind(this),this.eventModifier=(e=>{e.isDisabled=!this.isDateValid(e.start)}).bind(this),this.adjustViewDays(),this.dateOrViewChanged()}onResize(e){this.adjustViewDays()}ngOnInit(){this.getSimposios(),this.getArticles(),this.getRooms(),this.getCongres(),this.route.queryParams.subscribe(e=>{this.idCongress=e.id,this.formEvento=this.formBuild.group(this.values()),this.formPlenaria=this.formBuild.group(this.plenariaValues()),this.formCalif=this.formBuild.group({calificacion:[""],puntuacion:[1],idEvento:[""]})})}getCongres(){this.congresService.getCongressById(this.idCongress).subscribe(e=>{this.congress=e.data[0];const t=e.data[0].fechaInicioExposiciones.split(" ")[0].split("/"),n=e.data[0].fechaFinExposiciones.split(" ")[0].split("/"),o=new Date(t[2],t[1]-1,t[0]),s=new Date(n[2],n[1]-1,n[0]);this.viewDate=o,this.minDate=o,this.maxDate.setDate(s.getDate()),this.min=`${t[2]}-${t[1]}-${t[0]}`,this.max=`${n[2]}-${n[1]}-${n[0]}`})}aulaSelected(e){this.idAula=e,this.loading=!0,this.getEventos()}getEventos(){this.calendarService.getRoomEvents(+this.idAula,+this.idCongress).subscribe(e=>{this.eventosCompletos=e.data,this.events=e.data.map(e=>{let t=e.start.split(" ");const n=t[0].split("/"),o=t[1].split(":");t=e.end.split(" ");const s=t[0].split("/"),i=t[1].split(":");return{id:e.idEvento,title:e.title,content:e.content,idSimposio:e.idSimposio,idArticulo:e.idARticulo,start:new Date(n[2],n[1]-1,n[0],o[0],o[1],0),end:new Date(s[2],s[1]-1,s[0],i[0],i[1],0),color:{primary:"#E0E0E0",secondary:"#EEEEEE"},actions:this.actions,status:"ok",isClickable:!0,isDisabled:!1}}),console.log(this.events),this.loading=!1})}getRooms(){this.roomService.getRooms().subscribe(e=>{this.roomList=e.data[0]})}getArticles(){this.articulosService.getCameraReady().subscribe(e=>{this.paperList=e.data,this.showList=this.paperList.slice()})}getSimposios(){this.paperService.getSimposiosActivos().subscribe(e=>{this.simposios=e.data})}plenariaValues(){return{idEvento:[this.evento.idEvento||null],date:[this.evento.date||""],startHour:[+this.evento.startHour||0],endHour:[+this.evento.endHour||0],startMinute:[+this.evento.startMinute||0],endMinute:[+this.evento.endMinute||0],title:[this.evento.title||"",[d.g.required]],desc:[this.evento.content||"",[d.g.required]]}}values(){return{idEvento:[this.evento.idEvento||null],date:[this.evento.date||""],startHour:[+this.evento.startHour||0],endHour:[+this.evento.endHour||0],startMinute:[+this.evento.startMinute||0],endMinute:[+this.evento.endMinute||0],title:[this.evento.title,[d.g.required]],desc:[this.evento.content||"",[d.g.required]],idSimposio:[this.evento.idSimposio||"",[d.g.required]],idPaper:[this.evento.idArticulo||"",[d.g.required]]}}adjustViewDays(){const e=window.innerWidth;this.viewDays=e<=450?1:e<=768?3:r.a}changeDate(e){console.log("changeDate",e),this.viewDate=e,this.dateOrViewChanged()}changeView(e){console.log("changeView",e),this.view=e,this.dateOrViewChanged()}dateOrViewChanged(){this.startsWithToday?(this.prevBtnDisabled=!this.isDateValid(Object(r.g)(this.dateAdapter,a.e.Day,this.viewDate,1)),this.nextBtnDisabled=!this.isDateValid(Object(r.d)(this.dateAdapter,a.e.Day,this.viewDate,1))):(this.prevBtnDisabled=!this.isDateValid(Object(r.e)(this.dateAdapter,a.e.Day,Object(r.g)(this.dateAdapter,a.e.Day,this.viewDate,1))),this.nextBtnDisabled=!this.isDateValid(Object(r.f)(this.dateAdapter,a.e.Day,Object(r.d)(this.dateAdapter,a.e.Day,this.viewDate,1)))),this.viewDate<this.minDate?this.changeDate(this.minDate):this.viewDate>this.maxDate&&this.changeDate(this.maxDate)}isDateValid(e){return e>=this.minDate&&e<=this.maxDate}eventClicked(e,t){const n=this.eventosCompletos.find(e=>e.idEvento===t.id);if(this.evento=Object.assign(Object.assign({},this.evento),{idEvento:t.id||"",date:t.start.toLocaleDateString(),startHour:t.start.toLocaleTimeString().split(":")[0],startMinute:t.start.toLocaleTimeString().split(":")[1],endHour:t.end.toLocaleTimeString().split(":")[0],endMinute:t.end.toLocaleTimeString().split(":")[1],title:t.title,content:n.content,idArticulo:n.idArticulo,idSimposio:n.idSimposio}),this.formCalif=this.formBuild.group({calificacion:[""],puntuacion:[1],idEvento:[this.evento.idEvento]}),null!==this.evento.idSimposio){this.formEvento=this.formBuild.group(this.values());document.getElementById("activar-modal").click()}else{const e=this.evento.date.split("/");this.evento.date=e[2]+"-"+e[1]+"-"+e[0],this.formPlenaria=this.formBuild.group(this.plenariaValues());document.getElementById("btnPLenaria").click()}}calificar(){const e=this.formCalif.controls,t={idEvento:e.idEvento.value,puntuacion:e.puntuacion.value,calificacion:e.calificacion.value};this.calendarService.calificar(t).subscribe(e=>{this.toastr.success("Gracias por calificar.")})}simposioSeleccionado(e){this.showList=this.paperList.filter(t=>{if(+t.idSimposio==+e){for(let e=0;e<this.eventosCompletos.length;e++){if(this.eventosCompletos[e].idArticulo===t.idArticulo&&this.evento.idArticulo!==t.idArticulo)return!1}return!0}})}activarModalCalif(){document.getElementById("activarModalCalif").click()}};D.ctorParameters=()=>[{type:String,decorators:[{type:s.D,args:[s.L]}]},{type:a.f},{type:c.a},{type:d.a},{type:y.a},{type:w.a},{type:g.a},{type:v.b},{type:x.a},{type:h.d},{type:v.a}],D.propDecorators={onResize:[{type:s.B,args:["window:resize",["$event"]]}]},D=Object(o.c)([Object(s.o)({selector:"app-ver-schedule",template:'<div class="container-fluid">\n  <div class="contenidos">\n    <hr>\n    <h3 class=\'text-center\'>Agenda del Congreso</h3>\n    <h6 class=\'text-center\'>{{congress.nombre}}</h6>\n    <hr>\n  </div>\n  <br>\n  <div class="row py-3 ">\n    <div class="col-md-2">\n      <label for="">Seleccione un Aula:</label>\n    </div>\n    <div class="col-md-4  mr-auto">\n      <div class="col-sm-12">\n        <select name="eval" class="form-control" (change)="aulaSelected($event.target.value)">\n          <option selected disabled> -- Seleccione un Aula --</option>\n          <option *ngFor="let room of roomList" value=\'{{room.id}}\'>{{ room.nombre }} </option>\n        </select>\n      </div>\n    </div>\n  </div>\n  <div class="row" id="loading">\n    <div class="row justify-content-center" *ngIf="loading">\n      <div class="spinner-border text-primary" role="status">\n        <span class="sr-only">Loading...</span>\n      </div>\n    </div>\n  </div>\n  <div class="row" *ngIf="events && !loading">\n    <div class="calendar-container">\n      <div class="row mt-4">\n        <div class="col-md-4 text-center">\n          <h3 class="mt-0">{{ viewDate | calendarSchedulerDate:(view +\n            \'ViewTitle\'):locale:weekStartsOn:excludeDays:viewDays:startsWithToday }}</h3>\n        </div>\n        <div class="col-md-4 text-right">\n          <div class="btn-group m-1" role="group">\n            <button type="button" class="btn btn-primary" mwlCalendarPreviousView [view]="view" [(viewDate)]="viewDate"\n              [daysInWeek]="viewDays" [excludeDays]="excludeDays" [disabled]="prevBtnDisabled"\n              (viewDateChange)="dateOrViewChanged()">\n              <span class="valign-center">\n                <i title="Precedente" class="material-icons md-18">Anterior</i>\n              </span>\n            </button>\n            <button type="button" class="btn btn-light" mwlCalendarToday [(viewDate)]="viewDate"\n              (viewDateChange)="dateOrViewChanged()" disabled>\n              <span class="valign-center">\n                <i title="Hoy" class="material-icons md-18"></i>\n              </span>\n            </button>\n            <button type="button" class="btn btn-primary" mwlCalendarNextView [view]="view" [(viewDate)]="viewDate"\n              [daysInWeek]="viewDays" [excludeDays]="excludeDays" [disabled]="nextBtnDisabled"\n              (viewDateChange)="dateOrViewChanged()">\n              <span class="valign-center">\n                <i title="Siguiente" class="material-icons md-18">Siguiente</i>\n              </span>\n            </button>\n          </div>\n        </div>\n      </div>\n      <br>\n      <div [ngSwitch]="view">\n        <calendar-scheduler-view *ngSwitchCase="CalendarView.Week" [viewDate]="viewDate" [events]="events"\n          [locale]="locale" [viewDays]="viewDays" [weekStartsOn]="weekStartsOn" [excludeDays]="excludeDays"\n          [startsWithToday]="startsWithToday" [hourSegments]="hourSegments" [dayStartHour]="dayStartHour"\n          [dayEndHour]="dayEndHour" [dayModifier]="dayModifier" [hourModifier]="hourModifier"\n          [segmentModifier]="segmentModifier" [eventModifier]="eventModifier" [showEventActions]="true"\n          [showSegmentHour]="true" [zoomEventOnHover]="true" (eventClicked)="eventClicked(\'Clicked\', $event.event)"\n          [refresh]="refresh">\n        </calendar-scheduler-view>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n\n\n\x3c!-- Button trigger modal --\x3e\n<button type="button" hidden class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#eventModal"\n  id=\'activar-modal\'>\n  Launch demo modal\n</button>\n\n\x3c!-- Button trigger modal caluif--\x3e\n<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#calificationModal"  hidden id="activarModalCalif">\nBoton oculto\n</button>\n\n\x3c!-- Modal --\x3e\n<div class="modal fade" id="eventModal" tabindex="-1" aria-labelledby="eventModalLabel" aria-hidden="true"\n  *ngIf="formEvento">\n  <div class="modal-dialog  modal-xl">\n    <div class="modal-content">\n      <div class="modal-header">\n        <h5 class="modal-title" id="eventModalLabel">Informaci\xf3n del evento</h5>\n        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>\n      </div>\n      <div class="modal-body">\n        <form [formGroup]=\'formEvento\'>\n          \x3c!-- date --\x3e\n          <div class=\'form-group row\'>\n            <label class=\'col-form-label col-sm-2 col-sm-offset-2\' for=\'date\'>Fecha: </label>\n            <div class=\'col-sm-6\'>\n              <label class=\'col-form-label col-sm-2 col-sm-offset-2\' for=\'date\'>{{evento.date}}</label>\n            </div>\n          </div>\n\n          <div class="form-group row">\n            <label class=\'col-form-label col-sm-2 col-md-offset-2\' for=\'startHour\'>Hora de inicio: <span\n                class=\'text-danger\'>*</span></label>\n            <div class=\'col-sm-6 row\'>\n              <div class="col-md-3">\n                <select class=\'col-sm-3 form-select\' disabled name="startHour" formControlName="startHour" [ngClass]="{\'is-invalid\': ((formEvento.controls.startHour.touched || submitted) && formEvento.controls.startHour.value === \'\')\n            && formEvento.controls.startHour.errors}">\n                  <option *ngFor="let opt of hours" value={{opt}}>\n                    \u200c{{ opt }}\n                  </option>\n                </select>\n                <span class=\'text-danger\'\n                  *ngIf=\'(formEvento.controls.startHour.touched || submitted) && formEvento.controls.startHour.errors?.required\'>\n                  Requerido\n                </span>\n              </div>\n              <div class="col-md-3">\n                <select class=\'col-sm-3 form-select\' disabled name="startMinute" formControlName="startMinute"\n                  [ngClass]="{\'is-invalid\': ((formEvento.controls.startMinute.touched || submitted) && formEvento.controls.startMinute.value === \'\')\n                  && formEvento.controls.startMinute.errors}">\n                  <option *ngFor="let opt of minutes" value={{opt}}>\n                    \u200c{{ opt === 0 ? \'00\': opt }}\n                  </option>\n                </select>\n                <span class=\'text-danger\'\n                  *ngIf=\'(formEvento.controls.startMinute.touched || submitted) && formEvento.controls.startMinute.errors?.required\'>\n                  Requerido\n                </span>\n              </div>\n            </div>\n          </div>\n\n          <div class="form-group row">\n            <label class=\'col-form-label col-sm-2 col-md-offset-2\' for=\'endHour\'>Hora de Fin: <span\n                class=\'text-danger\'>*</span></label>\n            <div class=\'col-sm-6 row\'>\n              <div class="col-md-3">\n                <select class=\'col-sm-3 form-select\' name="endHour" disabled formControlName="endHour" [ngClass]="{\'is-invalid\': ((formEvento.controls.endHour.touched || submitted) && formEvento.controls.endHour.value === \'\')\n            && formEvento.controls.endHour.errors}">\n                  <option *ngFor="let opt of hours" value={{opt}}>\n                    \u200c{{ opt }}\n                  </option>\n                </select>\n                <span class=\'text-danger\'\n                  *ngIf=\'(formEvento.controls.endHour.touched || submitted) && formEvento.controls.endHour.errors?.required\'>\n                  Requerido\n                </span>\n              </div>\n              <div class="col-md-3">\n                <select class=\'col-sm-3 form-select\' name="endMinute" disabled formControlName="endMinute" [ngClass]="{\'is-invalid\': ((formEvento.controls.endMinute.touched || submitted) && formEvento.controls.endMinute.value === \'\')\n                  && formEvento.controls.endMinute.errors}">\n                  <option *ngFor="let opt of minutes" value={{opt}}>\n                    \u200c{{ opt === 0 ? \'00\': opt }}\n                  </option>\n                </select>\n                <span class=\'text-danger\'\n                  *ngIf=\'(formEvento.controls.endMinute.touched || submitted) && formEvento.controls.endMinute.errors?.required\'>\n                  Requerido\n                </span>\n              </div>\n            </div>\n          </div>\n\n          \x3c!-- idSimposio --\x3e\n          <div class=\'form-group row\'>\n            <label class=\'col-form-label col-sm-2 col-sm-offset-2\' for=\'idSimposio\'>Simposio: <span\n                class=\'text-danger\'>*</span></label>\n            <div class=\'col-sm-6\'>\n              <select class=\'col-sm-4 form-select\' name="idSimposio" disabled formControlName="idSimposio"\n                (change)=\'simposioSeleccionado($event.target.value)\' [ngClass]="{\'is-invalid\': ((formEvento.controls.idSimposio.touched || submitted) && formEvento.controls.idSimposio.value === \'\')\n          && formEvento.controls.idSimposio.errors}">\n                <option *ngFor="let opt of simposios" value={{opt.id}}>\n                  \u200c{{ opt.descripcion }}\n                </option>\n              </select>\n              <span class=\'text-danger\'\n                *ngIf=\'(formEvento.controls.idSimposio.touched || submitted) && formEvento.controls.idSimposio.errors?.required\'>\n                Requerido\n              </span>\n            </div>\n          </div>\n\n          \x3c!-- idPaper --\x3e\n          <div class=\'form-group row\' *ngIf="paperList">\n            <label class=\'col-form-label col-sm-2 col-sm-offset-2\' for=\'idPaper\'>Paper: <span\n                class=\'text-danger\'>*</span></label>\n            <div class=\'col-sm-6\'>\n              <select class=\'col-sm-4 form-select\' name="idPaper" disabled formControlName="idPaper" [ngClass]="{\'is-invalid\': ((formEvento.controls.idPaper.touched || submitted) && formEvento.controls.idPaper.value === \'\')\n          && formEvento.controls.idPaper.errors}">\n                <option selected hidden>-- Seleccione un Paper --</option>\n                <option *ngFor="let opt of showList" value={{opt.idArticulo}}>\n                  \u200c{{ opt.nombreArticulo }}\n                </option>\n              </select>\n              <span class=\'text-danger\'\n                *ngIf=\'(formEvento.controls.idPaper.touched || submitted) && formEvento.controls.idPaper.errors?.required\'>\n                Requerido\n              </span>\n            </div>\n          </div>\n\n          \x3c!-- title --\x3e\n          <div class=\'form-group row\'>\n            <label class=\'col-form-label col-sm-2 col-sm-offset-2\' for=\'title\'>Titulo: <span\n                class=\'text-danger\'>*</span></label>\n            <div class=\'col-sm-6\'>\n              <input type=\'text\' class=\'form-control\' formControlName=\'title\' disabled [ngClass]="{\'is-invalid\': (formEvento.controls.title.touched || submitted)\n                  && formEvento.controls.title.errors}" onclick=\'this.select()\' />\n              <span class=\'text-danger\'\n                *ngIf=\'(formEvento.controls.title.touched || submitted) && formEvento.controls.title.errors?.required\'>\n                Requerido\n              </span>\n            </div>\n          </div>\n\n          \x3c!-- desc --\x3e\n          <div class=\'form-group row\'>\n            <label class=\'col-form-label col-sm-2 col-sm-offset-2\' for=\'desc\'>Descripci\xf3n: <span\n                class=\'text-danger\'>*</span></label>\n            <div class=\'col-sm-6\'>\n              <input type=\'text\' class=\'form-control\' formControlName=\'desc\' disabled [ngClass]="{\'is-invalid\': (formEvento.controls.desc.touched || submitted)\n                  && formEvento.controls.desc.errors}" onclick=\'this.select()\' />\n              <span class=\'text-danger\'\n                *ngIf=\'(formEvento.controls.desc.touched || submitted) && formEvento.controls.desc.errors?.required\'>\n                Requerido\n              </span>\n            </div>\n          </div>\n          <div class="modal-footer">\n            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id=\'dismiss\'>Aceptar</button>\n            <button type="button" class="btn btn-primary" data-bs-dismiss="modal" id=\'dismiss\' (click)="activarModalCalif()"\n              id=\'activar-modal\'>\n              Dejar una calificaci\xf3n\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n\n\x3c!-- Modal --\x3e\n<div class="modal fade" id="plenariaModal" tabindex="-1" aria-labelledby="eventModalLabel" aria-hidden="true"\n  *ngIf="formPlenaria">\n  <div class="modal-dialog  modal-xl">\n    <div class="modal-content">\n      <div class="modal-header">\n        <h5 class="modal-title" id="eventModalLabel">Informaci\xf3n del Evento</h5>\n        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>\n      </div>\n      <div class="modal-body">\n        <form [formGroup]=\'formPlenaria\'>\n          \x3c!-- date --\x3e\n          <div class=\'form-group row\'>\n            <label class=\'col-form-label col-sm-2 col-sm-offset-2\' for=\'date\'>Fecha: </label>\n            <div class=\'col-sm-6\'>\n              <input type=\'date\' min={{min}} max={{max}} value={{min}} disabled class=\'form-control\'\n                formControlName=\'date\' [ngClass]="{\'is-invalid\': (formPlenaria.controls.date.touched || submitted)\n                  && formPlenaria.controls.date.errors}" onclick=\'this.select()\' />\n              <span class=\'text-danger\'\n                *ngIf=\'(formPlenaria.controls.date.touched || submittedPlen) && formPlenaria.controls.date.errors?.required\'>\n                Requerido\n              </span>\n            </div>\n          </div>\n\n          <div class="form-group row">\n            <label class=\'col-form-label col-sm-2 col-md-offset-2\' for=\'startHour\'>Hora de inicio: <span\n                class=\'text-danger\'>*</span></label>\n            <div class=\'col-sm-6 row\'>\n              <div class="col-md-3">\n                <select class=\'col-sm-3 form-select\' name="startHour" disabled formControlName="startHour" [ngClass]="{\'is-invalid\': ((formPlenaria.controls.startHour.touched || submittedPlen) && formPlenaria.controls.startHour.value === \'\')\n            && formPlenaria.controls.startHour.errors}">\n                  <option *ngFor="let opt of hours" value={{opt}}>\n                    \u200c{{ opt }}\n                  </option>\n                </select>\n                <span class=\'text-danger\'\n                  *ngIf=\'(formPlenaria.controls.startHour.touched || submittedPlen) && formPlenaria.controls.startHour.errors?.required\'>\n                  Requerido\n                </span>\n              </div>\n              <div class="col-md-3">\n                <select class=\'col-sm-3 form-select\' name="startMinute" disabled formControlName="startMinute"\n                  [ngClass]="{\'is-invalid\': ((formPlenaria.controls.startMinute.touched || submittedPlen) && formPlenaria.controls.startMinute.value === \'\')\n                  && formPlenaria.controls.startMinute.errors}">\n                  <option *ngFor="let opt of minutes" value={{opt}}>\n                    \u200c{{ opt === 0 ? \'00\': opt }}\n                  </option>\n                </select>\n                <span class=\'text-danger\'\n                  *ngIf=\'(formPlenaria.controls.startMinute.touched || submittedPlen) && formPlenaria.controls.startMinute.errors?.required\'>\n                  Requerido\n                </span>\n              </div>\n            </div>\n          </div>\n\n          <div class="form-group row">\n            <label class=\'col-form-label col-sm-2 col-md-offset-2\' for=\'endHour\'>Hora de Fin: <span\n                class=\'text-danger\'>*</span></label>\n            <div class=\'col-sm-6 row\'>\n              <div class="col-md-3">\n                <select class=\'col-sm-3 form-select\' name="endHour" disabled formControlName="endHour" [ngClass]="{\'is-invalid\': ((formPlenaria.controls.endHour.touched || submittedPlen) && formPlenaria.controls.endHour.value === \'\')\n            && formPlenaria.controls.endHour.errors}">\n                  <option *ngFor="let opt of hours" value={{opt}}>\n                    \u200c{{ opt }}\n                  </option>\n                </select>\n                <span class=\'text-danger\'\n                  *ngIf=\'(formPlenaria.controls.endHour.touched || submittedPlen) && formPlenaria.controls.endHour.errors?.required\'>\n                  Requerido\n                </span>\n              </div>\n              <div class="col-md-3">\n                <select class=\'col-sm-3 form-select\' name="endMinute" disabled formControlName="endMinute" [ngClass]="{\'is-invalid\': ((formPlenaria.controls.endMinute.touched || submittedPlen) && formPlenaria.controls.endMinute.value === \'\')\n                  && formPlenaria.controls.endMinute.errors}">\n                  <option *ngFor="let opt of minutes" value={{opt}}>\n                    \u200c{{ opt === 0 ? \'00\': opt }}\n                  </option>\n                </select>\n                <span class=\'text-danger\'\n                  *ngIf=\'(formPlenaria.controls.endMinute.touched || submittedPlen) && formPlenaria.controls.endMinute.errors?.required\'>\n                  Requerido\n                </span>\n              </div>\n            </div>\n          </div>\n\n          \x3c!-- title --\x3e\n          <div class=\'form-group row\'>\n            <label class=\'col-form-label col-sm-2 col-sm-offset-2\' for=\'title\'>Titulo: <span\n                class=\'text-danger\'>*</span></label>\n            <div class=\'col-sm-6\'>\n              <input type=\'text\' class=\'form-control\' formControlName=\'title\' disabled [ngClass]="{\'is-invalid\': (formPlenaria.controls.title.touched || submittedPlen)\n                  && formPlenaria.controls.title.errors}" onclick=\'this.select()\' />\n              <span class=\'text-danger\'\n                *ngIf=\'(formPlenaria.controls.title.touched || submittedPlen) && formPlenaria.controls.title.errors?.required\'>\n                Requerido\n              </span>\n            </div>\n          </div>\n\n          \x3c!-- desc --\x3e\n          <div class=\'form-group row\'>\n            <label class=\'col-form-label col-sm-2 col-sm-offset-2\' for=\'desc\'>Descripci\xf3n: <span\n                class=\'text-danger\'>*</span></label>\n            <div class=\'col-sm-6\'>\n              <input type=\'text\' class=\'form-control\' formControlName=\'desc\' disabled [ngClass]="{\'is-invalid\': (formPlenaria.controls.desc.touched || submittedPlen)\n                  && formPlenaria.controls.desc.errors}" onclick=\'this.select()\' />\n              <span class=\'text-danger\'\n                *ngIf=\'(formPlenaria.controls.desc.touched || submittedPlen) && formPlenaria.controls.desc.errors?.required\'>\n                Requerido\n              </span>\n            </div>\n          </div>\n          <div class="modal-footer">\n            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"\n              id=\'dismissPlenaria\'>Aceptar</button>\n              <button type="button" class="btn btn-primary" data-bs-dismiss="modal" id=\'dismiss\' (click)="activarModalCalif()"\n              id=\'activar-modal\'>\n              Dejar una calificaci\xf3n\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n\x3c!-- Modal --\x3e\n<div class="modal fade" id="calificationModal" tabindex="-1" aria-labelledby="calificationModalLabel" aria-hidden="true"\n  *ngIf="formEvento">\n  <div class="modal-dialog  modal-xl">\n    <div class="modal-content">\n      <div class="modal-header">\n        <h5 class="modal-title" id="calificationModalLabel">Valoraci\xf3n del evento</h5>\n        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>\n      </div>\n      <div class="modal-body">\n        <form [formGroup]=\'formCalif\'>\n          \x3c!-- puntuacion --\x3e\n          <div class=\'form-group row\'>\n            <label class=\'col-form-label col-sm-2 col-sm-offset-2\' for=\'puntuacion\'>Puntuaci\xf3n:</label>\n            <div class=\'col-sm-6\'>\n              <select class=\'col-sm-4 form-select\' name="puntuacion" formControlName="puntuacion">\n                <option selected hidden>-- Seleccione --</option>\n                <option *ngFor="let opt of scores" value={{opt}}>\n                  \u200c{{ opt }}\n                </option>\n              </select>\n            </div>\n          </div>\n          \x3c!-- calificacion --\x3e\n          <div class=\'form-group row\'>\n            <label class=\'col-form-label col-sm-2 col-sm-offset-2\' for=\'calificacion\'>Comentario:</label>\n            <div class=\'col-sm-6\'>\n              <textarea type=\'text\' maxlength="512" rows="3" class=\'form-control\' formControlName=\'calificacion\'></textarea>\n            </div>\n          </div>\n\n          <div class="modal-footer">\n            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id=\'dismiss\'>Cancelar</button>\n            <button type="button" class="btn btn-primary" data-bs-dismiss="modal" id=\'dismiss\'\n              (click)="calificar()">Aceptar</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n',providers:[{provide:a.a,useClass:r.b}],styles:[".calendar-container {\n  border: 1px solid transparent;\n  border-color: #fff #ddd;\n  margin: 0 2rem 2rem;\n}\n\ncalendar-scheduler-view >>>\n.cal-scheduler-view {\n  text-transform: capitalize !important;\n}\n\n.btn-block{\n  width: 100%;\n}\n\ncalendar-scheduler-view >>>\n.fas {\n  font-size: 1.25rem;\n  color: #00609C;\n}\n\n.login-form{\n  width:100%;\n}\n\n.form-group{\n  padding-top: 0.75rem;\n  padding-bottom: 0.75rem;\n}\n\n.spinner-border {\n  width: 7rem;\n  height: 7rem;\n  margin-top: 10rem;\n  margin-bottom: 10rem;\n}\n\n.container-fluid {\n  background-color: #F4F4F4;\n\n}\n\n.contenidos {\n  padding-bottom: 3rem;\n}\n\n.thead {\n  background-color: #C8E5F1;\n}\n\n.greyned {\n  color: grey;\n}\n\n.btn-primary {\n  background-color: #3CAFE0;\n  border: none;\n}\n\ni {\n  margin-top: 0.2rem;\n  cursor: pointer;\n}\n\ni:hover {\n  color: blue;\n}\n\n.fas {\n  font-size: 1.25rem;\n  color: #00609C;\n}\n\n.fa {\n  font-size: 1.25rem;\n  color: #00609C;\n}\n\nhr {\n  border: #00609C solid 1px;\n}\n\n@media (min-width: 768px) {\n  hr {\n    margin-left: 25%;\n    margin-right: 25%;\n\n  }\n\n  .container-fluid {\n    padding: 5rem;\n  }\n\n}\n\n\n\n"]})],D);const C=[{path:"",component:D}];let E=class{};E=Object(o.c)([Object(s.N)({imports:[v.c.forChild(C)],exports:[v.c]})],E),Object(i.B)(u.a);let P=class{};P=Object(o.c)([Object(s.N)({declarations:[D],imports:[i.c,E,d.f,a.d.forRoot({provide:a.f,useFactory:l.a}),r.c.forRoot({locale:"es",headerDateFormat:"daysRange",logEnabled:!0})],providers:[c.a,{provide:s.L,useValue:"es-AR"}]})],P)}}]);
//# sourceMappingURL=54.js.map