{"version":3,"sources":["./src/app/pages/evaluator/evaluator.component.ts","./src/app/pages/evaluator/evaluator.component.html","./src/app/pages/evaluator/evaluator.component.css","./src/app/pages/evaluator/evaluator-routing.module.ts","./src/app/pages/evaluator/evaluator.module.ts"],"names":["evaluatorService","toastr","evaluatorList","evaluatorSelectedList","adding","evaluatorSelectedId","notLoaded","showListSelected","showListNotSelected","window","scrollTo","this","getEvaluatorSelected","getEvaluatorsSimposio","subscribe","res","data","length","filter","x","includes","idEvaluador","slice","info","getEvaluatorsGroup","map","getEvaluators","item","postEvaluatorGroup","push","show","toastComponent","disableTimeOut","tapToDismiss","enableHtml","onAction","getEvaluatorsAll","nombreEv","apellidoEv","deleteEvaluatorGroup","filterList","selector","template","routes","path","component","EvaluatorRoutingModule","imports","forChild","exports","EvaluatorModule","declarations","schemas"],"mappings":"+OAYa,EAAkB,MAU7B,YACUA,EACAC,GADA,KAAAD,mBACA,KAAAC,SAXV,KAAAC,cAAgB,GAChB,KAAAC,sBAAyB,GACzB,KAAAC,QAAS,EAET,KAAAC,oBAAsB,GACtB,KAAAC,WAAY,EACZ,KAAAC,iBAAmB,GACnB,KAAAC,oBAAsB,GAQtB,WACEC,OAAOC,SAAS,EAAG,GACnBC,KAAKC,uBAMP,gBACED,KAAKX,iBAAiBa,wBAAwBC,UAAWC,IAC/B,IAApBA,EAAIC,KAAKC,QAIbN,KAAKT,cAAgBa,EAAIC,KAAKE,OAAQC,IACpC,IAAKR,KAAKN,oBAAoBe,SAASD,EAAEE,aACvC,OAAOF,IAGXR,KAAKH,oBAAsBG,KAAKT,cAAcoB,SAR5CX,KAAKV,OAAOsB,KAAK,mEAevB,uBACEZ,KAAKX,iBAAiBwB,qBAAqBV,UAAWC,IACpDJ,KAAKR,sBAAwBY,EAAIC,KACjCL,KAAKN,oBAAsBU,EAAIC,KAAKS,IAAKN,GAAWA,EAAEE,aACtDV,KAAKJ,iBAAmBQ,EAAIC,KAC5BL,KAAKe,kBAUT,aAAaC,GACXhB,KAAKX,iBAAiB4B,mBAAmBD,EAAKN,aAAaP,UAAWC,IACpEJ,KAAKT,cAAgBS,KAAKT,cAAcgB,OAAQC,IAC9C,GAAMA,EAAEE,cAAgBM,EAAKN,YAC3B,OAAOF,IAGXR,KAAKH,oBAAsBG,KAAKT,cAAcoB,QAC9CX,KAAKR,sBAAsB0B,KAAKF,GAChChB,KAAKJ,iBAAmBI,KAAKR,sBAAsBmB,UAOvD,UACEX,KAAKV,OACF6B,KAAM,qHAA6G,kCAA6B,CAC/IC,eAAgB,IAChBC,gBAAgB,EAChBC,cAAc,EACdC,YAAY,IAEbC,SAASrB,UAAU,KAElBH,KAAKX,iBAAiBoC,mBAAmBtB,UAAWC,IAClDJ,KAAKT,cAAgBa,EAAIC,KAAKE,OAAQC,IACpC,IAAKR,KAAKN,oBAAoBe,SAASD,EAAEE,aACvC,OAAOF,IAGXR,KAAKH,oBAAsBG,KAAKT,cAAcoB,YAKtD,oBAAoBK,GAClBhB,KAAKV,OACF6B,KAAM,kDACPH,EAAKU,SAAW,IAAMV,EAAKW,WADpB,oDACoF,0BAAwB,CACjHP,eAAgB,IAChBC,gBAAgB,EAChBC,cAAc,EACdC,YAAY,IAEbC,SAASrB,UAAU,KAElBH,KAAKX,iBAAiBuC,qBAAqBZ,EAAKN,aAAaP,UAAWC,IACtEJ,KAAKT,cAAc2B,KAAKF,GACxBhB,KAAKR,sBAAwBQ,KAAKR,sBAAsBe,OAAQC,IAC9D,GAAIA,EAAEE,cAAgBM,EAAKN,YACzB,OAAOM,IAGXhB,KAAKH,oBAAoBqB,KAAKF,GAC9BhB,KAAKJ,iBAAmBI,KAAKR,sBAAsBmB,YAM3D,eAAekB,GACb7B,KAAKJ,iBAAmBiC,EAG1B,kBAAkBA,GAChB7B,KAAKH,oBAAsBgC,I,4BAnItB,K,MAHA,MAUI,EAAkB,aAL9B,YAAU,CACTC,SAAU,gBACVC,SCTa,g1E,QCAA,8jBFYF,GGRb,MAAMC,EAAiB,CAAC,CACtBC,KAAM,GACNC,UAAW,I,IAOAC,EAAsB,QAAtBA,EAAsB,aAJlC,YAAS,CACRC,QAAS,CAAC,IAAaC,SAASL,IAChCM,QAAS,CAAC,QAECH,G,gCCQAI,EAAe,QAAfA,EAAe,aAZ3B,YAAS,CACRC,aAAc,CACZ,GAEFJ,QAAS,CACP,IACAD,EACA,IACA,KAEFM,QAAS,CAAC,QAECF","file":"35.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {  FormGroup } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { CustomToastComponent } from 'src/app/core/components/custom-toast/custom-toast.component';\n\nimport { EvaluatorService } from 'src/app/core/services/evaluator.service';\n\n@Component({\n  selector: 'app-evaluator',\n  templateUrl: './evaluator.component.html',\n  styleUrls: ['./evaluator.component.css'],\n})\nexport class EvaluatorComponent implements OnInit {\n  evaluatorList = [];\n  evaluatorSelectedList =  [];\n  adding = false;\n  formEvaluator: FormGroup;\n  evaluatorSelectedId = [];\n  notLoaded = true;\n  showListSelected = [];\n  showListNotSelected = [];\n\n  constructor(\n    private evaluatorService: EvaluatorService,\n    private toastr: ToastrService,\n\n  ) { }\n\n  ngOnInit(): void {\n    window.scrollTo(0, 0);\n    this.getEvaluatorSelected();\n  }\n\n  /**\n   * Carga los evaluadores no seleccionados\n   */\n  getEvaluators(): void {\n    this.evaluatorService.getEvaluatorsSimposio().subscribe((res: any) => {\n      if (res.data.length === 0) {\n        this.toastr.info('Lo sentimos, actualmente no disponemos de más evaluadores.');\n        return;\n      }\n      this.evaluatorList = res.data.filter((x: any) => {\n        if (!this.evaluatorSelectedId.includes(x.idEvaluador)) {\n          return x;\n        }\n      });\n      this.showListNotSelected = this.evaluatorList.slice();\n    });\n  }\n\n  /**\n   * Carga los evaluadores ya seleccionados\n   */\n  getEvaluatorSelected(): void {\n    this.evaluatorService.getEvaluatorsGroup().subscribe((res: any) => {\n      this.evaluatorSelectedList = res.data;\n      this.evaluatorSelectedId = res.data.map((x: any) => x.idEvaluador);\n      this.showListSelected = res.data;\n      this.getEvaluators();\n    });\n\n  }\n\n  /**\n   *\n   * @param item Evaluador\n   * Selecciona un nuevo evaluador\n   */\n  addEvaluator(item: any): void {\n    this.evaluatorService.postEvaluatorGroup(item.idEvaluador).subscribe((res: any) => {\n      this.evaluatorList = this.evaluatorList.filter((x: any) => {\n        if (!(x.idEvaluador === item.idEvaluador)) {\n          return x;\n        }\n      });\n      this.showListNotSelected = this.evaluatorList.slice();\n      this.evaluatorSelectedList.push(item);\n      this.showListSelected = this.evaluatorSelectedList.slice();\n    });\n  }\n\n  /**\n   * Carga todos los evaluadores\n   */\n  loadAll(): void {\n    this.toastr\n      .show( 'Atención, los evaluadores que está por cagar no pertenecen a su simposio. ¿Desea hacerlo de todas formas?', '¿Agregar más evaluadores?', {\n        toastComponent: CustomToastComponent,\n        disableTimeOut: true,\n        tapToDismiss: false,\n        enableHtml: true\n      })\n      .onAction.subscribe(() => {\n        // Aca se hace el camino feliz\n        this.evaluatorService.getEvaluatorsAll().subscribe((res: any) => {\n          this.evaluatorList = res.data.filter((x: any) => {\n            if (!this.evaluatorSelectedId.includes(x.idEvaluador)) {\n              return x;\n            }\n          });\n          this.showListNotSelected = this.evaluatorList.slice();\n        });\n      });\n  }\n\n  toggleRemoveHandled(item: any): void {\n    this.toastr\n      .show( 'Está seguro que desea eliminar el evaluador ' +\n      item.nombreEv + ' ' + item.apellidoEv + '? '+ '\\nToda la configuración creada se perderá', '¿Eliminar Evaluador?', {\n        toastComponent: CustomToastComponent,\n        disableTimeOut: true,\n        tapToDismiss: false,\n        enableHtml: true\n      })\n      .onAction.subscribe(() => {\n        // Aca se hace el camino feliz\n        this.evaluatorService.deleteEvaluatorGroup(item.idEvaluador).subscribe((res: any) => {\n          this.evaluatorList.push(item);\n          this.evaluatorSelectedList = this.evaluatorSelectedList.filter((x: any) => {\n            if (x.idEvaluador !== item.idEvaluador) {\n              return item;\n            }\n          });\n          this.showListNotSelected.push(item);\n          this.showListSelected = this.evaluatorSelectedList.slice();\n\n      });\n    });\n  }\n\n  searchSelected(filterList): void {\n    this.showListSelected = filterList;\n  }\n\n  searchNotSelected(filterList): void {\n    this.showListNotSelected = filterList;\n  }\n\n}\n","export default \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"contenidos\\\">\\n    <hr />\\n    <h3 class=\\\"text-center\\\">Evaluadores Activos</h3>\\n    <hr />\\n  </div>\\n  <br />\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"row\\\">\\n        <app-search [fullList]='evaluatorList' [attribFilter]='\\\"nombreEv\\\"'\\n          (listEvent)='searchNotSelected($event)'></app-search>\\n      </div>\\n      <table class=\\\"table text-center table-hover table-bordered\\\">\\n        <thead class=\\\"thead\\\">\\n          <tr>\\n            <th class=\\\"col-md-4\\\">Evaluadores Disponibles</th>\\n            <th class=\\\"col-md-2\\\">Sede</th>\\n            <th class=\\\"col-md-2\\\">Acciones</th>\\n          </tr>\\n        </thead>\\n\\n        <tbody>\\n          <tr class=\\\"align-items-center\\\" *ngFor=\\\"let item of showListNotSelected\\\">\\n            <td>{{ item.nombreEv }} {{item.apellidoEv}}</td>\\n            <td>UTN FRC</td>\\n\\n            <td>\\n              <div class=\\\"btn-group col-md-3 text-center\\\">\\n                <a (click)=\\\"addEvaluator(item)\\\" title=\\\"Agregar\\\"><i class=\\\"fas fa-plus\\\"></i></a>\\n              </div>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n      <a *ngIf=\\\"notLoaded\\\" class=\\\"btn btn-primary btn-block col-md-12 alerta \\\" role=\\\"button\\\"\\n        (click)='loadAll()'>¡Necesito más Evaluadores!</a>\\n\\n\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"row\\\">\\n        <app-search [fullList]='evaluatorSelectedList' [attribFilter]='\\\"nombreEv\\\"'\\n          (listEvent)='searchSelected($event)'></app-search>\\n      </div>\\n\\n      <table class=\\\"table text-center table-hover table-bordered\\\">\\n        <thead class=\\\"thead\\\">\\n          <tr>\\n            <th class=\\\"col-md-4\\\">Evaluadores Seleccionados</th>\\n            <th class=\\\"col-md-2\\\">Sede</th>\\n            <th class=\\\"col-md-2\\\">Acciones</th>\\n          </tr>\\n        </thead>\\n\\n        <tbody>\\n          <tr class=\\\"align-items-center\\\" *ngFor=\\\"let item of showListSelected\\\">\\n            <td>{{ item.nombreEv }} {{item.apellidoEv}}</td>\\n            <td>UTN FRC</td>\\n            <td>\\n              <div class=\\\"btn-group col-md-3 text-center\\\">\\n                <a (click)=\\\"toggleRemoveHandled(item)\\\" title=\\\"Eliminar\\\"><i class=\\\"fas fa-trash\\\"></i></a>\\n              </div>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n\\n  </div>\\n\\n\\n  <br />\\n</div>\\n\";","export default \".container-fluid{\\n  background-color: #F4F4F4;\\n\\n}\\n\\n.contenidos{\\n  padding-bottom: 3rem;\\n}\\n\\n.thead{\\n  background-color: #C8E5F1;\\n}\\n\\n.greyned{\\n  color: grey;\\n}\\n\\n.btn-primary{\\n  background-color: #3CAFE0 ;\\n  border: none;\\n}\\n\\ni{\\n  padding-top: 0.5rem;\\n  cursor: pointer;\\n}\\n\\ni:hover{\\n  color: blue;\\n}\\n\\n.fas{\\n  font-size: 1.25rem;\\n  color: #00609C;\\n}\\n\\nhr{\\n  border:#00609C solid 1px;\\n}\\n\\n@media (min-width: 768px) {\\n  hr{\\n    margin-left: 25%;\\n    margin-right: 25%;\\n\\n  }\\n\\n  .container-fluid{\\n    padding: 5rem;\\n  }\\n\\n }\\n\\n\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EvaluatorComponent } from './evaluator.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: EvaluatorComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EvaluatorRoutingModule { }\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EvaluatorRoutingModule } from './evaluator-routing.module';\nimport { EvaluatorComponent } from './evaluator.component';\nimport { CoreModule } from 'src/app/core/core.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    EvaluatorComponent\n  ],\n  imports: [\n    CommonModule,\n    EvaluatorRoutingModule,\n    ReactiveFormsModule,\n    CoreModule\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class EvaluatorModule { }\n"],"sourceRoot":"webpack:///"}