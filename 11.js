(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{u3CC:function(e,r,t){"use strict";t.r(r),t.d(r,"CallForPapersModule",function(){return d});var s=t("mrSG"),a=t("fXoL"),i=t("ofXK"),p=t("tyNb"),n=t("5eHb"),o=t("TJ9D");let c=class{constructor(e,r,t){this.paperService=e,this.router=r,this.toastr=t,this.paperList=[],this.edit=!1,this.paper={},this.simposios=[],this.okey=!1,this.ready=!1,this.revision=!1,this.router.routeReuseStrategy.shouldReuseRoute=()=>!1}ngOnInit(){window.scrollTo(0,0),this.getSimposios(),this.getPaper()}getSimposios(){this.paperService.getSimposiosActivos().subscribe(e=>{this.simposios=e.data})}getPaper(){this.paperService.getPaper().subscribe(e=>{this.paperList=e.data,this.okey=!0})}newPaper(){this.edit=!this.edit,this.paper={id:"",autores:[],responsable:"",nombre:"",estado:"sin subir",simposio:"",archivo:null}}editPaper(e){this.edit=!this.edit,this.paper=e}deletePaper(e){this.paperService.deletePaper(e).subscribe(e=>{this.toastr.success("El paper ha sido eliminado correctamente"),this.router.navigateByUrl("/callForPapers")})}toggleCreatePaper(e){console.log(e),""===e.id?this.paperService.postPaper(e).subscribe(e=>{this.toastr.success("Paper Creado Correctamente"),this.router.navigateByUrl("/callForPapers")}):this.paperService.putPaper(e).subscribe(e=>{this.toastr.success("Paper Modificado Correctamente"),this.router.navigateByUrl("/callForPapers")})}sendPaper(e){this.paperService.sendPaper(e).subscribe(e=>{this.toastr.success("Paper Enviado"),this.router.navigateByUrl("/callForPapers")})}finalPaper(e){this.ready=!0,this.paper=e}volverFinalPaper(){this.ready=!1}verRevision(e){this.paper=e,this.revision=!0}entregaFinal(e){this.paperService.finalPaper(e).subscribe(e=>{this.toastr.success("El camera ready ha sido entregado"),this.router.navigateByUrl("/callForPapers")})}volverRevision(){this.revision=!1}};c.ctorParameters=()=>[{type:o.a},{type:p.b},{type:n.d}],c=Object(s.c)([Object(a.o)({selector:"app-call-for-papers",template:"<div class=\"container-fluid\">\n  <app-paper-list *ngIf=\"!edit && okey && !ready && !revision\" (newPaperEvent)='newPaper()'\n  [paperList]='paperList'\n  (finalPaperEvent)='finalPaper($event)'\n  (revisionEvent)='verRevision($event)'\n  (editPaperEvent)='editPaper($event)' (deletePaperEvent)='deletePaper($event)'></app-paper-list>\n\n  <app-paper-form  *ngIf=\"edit\"\n  (sendEmitter)='sendPaper($event)'\n  [simposios] = \"simposios\"\n  [paper]='paper' (paperEmitter)='toggleCreatePaper($event)'\n  (cancelPaper)='newPaper()'></app-paper-form>\n\n  <app-paper-ready\n  *ngIf=\"ready\"\n  (paperEmitter)='entregaFinal($event)'\n  [paper]='paper'\n  (cancelPaper)='volverFinalPaper()'></app-paper-ready>\n\n  <app-revision-autor\n  *ngIf=\"revision\"\n  [paper]='paper'\n  (cancelRevision)='volverRevision()'\n  ></app-revision-autor>\n\n\n</div>\n",styles:[""]})],c);const l=[{path:"",component:c}];let v=class{};v=Object(s.c)([Object(a.N)({imports:[p.c.forChild(l)],exports:[p.c]})],v);var h=t("pKmL");let d=class{};d=Object(s.c)([Object(a.N)({declarations:[c],imports:[i.c,v,h.a],schemas:[a.j]})],d)}}]);
//# sourceMappingURL=11.js.map