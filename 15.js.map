{"version":3,"sources":["./src/app/pages/certificate/certificate.component.ts","./src/app/pages/certificate/certificate.component.html","./src/app/pages/certificate/certificate.component.css","./src/app/pages/certificate/certificate-routing.module.ts","./src/app/pages/certificate/certificate.module.ts"],"names":["CertificateComponent","certService","toastr","cert","idCertificado","nombre","desc","imagen","certList","edit","new","list","form","game","this","getCertificates","subscribe","res","data","toggleEdit","item","console","log","putCertificate","postCertificate","err","id","deleteCertificate","success","selector","template","routes","path","component","CertificateRoutingModule","imports","forChild","exports","CertificateModule","declarations"],"mappings":"mOASaA,EAAoB,MAE/B,YAAoBC,EACAC,GADA,KAAAD,cACA,KAAAC,SAEpB,KAAAC,KAAO,CACLC,cAAe,KACfC,OAAQ,GACRC,KAAM,GACNC,OAAQ,IAEV,KAAAC,SAAW,GACX,KAAAC,MAAO,EACP,KAAAC,KAAM,EACN,KAAAC,MAAO,EACP,KAAAC,MAAO,EACP,KAAAC,MAAO,EAEP,WACEC,KAAKC,kBAGP,kBACED,KAAKb,YAAYc,kBAAkBC,UAAWC,IAC5CH,KAAKN,SAAWS,EAAIC,KAAK,GACzBJ,KAAKK,eAIT,OAAOC,GACLC,QAAQC,IAAIF,GACRA,EAAKhB,cACPU,KAAKb,YAAYsB,eAAeH,GAAMJ,UAAWC,IAC/CH,KAAKC,oBAGPD,KAAKb,YAAYuB,gBAAgBJ,GAAMJ,UAAWC,IAChDH,KAAKC,mBAENU,GAAaJ,QAAQC,IAAIG,IAM9B,kBAAkBC,GAChBZ,KAAKb,YAAY0B,kBAAkBD,GAAIV,UAAWC,IAChDH,KAAKZ,OAAO0B,QAAQ,yBACpBd,KAAKC,oBAIT,UACED,KAAKH,MAAO,EACZG,KAAKF,MAAO,EACZE,KAAKX,KAAO,CACZC,cAAe,KACfC,OAAQ,GACRC,KAAM,GACNC,OAAQ,IAERO,KAAKJ,KAAM,EAGb,SAASU,GACPN,KAAKX,KAAOiB,EACZN,KAAKF,MAAO,EACZE,KAAKH,MAAO,EACZG,KAAKD,MAAO,EAGd,cAAcO,GACZN,KAAKX,KAAO,OAAH,UACJiB,GAELN,KAAKD,MAAO,EACZC,KAAKF,MAAO,EACZE,KAAKH,MAAO,EAGd,aACEG,KAAKH,MAAO,EACZG,KAAKF,MAAO,EACZE,KAAKD,MAAO,EAGd,aAAaO,GACXC,QAAQC,IAAIF,GAGd,SAASA,GACPC,QAAQC,IAAI,MAAOF,K,4BAlGd,K,MADA,MAQIpB,EAAoB,aALhC,YAAU,CACT6B,SAAU,kBACVC,SCNa,8oB,QCAA,OFSF9B,GGLb,MAAM+B,EAAiB,CACrB,CACEC,KAAM,GACNC,UAAWjC,I,IAQFkC,EAAwB,QAAxBA,EAAwB,aAJpC,YAAS,CACRC,QAAS,CAAC,IAAaC,SAASL,IAChCM,QAAS,CAAC,QAECH,G,oBCGAI,EAAiB,QAAjBA,EAAiB,aAV7B,YAAS,CACRC,aAAc,CACZvC,GAEFmC,QAAS,CACP,IACAD,EACA,QAGSI","file":"15.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { CertificateService } from 'src/app/core/services/certificate.service';\n\n@Component({\n  selector: 'app-certificate',\n  templateUrl: './certificate.component.html',\n  styleUrls: ['./certificate.component.css']\n})\nexport class CertificateComponent implements OnInit {\n\n  constructor(private certService: CertificateService,\n              private toastr: ToastrService) { }\n\n  cert = {\n    idCertificado: null,\n    nombre: '',\n    desc: '',\n    imagen: ''\n  };\n  certList = [];\n  edit = false;\n  new = false;\n  list = false;\n  form = false;\n  game = false;\n\n  ngOnInit(): void {\n    this.getCertificates();\n  }\n\n  getCertificates(): void {\n    this.certService.getCertificates().subscribe((res: any) => {\n      this.certList = res.data[0];\n      this.toggleEdit();\n    });\n  }\n\n  submit(item: any): void {\n    console.log(item);\n    if (item.idCertificado) {\n      this.certService.putCertificate(item).subscribe((res: any) => {\n        this.getCertificates();\n      });\n    } else {\n      this.certService.postCertificate(item).subscribe((res: any) => {\n        this.getCertificates();\n      },\n      (err: any) => console.log(err));\n    }\n  }\n\n\n\n  deleteCertificate(id): void {\n    this.certService.deleteCertificate(id).subscribe((res: any) => {\n      this.toastr.success('Certificado Eliminado');\n      this.getCertificates();\n    });\n  }\n\n  newCert(): void {\n    this.list = false;\n    this.form = true;\n    this.cert = {\n    idCertificado: null,\n    nombre: '',\n    desc: '',\n    imagen: ''\n  };\n    this.new = true;\n  }\n\n  editCert(item: any): void {\n    this.cert = item;\n    this.form = true;\n    this.list = false;\n    this.game = false;\n  }\n\n  playCertEvent(item: any): void {\n    this.cert = {\n      ...item,\n    };\n    this.game = true;\n    this.form = false;\n    this.list = false;\n  }\n\n  toggleEdit(): void {\n    this.list = true;\n    this.form = false;\n    this.game = false;\n  }\n\n  guardarGrafo(item: any): void {\n    console.log(item);\n  }\n\n  verGrafo(item: any): void {\n    console.log('Ver', item);\n  }\n\n}\n","export default \"<app-certificate-template-list\\n  *ngIf=\\\"list\\\"\\n  (newCertEvent)=\\\"newCert()\\\"\\n  (deleteCertEvent)=\\\"deleteCertificate($event)\\\"\\n  (editCertEvent)=\\\"editCert($event)\\\"\\n  (gameCertEvent)=\\\"playCertEvent($event)\\\"\\n  [certList]=\\\"certList\\\"\\n></app-certificate-template-list>\\n<app-certificate-template-form\\n  *ngIf=\\\"form\\\"\\n  [cert]=\\\"cert\\\"\\n  (cancelCert)=\\\"toggleEdit()\\\"\\n  (certEmitter)=\\\"submit($event)\\\"\\n></app-certificate-template-form>\\n<app-certificate-detail-form\\n  *ngIf=\\\"game\\\"\\n  [cert]=\\\"cert\\\"\\n  (cancelCertEvent)=\\\"toggleEdit()\\\"\\n  (guardarGrafoEvent)=\\\"guardarGrafo($event)\\\"\\n  (verGrafoEvent)=\\\"verGrafo($event)\\\"\\n></app-certificate-detail-form>\\n\\n\";","export default \"\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CertificateComponent } from './certificate.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CertificateComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CertificateRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CertificateRoutingModule } from './certificate-routing.module';\nimport { CertificateComponent } from './certificate.component';\nimport { CoreModule } from 'src/app/core/core.module';\n\n\n@NgModule({\n  declarations: [\n    CertificateComponent\n  ],\n  imports: [\n    CommonModule,\n    CertificateRoutingModule,\n    CoreModule\n  ]\n})\nexport class CertificateModule { }\n"],"sourceRoot":"webpack:///"}