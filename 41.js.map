{"version":3,"sources":["./src/app/pages/inscriptions/inscriptions.component.ts","./src/app/pages/inscriptions/inscriptions.component.html","./src/app/pages/inscriptions/inscriptions.component.css","./src/app/pages/inscriptions/inscriptions-routing.module.ts","./src/app/pages/inscriptions/inscriptions.module.ts"],"names":["InscriptionsComponent","route","formBuilder","inscriptionService","router","toastr","congressService","tarifaService","idCongress","tarifas","tarifaSelected","datosCompletos","loading","idInscrip","submitted","isLinear","this","queryParams","subscribe","params","id","formUsuario","group","cupon","getCongresos","getTarifas","getCongressById","res","fechaI","data","fechaInCongreso","split","fechaF","fechaFinCongreso","fechaIn","Date","fechaFin","congress","nombre","sede","nombre_sede","fechaInicio","toLocaleDateString","getTarifasActivas","generatePreference","window","location","href","init_point","item","controls","value","setErrors","inscribirme","error","warning","incorrect","precio","precioFinal","document","getElementById","click","invalid","selector","template","routes","path","component","InscriptionsRoutingModule","imports","forChild","exports","InscriptionsModule","declarations"],"mappings":"wQAcaA,EAAqB,MAYhC,YAAoBC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GANA,KAAAN,QACA,KAAAC,cACA,KAAAC,qBACA,KAAAC,SACA,KAAAC,SACA,KAAAC,kBACA,KAAAC,gBAhBpB,KAAAC,WAAa,GAEb,KAAAC,QAAU,GACV,KAAAC,gBAAiB,EACjB,KAAAC,gBAAiB,EACjB,KAAAC,SAAU,EACV,KAAAC,UAAY,KAEZ,KAAAC,WAAY,EACZ,KAAAC,UAAW,EAUX,WACEC,KAAKf,MAAMgB,YAAYC,UAAUC,IAC/BH,KAAKR,WAAaW,EAAOC,GAEzBJ,KAAKK,YAAcL,KAAKd,YAAYoB,MAAM,CACxCC,MAAO,CAAC,MAEVP,KAAKQ,eACLR,KAAKS,eAIT,eACCT,KAAKV,gBAAgBoB,kBAAkBR,UAAWS,IACjD,MAAMC,EAASD,EAAIE,KAAK,GAAGC,gBAAgBC,MAAM,KAAK,GAAGA,MAAM,KACzDC,EAASL,EAAIE,KAAK,GAAGI,iBAAiBF,MAAM,KAAK,GAAGA,MAAM,KAE1DG,EAAU,IAAIC,KAAKP,EAAO,GAAIA,EAAO,GAAK,EAAGA,EAAO,IACpDQ,EAAW,IAAID,KAAKH,EAAO,GAAIA,EAAO,GAAK,EAAGA,EAAO,IAC3DhB,KAAKqB,SAAW,CACdjB,GAAIO,EAAIE,KAAK,GAAGT,GAChBkB,OAAQX,EAAIE,KAAK,GAAGS,OACpBC,KAAMZ,EAAIE,KAAK,GAAGW,YAClBC,YAAaP,EAAQQ,qBACrBN,SAAUA,EAASM,wBAKvB,aAGE1B,KAAKT,cAAcoC,oBAAoBzB,UAAWS,IAChDX,KAAKP,QAAUkB,EAAIE,OAIvB,QAGEb,KAAKb,mBAAmByC,mBAAmB5B,KAAKH,WAAWK,UAAWS,IACpEX,KAAKJ,SAAU,EACfiC,OAAOC,SAASC,KAAOpB,EAAIqB,aAI/B,YAAYC,GAEV,MAAM1B,EAAQP,KAAKK,YAAY6B,SAAS3B,MAAM4B,MAC9CnC,KAAKK,YAAY6B,SAAS3B,MAAM6B,UAAU,MAC1CpC,KAAKb,mBAAmBkD,YAAY9B,GAAOL,UAAWS,IACpD,GAAIA,EAAI2B,MAGN,OAFAtC,KAAKX,OAAOkD,QAAQ,4GACpBvC,KAAKK,YAAY6B,SAAS3B,MAAM6B,UAAU,CAACI,WAAW,IAGxDxC,KAAKH,UAAYc,EAAIE,KAAKT,GAC1BJ,KAAKN,eAAiB,OAAH,wBACduC,GAAI,CACPQ,OAAQ9B,EAAIE,KAAK6B,cAEAC,SAASC,eAAe,WAChCC,UAIf,QACE7C,KAAKL,gBAAiB,EAClBK,KAAKK,YAAYyC,QACnB9C,KAAKX,OAAOkD,QAAQ,gCAGtBvC,KAAKL,gBAAiB,I,4BAzGjB,K,MADA,K,MAIA,K,MAHgB,K,MAChB,K,MACA,K,MAEA,MAQIX,EAAqB,aALjC,YAAU,CACT+D,SAAU,mBACVC,SCXa,imJ,QCAA,mpDFcFhE,GGVb,MAAMiE,EAAiB,CAAC,CACtBC,KAAM,GACNC,UAAWnE,I,IAOAoE,EAAyB,QAAzBA,EAAyB,aAJrC,YAAS,CACRC,QAAS,CAAC,IAAaC,SAASL,IAChCM,QAAS,CAAC,QAECH,G,oBCSAI,EAAkB,QAAlBA,EAAkB,aAb9B,YAAS,CACRC,aAAc,CACZzE,GAEFqE,QAAS,CACP,IACAD,EACA,IACA,IACA,QAISI","file":"41.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { CongressService } from '../../core/services/congress.service';\nimport { InscriptionsService } from '../../core/services/inscriptions.service';\nimport { TarifasService } from '../../core/services/tarifas.service';\n\n\n@Component({\n  selector: 'app-inscriptions',\n  templateUrl: './inscriptions.component.html',\n  styleUrls: ['./inscriptions.component.css']\n})\nexport class InscriptionsComponent implements OnInit {\n\n  idCongress = '';\n  congress: any;\n  tarifas = [ ];\n  tarifaSelected = false;\n  datosCompletos = false;\n  loading = false;\n  idInscrip = null;\n  formUsuario: FormGroup;\n  submitted = false;\n  isLinear = false;\n  constructor(private route: ActivatedRoute,\n              private formBuilder: FormBuilder,\n              private inscriptionService: InscriptionsService,\n              private router: Router,\n              private toastr: ToastrService,\n              private congressService: CongressService,\n              private tarifaService: TarifasService\n              ) { }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n      this.idCongress = params.id;\n      // El usuario si o si tiene que estar logueado. Datos mínimos.\n      this.formUsuario = this.formBuilder.group({\n        cupon: [''],\n      });\n      this.getCongresos();\n      this.getTarifas();\n    });\n  }\n\n  getCongresos(): void {\n   this.congressService.getCongressById().subscribe((res: any) => {\n    const fechaI = res.data[0].fechaInCongreso.split(' ')[0].split('/');\n    const fechaF = res.data[0].fechaFinCongreso.split(' ')[0].split('/');\n\n    const fechaIn = new Date(fechaI[2], fechaI[1] - 1, fechaI[0]);\n    const fechaFin = new Date(fechaF[2], fechaF[1] - 1, fechaF[0]);\n    this.congress = {\n      id: res.data[0].id,\n      nombre: res.data[0].nombre,\n      sede: res.data[0].nombre_sede,\n      fechaInicio: fechaIn.toLocaleDateString(),\n      fechaFin: fechaFin.toLocaleDateString(),\n    };\n   });\n  }\n\n  getTarifas(): void {\n    // Traer datos de tarifa para estudiantes / asistentes/ autores.\n    // URL : inscripciones/devolver-tarifas-activas/\n    this.tarifaService.getTarifasActivas().subscribe((res: any) => {\n      this.tarifas = res.data;\n    });\n  }\n\n  pagar(): void {\n    // Tirar el post a la BD para conseguir el preference id.\n    // post\n    this.inscriptionService.generatePreference(this.idInscrip).subscribe((res: any) => {\n      this.loading = true;\n      window.location.href = res.init_point;\n    });\n  }\n\n  inscribirme(item: any): void {\n    // Post a la BD - URL: inscripciones/crear-inscripcion/ --> idInscripción - PrecioFinal // 400 si cupón inválido\n    const cupon = this.formUsuario.controls.cupon.value;\n    this.formUsuario.controls.cupon.setErrors(null);\n    this.inscriptionService.inscribirme(cupon).subscribe((res: any) => {\n      if (res.error) {\n        this.toastr.warning('Error en la inscripción. Usted ya se encuentra inscripto o el cupón ingresado es inválido.');\n        this.formUsuario.controls.cupon.setErrors({incorrect: true});\n        return;\n      }\n      this.idInscrip = res.data.id;\n      this.tarifaSelected = {\n        ...item,\n        precio: res.data.precioFinal\n      };\n      const btnDetalle = document.getElementById('go-next');\n      btnDetalle.click();\n    });\n  }\n\n  datos(): void {\n    this.datosCompletos = false;\n    if (this.formUsuario.invalid) {\n      this.toastr.warning('Por favor complete los datos');\n      return;\n    }\n    this.datosCompletos = true;\n  }\n\n}\n","export default \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"contenidos\\\">\\n    <hr>\\n    <h3 class='text-center'>Inscripciones</h3>\\n    <hr>\\n  </div>\\n  <div class=\\\"section\\\" *ngIf=\\\"idCongress\\\">\\n    <h6>Usted está a punto de inscribirse al congreso: {{congress.nombre}}\\n      a desarrollarse en la sede {{congress.sede}}. Los días {{congress.fechaInicio}} a {{congress.fechaFin}}.\\n    </h6>\\n    <h6>\\n      Por favor, complete todos los campos:\\n    </h6>\\n  </div>\\n\\n  <div class=\\\"accordion accordion-flush\\\" id=\\\"accordionFlushExample\\\">\\n    <div class=\\\"accordion-item\\\">\\n      <h2 class=\\\"accordion-header\\\" id=\\\"flush-headingOne\\\">\\n        <button class=\\\"accordion-button \\\" type=\\\"button\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#flush-collapseOne\\\"\\n          aria-expanded=\\\"true\\\" aria-controls=\\\"flush-collapseOne\\\">\\n          Selecciona tu entrada\\n        </button>\\n      </h2>\\n      <div id=\\\"flush-collapseOne\\\" class=\\\"accordion-collapse collapse show\\\" aria-labelledby=\\\"flush-headingOne\\\"\\n        data-bs-parent=\\\"#accordionFlushExample\\\">\\n        <div class=\\\"accordion-body row justify-content-center\\\">\\n          <div class=\\\"col-sm-6 text-center\\\" *ngFor=\\\"let item of tarifas\\\">\\n            <div class=\\\"card text-left\\\" [ngClass]='tarifaSelected.id === item.id ? \\\"marked\\\" : \\\"\\\" '>\\n              <div class=\\\"card-body\\\">\\n                <h4 class=\\\"card-title\\\">{{item.nombre}}</h4>\\n                <h6 class=\\\"card-text\\\">$ {{item.precio}}</h6>\\n\\n                <form [formGroup]='formUsuario'>\\n                  <div class=\\\"form-group row\\\">\\n                    <label class=\\\"col-form-label col-sm-2 col-sm-offset-2\\\" for=\\\"cupon\\\">Tengo un cupón: <span\\n                        class=\\\"text-danger\\\">*</span></label>\\n                    <div class=\\\"col-sm-6\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"cupon\\\" [ngClass]=\\\"{'is-invalid': formUsuario.controls.cupon.errors}\\\" onclick=\\\"this.select()\\\" />\\n                      <span class=\\\"text-danger\\\"\\n                        *ngIf=\\\"formUsuario.controls.cupon.errors\\\">\\n                        Cupón inválido.\\n                      </span>\\n                    </div>\\n                  </div>\\n\\n                  <button type=\\\"button\\\" (click)='inscribirme(item)' class=\\\"btn btn-primary btn-lg btn-block\\\">\\n                    Inscribirme\\n                  </button>\\n                </form>\\n                <button type=\\\"button\\\" hidden class=\\\"btn btn-primary btn-lg btn-block\\\" id='go-next'\\n                data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#flush-collapseThree\\\" aria-expanded=\\\"false\\\"\\n                aria-controls=\\\"flush-collapseThree\\\">\\n                Inscribirme\\n              </button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"accordion-item\\\">\\n      <h2 class=\\\"accordion-header\\\" id=\\\"flush-headingThree\\\">\\n        <button class=\\\"accordion-button collapsed\\\" type=\\\"button\\\" data-bs-toggle=\\\"collapse\\\"\\n          data-bs-target=\\\"#flush-collapseThree\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"flush-collapseThree\\\">\\n          Realizar el Pago\\n        </button>\\n      </h2>\\n      <div id=\\\"flush-collapseThree\\\" class=\\\"accordion-collapse collapse\\\" aria-labelledby=\\\"flush-headingThree\\\"\\n        data-bs-parent=\\\"#accordionFlushExample\\\">\\n        <div class=\\\"accordion-body\\\" *ngIf=\\\"tarifaSelected\\\">\\n          <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-sm-6 \\\">\\n              <div class=\\\"card\\\">\\n                <div class=\\\"card-body text-center\\\">\\n                  <h5 class=\\\"card-title\\\">Estas a un paso de completar tu compra!</h5>\\n                  <p class=\\\"card-text\\\">¿Estas seguro que deseas la entrada \\\"<b>{{tarifaSelected.nombre}}</b>\\\"?</p>\\n                  <p class=\\\"card-text\\\">El precio de la entrada es de $<b>{{tarifaSelected.precio}}</b></p>\\n                  <div class=\\\"row justify-items-end\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg btn-block\\\"\\n                    *ngIf=\\\"loading\\\"\\n                    >\\n                    <div class=\\\"spinner-border text-primary\\\" role=\\\"status\\\">\\n                      <span class=\\\"sr-only\\\">Loading...</span>\\n                    </div>\\n                    </button>\\n                    <button type=\\\"button\\\" (click)='pagar()' class=\\\"btn btn-primary btn-lg btn-block aling-items-end\\\"\\n                    *ngIf=\\\"!loading\\\"\\n                    >\\n                      Continuar al pago\\n                    </button>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n\";","export default \".container-fluid{\\n  background-color: #F4F4F4;\\n\\n}\\n\\n.contenidos{\\n  padding-bottom: 3rem;\\n}\\n\\n.btn-primary{\\n  background-color: #3CAFE0 ;\\n  border: none;\\n}\\n\\n.form-group{\\n  padding-top: 0.75rem;\\n  padding-bottom: 0.75rem;\\n}\\n\\ni{\\n  padding-top: 1.5rem;\\n  cursor: pointer;\\n}\\n\\ni:hover{\\n  color: blue;\\n}\\n\\n.fas{\\n  font-size: 1.25rem;\\n  color: #00609C;\\n}\\n\\n.fa{\\n  font-size: 1.25rem;\\n  color: #00609C;\\n}\\n\\nhr{\\n  border:#00609C solid 1px;\\n}\\n\\n.wrapper-progressBar {\\n  width: 100%;\\n}\\n\\n.progressBar {\\n}\\n\\n.progressBar li {\\n  list-style-type: none;\\n  float: left;\\n  width: 33%;\\n  position: relative;\\n  text-align: center;\\n}\\n\\n.progressBar li:before {\\n  content: \\\"\\\";\\n  line-height: 30px;\\n  border-radius: 50%;\\n  width: 30px;\\n  height: 30px;\\n  border: 1px solid #ddd;\\n  display: block;\\n  text-align: center;\\n  margin: 0 auto 10px;\\n  background-color: white;\\n}\\n\\n.progressBar li:after {\\n  content: \\\"\\\";\\n  position: absolute;\\n  width: 100%;\\n  height: 4px;\\n  background-color: #ddd;\\n  top: 15px;\\n  left: -50%;\\n  z-index: -1;\\n}\\n\\n.progressBar li:first-child:after {\\n  content: none;\\n}\\n\\n.progressBar li.active {\\n  color: #3CAFE0;\\n}\\n\\n.progressBar li.active:before {\\n  border-color: #3CAFE0;\\n  background-color: #3CAFE0\\n}\\n\\n.progressBar .active:after {\\n  background-color: #3CAFE0;\\n}\\n\\n.marked {\\n  border-color: #00609C;\\n  border-width: 0.5rem;\\n}\\n\\na{\\n  cursor: pointer;\\n  text-decoration: none;\\n  color: black;\\n}\\n\\n@media (min-width: 768px) {\\n  hr{\\n    margin-left: 25%;\\n    margin-right: 25%;\\n\\n  }\\n\\n  .container-fluid{\\n    padding: 5rem;\\n  }\\n }\\n\\n.spinner-border{\\n   padding: 1rem;\\n }\\n\\n\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { InscriptionsComponent } from './inscriptions.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: InscriptionsComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InscriptionsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { InscriptionsRoutingModule } from './inscriptions-routing.module';\nimport { InscriptionsComponent } from './inscriptions.component';\nimport { CoreModule } from 'src/app/core/core.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    InscriptionsComponent\n  ],\n  imports: [\n    CommonModule,\n    InscriptionsRoutingModule,\n    CoreModule,\n    ReactiveFormsModule,\n    FormsModule,\n\n  ]\n})\nexport class InscriptionsModule { }\n"],"sourceRoot":"webpack:///"}