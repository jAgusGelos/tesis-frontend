{"version":3,"sources":["./src/app/pages/evaluation/evaluation.component.ts","./src/app/pages/evaluation/evaluation.component.html","./src/app/pages/evaluation/evaluation.component.css","./src/app/pages/evaluation/evaluation-routing.module.ts","./src/app/pages/evaluation/evaluation.module.ts"],"names":["EvaluationComponent","evaluationService","router","toastr","evaluationList","edit","evaluation","ok","this","routeReuseStrategy","shouldReuseRoute","window","scrollTo","getEvaluation","subscribe","res","data","item","deleteEvaluation","success","location","reload","id","postEvaluation","navigateByUrl","putEvaluation","selector","template","routes","path","component","EvaluationRoutingModule","imports","forChild","exports","EvaluationModule","declarations","schemas"],"mappings":"kOAWaA,EAAmB,MAO9B,YAAoBC,EACAC,EACAC,GAFA,KAAAF,oBACA,KAAAC,SACA,KAAAC,SAPpB,KAAAC,eAAiB,GACjB,KAAAC,MAAO,EACP,KAAAC,WAAa,GACb,KAAAC,IAAK,EAMDC,KAAKN,OAAOO,mBAAmBC,iBAAmB,KACzC,EAGb,WACEC,OAAOC,SAAS,EAAG,GACnBJ,KAAKK,gBAGP,gBACEL,KAAKP,kBAAkBY,cAAc,GAAGC,UAAWC,IACjDP,KAAKJ,eAAiBW,EAAIC,KAC1BR,KAAKD,IAAK,IAId,gBACEC,KAAKH,MAAQG,KAAKH,KAClBG,KAAKF,WAAa,GAGpB,eAAeA,GACbE,KAAKH,MAAQG,KAAKH,KAClBG,KAAKF,WAAaA,EAIpB,iBAAiBW,GACfT,KAAKP,kBAAkBiB,iBAAiBD,GAAMH,UAAWC,IACvDP,KAAKL,OAAOgB,QAAQ,iDACpBR,OAAOS,SAASC,WAWpB,uBAAuBJ,GACS,KAA1BA,EAAKK,GACPd,KAAKP,kBAAkBsB,eAAeN,GAAMH,UAAWC,IACrDP,KAAKL,OAAOgB,QAAQ,sCACpBX,KAAKN,OAAOsB,cAAc,iBAI5BhB,KAAKP,kBAAkBwB,cAAcR,GAAMH,UAAWC,IACpDP,KAAKL,OAAOgB,QAAQ,0CACpBX,KAAKN,OAAOsB,cAAc,mB,4BArEzB,K,MAHA,K,MACA,MASIxB,EAAmB,aAL/B,YAAU,CACT0B,SAAU,iBACVC,SCRa,2d,QCAA,OFWF3B,GGPb,MAAM4B,EAAiB,CAAC,CACtBC,KAAM,GACNC,UAAW9B,I,IAOA+B,EAAuB,QAAvBA,EAAuB,aAJnC,YAAS,CACRC,QAAS,CAAC,IAAaC,SAASL,IAChCM,QAAS,CAAC,QAECH,G,oBCMAI,EAAgB,QAAhBA,EAAgB,aAX5B,YAAS,CACRC,aAAc,CACZpC,GAEFgC,QAAS,CACP,IACAD,EACA,KAEFM,QAAS,CAAC,QAECF","file":"34.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { IEvaluation } from 'src/app/core/models/IEvaluation';\nimport { EvaluationService } from 'src/app/core/services/evaluation.service';\n\n@Component({\n  selector: 'app-evaluation',\n  templateUrl: './evaluation.component.html',\n  styleUrls: ['./evaluation.component.css']\n})\nexport class EvaluationComponent implements OnInit {\n\n  evaluationList = [];\n  edit = false;\n  evaluation = {};\n  ok = false;\n\n  constructor(private evaluationService: EvaluationService,\n              private router: Router,\n              private toastr: ToastrService,\n              ) {\n      this.router.routeReuseStrategy.shouldReuseRoute = () => {\n        return false;\n      }; }\n\n  ngOnInit(): void {\n    window.scrollTo(0, 0);\n    this.getEvaluation();\n  }\n\n  getEvaluation(): void {\n    this.evaluationService.getEvaluation(1).subscribe((res: any) => {\n      this.evaluationList = res.data;\n      this.ok = true;\n    });\n  }\n\n  newEvaluation(): void {\n    this.edit = !this.edit;\n    this.evaluation = {};\n  }\n\n  editEvaluation(evaluation: any): void {\n    this.edit = !this.edit;\n    this.evaluation = evaluation;\n\n  }\n\n  deleteEvaluation(item: any): void {\n    this.evaluationService.deleteEvaluation(item).subscribe((res: any) => {\n      this.toastr.success('La evaluacion ha sido eliminado correctamente');\n      window.location.reload();\n    });\n  }\n\n  /**\n   *\n   * @param item\n   * Recibe una evaluacion, chequea que tenga un id.\n   * Si lo tiene hace un PUT al back. Actualiza una evaluacion creado.\n   * Si no lo tiene crea una nueva evaluacion.\n   */\n  toggleCreateEvaluation(item: any): void {\n    if (item.id === (undefined || '')) {\n      this.evaluationService.postEvaluation(item).subscribe((res: any) => {\n        this.toastr.success('Evaluación Creada Correctamente');\n        this.router.navigateByUrl('/evaluacion');\n      });\n    }\n    else {\n      this.evaluationService.putEvaluation(item).subscribe((res: any) => {\n        this.toastr.success('Evaluación Modificada Correctamente');\n        this.router.navigateByUrl('/evaluacion');\n      });\n    }\n  }\n}\n","export default \"<div class=\\\"container-fluid\\\">\\n  <app-evaluation-list *ngIf=\\\"!edit && ok\\\" [evaluationList]='evaluationList'\\n  (newEvaluationEvent)='newEvaluation()'\\n  (editEvaluationEvent)='editEvaluation($event)' (deleteEvaluationEvent)='deleteEvaluation($event)'>\\n  </app-evaluation-list>\\n  <app-evaluation-form *ngIf=\\\"edit\\\" [evaluation]='evaluation' (evaluationEmitter)='toggleCreateEvaluation($event)'\\n  (cancelEvaluation)='newEvaluation()'></app-evaluation-form>\\n</div>\\n\";","export default \"\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EvaluationComponent } from './evaluation.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: EvaluationComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EvaluationRoutingModule { }\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EvaluationRoutingModule } from './evaluation-routing.module';\nimport { EvaluationComponent } from './evaluation.component';\nimport { CoreModule } from 'src/app/core/core.module';\n\n\n@NgModule({\n  declarations: [\n    EvaluationComponent\n  ],\n  imports: [\n    CommonModule,\n    EvaluationRoutingModule,\n    CoreModule\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class EvaluationModule { }\n"],"sourceRoot":"webpack:///"}