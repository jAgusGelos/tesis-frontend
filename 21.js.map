{"version":3,"sources":["./src/app/pages/control-board/control-board.component.ts","./src/app/pages/control-board/control-board.component.html","./src/app/pages/control-board/control-board.component.css","./src/app/pages/control-board/control-board-routing.module.ts","./src/app/pages/control-board/control-board.module.ts"],"names":["ControlBoardComponent","evaluatorService","articulosService","congressService","evaluatorList","idEval","assignedPaperList","showAssignedPaperList","nombreArticulo","restFechaFinEv","restFechaFinProroga","this","getPaperList","getEvaluators","getCongress","getCongressById","subscribe","res","fechaFinEv","data","fechaFinEvaluacion","split","fechaFinProrroga","fechaFinReEv","oneDay","today","Date","fechaF","fechaP","fechaFin","fechaPR","Math","round","abs","valueOf","getPaperEvaluators","paperList","filter","x","estadoArticuloNombre","map","idEval1","evaluadores","id","idEval2","idEval3","idArticulo","nomEval","slice","getEvaluatorsGroup","value","item","alert","filterList","art","ev","selector","template","routes","path","component","ControlBoardRoutingModule","imports","forChild","exports","ControlBoardModule","declarations"],"mappings":"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","file":"21.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ArticulosService } from 'src/app/core/services/articulos.service';\nimport { CongressService } from 'src/app/core/services/congress.service';\nimport { EvaluatorService } from 'src/app/core/services/evaluator.service';\n\n@Component({\n  selector: 'app-control-board',\n  templateUrl: './control-board.component.html',\n  styleUrls: ['./control-board.component.css']\n})\nexport class ControlBoardComponent implements OnInit {\n\n  // Revisar Eliminación y reasignación de evaluador. No está funcionando\n\n  paperList: any[];\n  evaluatorList = [];\n  idEval = 0;\n  assignedPaperList = [];\n  showAssignedPaperList = [];\n  nombreArticulo = 'nombreArticulo';\n  fechaFinEv: '';\n  fechaFinProrroga: '';\n  restFechaFinEv = 0;\n  restFechaFinProroga = 0;\n\n\n  constructor(private evaluatorService: EvaluatorService,\n              private articulosService: ArticulosService,\n              private congressService: CongressService\n\n  ) { }\n\n  ngOnInit(): void {\n    this.getPaperList();\n    this.getEvaluators();\n    this.getCongress();\n  }\n\n  getCongress(): void {\n    this.congressService.getCongressById().subscribe((res: any) => {\n      this.fechaFinEv = res.data[0].fechaFinEvaluacion.split(' ')[0];\n      this.fechaFinProrroga = res.data[0].fechaFinReEv.split(' ')[0];\n\n      const oneDay = 24 * 60 * 60 * 1000;\n      const today = new Date();\n      const fechaF = res.data[0].fechaFinEvaluacion.split(' ')[0].split('/');\n      const fechaP = res.data[0].fechaFinReEv.split(' ')[0].split('/');\n\n      const fechaFin = new Date(fechaF[2], fechaF[1] - 1, fechaF[0]);\n      const fechaPR = new Date(fechaP[2], fechaP[1] - 1, fechaP[0]);\n\n      this.restFechaFinEv = Math.round(Math.abs((fechaFin.valueOf() - today.valueOf()) / oneDay));\n      this.restFechaFinProroga = Math.round(Math.abs((fechaPR.valueOf() - today.valueOf()) / oneDay));\n    });\n  }\n\n  getPaperList(): void {\n    // devuelve la lista de papers asignados.  getArticulosEvaluadoresCompleto\n    this.articulosService.getPaperEvaluators().subscribe((res: any) => {\n      this.paperList = res.data.filter((x: any) => (x.estadoArticuloNombre === 'Sin Evaluar' || x.estadoArticuloNombre === 'Enviado'));\n      this.assignedPaperList = this.paperList.map((x: any) => {\n        return {\n          idEval1: x.evaluadores[0].id,\n          idEval2: x.evaluadores[1].id,\n          idEval3: x.evaluadores[2].id,\n          idArticulo: x.idArticulo,\n          nombreArticulo: x.nombreArticulo,\n          nomEval: x.evaluadores\n        };\n      });\n      this.showAssignedPaperList = this.assignedPaperList.slice();\n    });\n  }\n\n  getEvaluators(): void {\n    this.evaluatorService.getEvaluatorsGroup().subscribe((res: any) => {\n      this.evaluatorList = res.data;\n    });\n  }\n\n  selectOption1(value: any, item: any): void {\n    this.assignedPaperList = this.assignedPaperList.map((x: any) => {\n      if (item.idArticulo === x.idArticulo) {\n        if (x.idEval2 !== +value && x.idEval3 !== +value) {\n          x.idEval1 = +value;\n        } else {\n          alert('Evaluador ya asignado en este mismo paper');\n          item.idEval1 = null;\n        }\n      }\n      return x;\n    });\n\n    // Falta hacer el post con el nuevo evaluador\n  }\n\n  selectOption2(value: any, item: any): void {\n    this.assignedPaperList = this.assignedPaperList.map((x: any) => {\n      if (item.idArticulo === x.idArticulo) {\n        if (x.idEval1 !== +value && x.idEval3 !== +value) {\n          x.idEval2 = +value;\n        } else {\n          alert('Evaluador ya asignado en este mismo paper');\n          item.idEval2 = null;\n        }\n      }\n      return x;\n    });\n  }\n\n  selectOption3(value: any, item: any): void {\n    this.assignedPaperList = this.assignedPaperList.map((x: any) => {\n      if (item.idArticulo === x.idArticulo) {\n        if (x.idEval2 !== +value && x.idEval1 !== +value) {\n          x.idEval3 = +value;\n        } else {\n          alert('Evaluador ya asignado en este mismo paper');\n          item.idEval3 = null;\n        }\n      }\n      return x;\n    });\n  }\n\n  search(filterList): void {\n    this.showAssignedPaperList = filterList;\n  }\n\n  eliminarYAsignar(art: any, ev: any): void {\n    // Llamar al service para hacer la desvinculación\n    this.assignedPaperList = this.assignedPaperList.map((item: any) => {\n      if (item.idArticulo === art.idArticulo) {\n        if (item.idEval1 === ev.id) {\n          item.idEval1 = null;\n        } else if (item.idEval2 === ev.id) {\n          item.idEval2 = null;\n        } else {\n          item.idEval3 = null;\n        }\n      }\n      return item;\n    });\n    this.showAssignedPaperList = this.assignedPaperList.slice();\n  }\n\n}\n","export default \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"contenidos\\\">\\n    <hr>\\n    <div class=\\\"row justify-content-center\\\">\\n      <h3 class='text-center col-md-3'>Tablero de Control</h3>\\n      <a\\n      ngbPopover=\\\"En esta pantalla podrás observar todos los artículos con su correspondiente estado, además podrás eliminar y reasignar nuevos evaluadores\\\"\\n      popoverClass=\\\"popover\\\"\\n      placement=\\\"bottom\\\"\\n      class=\\\"col-sm-1\\\"\\n      popoverTitle=\\\"Inforormación de la pantalla:\\\">\\n      <i class=\\\"fas fa-info-circle bigger\\\"></i>\\n      </a>\\n    </div>\\n    <hr>\\n  </div>\\n  <br>\\n  <div class=\\\"row justify-content-between\\\">\\n    <app-search class=\\\"col-md-5\\\" [fullList]='assignedPaperList' [attribFilter]='nombreArticulo'\\n      (listEvent)='search($event)'></app-search>\\n      <div class=\\\"col-md-3\\\">\\n        <h5><a\\n              ngbPopover=\\\"Dias restantes: {{restFechaFinEv}} \\\"\\n              popoverClass=\\\"popover\\\"\\n              placement=\\\"top\\\"\\n              popoverTitle=\\\"Tiempo restante de evaluación\\\">\\n              <i class=\\\"fas fa-clock clock pt-3\\\"></i>\\n              </a>&nbsp;Fin Evaluación: {{fechaFinEv}}</h5>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <h5><a\\n              ngbPopover=\\\"Dias restantes: {{restFechaFinProroga}} \\\"\\n              popoverClass=\\\"popover\\\"\\n              placement=\\\"top\\\"\\n              popoverTitle=\\\"Tiempo restante para el fin de prorroga de evaluaciones:\\\">\\n              <i class=\\\"fas fa-clock clock pt-3\\\"></i>\\n              </a>&nbsp;Fin Prorroga: {{fechaFinProrroga}}</h5>\\n      </div>\\n  </div>\\n  <table class=\\\"table text-center table-hover table-bordered\\\">\\n    <thead class='thead'>\\n      <tr>\\n        <th class=\\\"col-md-3\\\">Artículo</th>\\n        <th class=\\\"col-md-2\\\">Evaluador 1</th>\\n        <th class=\\\"col-md-2\\\">Evaluador 2</th>\\n        <th class=\\\"col-md-2\\\">Evaluador 3</th>\\n      </tr>\\n    </thead>\\n\\n    <tbody>\\n      <tr class='align-items-center' *ngFor='let item of showAssignedPaperList'>\\n        <td>{{item.nombreArticulo}}</td>\\n        <td *ngIf=\\\"item.idEval1\\\">\\n          <div class=\\\"row px-2\\\">\\n            <h6>{{item.nomEval[0].nombre}} {{item.nomEval[0].apellido}}</h6>\\n          </div>\\n          <div class=\\\"row px-2\\\">\\n            <div class=\\\"col-md-6\\\">\\n              Confirmado\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n              <button type=\\\"reset\\\" class='redondo' disabled\\n                [ngClass]=\\\"item.nomEval[0].is_active ? 'verde' : 'rojo' \\\"></button>\\n            </div>\\n          </div>\\n          <div class=\\\"row px-2 pt-1\\\">\\n            <div class=\\\"col-md-6\\\">\\n              Evaluado\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n              <button type=\\\"reset\\\" class='redondo' disabled\\n                [ngClass]='item.nomEval[0].idEstadoEvaluacion === 3 ? \\\"verde\\\" : \\\"rojo\\\"'></button>\\n            </div>\\n          </div>\\n          <div class=\\\"row px-2 pt-3\\\" *ngIf=\\\"!(item.nomEval[0].idEstadoEvaluacion >= 2)\\\">\\n            <a (click)='eliminarYAsignar(item, item.nomEval[0])' class=\\\"btn btn-secondary \\\">Eliminar y Reasignar</a>\\n          </div>\\n        </td>\\n        <td *ngIf=\\\"!item.idEval1\\\">\\n          <div class=\\\"col-sm-12\\\">\\n            <select name=\\\"eval\\\" class=\\\"form-control\\\" (change)=\\\"selectOption1($event.target.value, item)\\\">\\n              <option hidden [selected]='item.idEval1===null'>Evaluador 1</option>\\n              <option *ngFor=\\\"let eval of evaluatorList\\\" value='{{eval.idEvaluador}}'\\n                [selected]='item.idEval1 === eval.idEvaluador'>{{ eval.nombreEv }} {{eval.apellidoEv}}</option>\\n            </select>\\n          </div>\\n        </td>\\n        <td *ngIf=\\\"item.idEval2\\\">\\n          <div class=\\\"row px-2\\\">\\n            <h6>{{item.nomEval[1].nombre}} {{item.nomEval[1].apellido}}</h6>\\n          </div>\\n          <div class=\\\"row px-2\\\">\\n            <div class=\\\"col-md-6\\\">\\n              Confirmado\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n              <button type=\\\"reset\\\" class='redondo' disabled\\n                [ngClass]=\\\"item.nomEval[1].is_active ? 'verde' : 'rojo' \\\"></button>\\n            </div>\\n          </div>\\n          <div class=\\\"row px-2 pt-1\\\">\\n            <div class=\\\"col-md-6\\\">\\n              Evaluado\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n              <button type=\\\"reset\\\" class='redondo' disabled\\n                [ngClass]='item.nomEval[1].idEstadoEvaluacion === 3 ? \\\"verde\\\" : \\\"rojo\\\"'></button>\\n            </div>\\n          </div>\\n          <div class=\\\"row px-2 pt-3\\\" *ngIf=\\\"!(item.nomEval[1].idEstadoEvaluacion >= 2)\\\">\\n            <a (click)='eliminarYAsignar(item, item.nomEval[1])' class=\\\"btn btn-secondary \\\">Eliminar y Reasignar</a>\\n          </div>\\n        </td>\\n        <td *ngIf=\\\"!item.idEval2\\\">\\n          <div class=\\\"col-sm-12\\\">\\n            <select name=\\\"eval\\\" class=\\\"form-control\\\" (change)=\\\"selectOption2($event.target.value, item)\\\">\\n              <option hidden [selected]='item.idEval2===null'>Evaluador 2</option>\\n              <option *ngFor=\\\"let eval of evaluatorList\\\" value='{{eval.idEvaluador}}'\\n                [selected]='item.idEval2===eval.idEvaluador'>{{ eval.nombreEv }} {{eval.apellidoEv}}</option>\\n            </select>\\n          </div>\\n        </td>\\n        <td *ngIf=\\\"item.idEval3\\\">\\n          <div class=\\\"row px-2\\\">\\n            <h6>{{item.nomEval[2].nombre}} {{item.nomEval[2].apellido}}</h6>\\n          </div>\\n          <div class=\\\"row px-2\\\">\\n            <div class=\\\"col-md-6\\\">\\n              Confirmado\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n              <button type=\\\"reset\\\" class='redondo' disabled\\n                [ngClass]=\\\"item.nomEval[2].is_active ? 'verde' : 'rojo' \\\"></button>\\n            </div>\\n          </div>\\n          <div class=\\\"row px-2 pt-1\\\">\\n            <div class=\\\"col-md-6\\\">\\n              Evaluado\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n              <button type=\\\"reset\\\" class='redondo' disabled\\n                [ngClass]='item.nomEval[2].idEstadoEvaluacion === 3 ? \\\"verde\\\" : \\\"rojo\\\"'></button>\\n            </div>\\n          </div>\\n          <div class=\\\"row px-2 pt-3\\\" *ngIf=\\\"!(item.nomEval[2].idEstadoEvaluacion >= 2)\\\">\\n            <a (click)='eliminarYAsignar(item, item.nomEval[2])' class=\\\"btn btn-secondary \\\">Eliminar y Reasignar</a>\\n          </div>\\n        </td>\\n        <td *ngIf=\\\"!item.idEval3\\\">\\n          <div class=\\\"col-sm-12\\\">\\n            <select name=\\\"eval\\\" class=\\\"form-control\\\" (change)=\\\"selectOption3($event.target.value, item)\\\">\\n              <option hidden [selected]='item.idEval3===null'>Evaluador 3</option>\\n              <option *ngFor=\\\"let eval of evaluatorList\\\" [value]='eval.idEvaluador'\\n                [selected]='item.idEval3===eval.idEvaluador'>{{ eval.nombreEv }} {{eval.apellidoEv}}</option>\\n            </select>\\n          </div>\\n        </td>\\n      </tr>\\n\\n    </tbody>\\n  </table>\\n</div>\\n\";","export default \".container-fluid {\\n  background-color: #F4F4F4;\\n\\n}\\n\\n.contenidos {\\n  padding-bottom: 3rem;\\n}\\n\\n.thead {\\n  background-color: #C8E5F1;\\n}\\n\\n.greyned {\\n  color: grey;\\n}\\n\\n.btn-primary {\\n  background-color: #3CAFE0;\\n  border: none;\\n}\\n\\ni {\\n  cursor: pointer;\\n}\\n\\ni:hover {\\n  color: blue;\\n}\\n\\n.fas {\\n  font-size: 1.25rem;\\n  color: #00609C;\\n}\\n\\n.fa {\\n  font-size: 1.25rem;\\n  color: #00609C;\\n}\\n\\nhr {\\n  border: #00609C solid 1px;\\n}\\n\\n@media (min-width: 768px) {\\n  hr {\\n    margin-left: 25%;\\n    margin-right: 25%;\\n\\n  }\\n\\n  .container-fluid {\\n    padding: 5rem;\\n  }\\n\\n}\\n\\n.redondo{\\n  display: block;\\n  width: 25px;\\n  height: 25px;\\n  border-radius: 50%;\\n}\\n\\n.rojo {\\n  background-color: rgb(250, 79, 79);\\n  border: rgb(214, 51, 51);\\n}\\n\\n.verde {\\n  background-color: rgb(109, 236, 109);\\n  border: rgb(109, 236, 109);\\n}\\n\\n:host >>> .popover .popover-header {\\n  background-color: #3CAFE0;\\n}\\n\\n.bigger {\\n  font-size: 170%;\\n  margin-bottom: 1rem;\\n}\\n\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ControlBoardComponent } from './control-board.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ControlBoardComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ControlBoardRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ControlBoardRoutingModule } from './control-board-routing.module';\nimport { ControlBoardComponent } from './control-board.component';\nimport { CoreModule } from 'src/app/core/core.module';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n\n@NgModule({\n  declarations: [ControlBoardComponent],\n  imports: [\n    CommonModule,\n    ControlBoardRoutingModule,\n    CoreModule,\n    NgbModule\n  ]\n})\nexport class ControlBoardModule { }\n"],"sourceRoot":"webpack:///"}