(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{"6TGS":function(n,a,e){"use strict";e.r(a),e.d(a,"ControlBoardModule",function(){return E});var i=e("mrSG"),t=e("fXoL"),o=e("ofXK"),s=e("tyNb"),l=e("isFk"),r=e("VRfU"),d=e("y6im");let c=class{constructor(n,a,e){this.evaluatorService=n,this.articulosService=a,this.congressService=e,this.evaluatorList=[],this.idEval=0,this.assignedPaperList=[],this.showAssignedPaperList=[],this.nombreArticulo="nombreArticulo",this.restFechaFinEv=0,this.restFechaFinProroga=0}ngOnInit(){this.getPaperList(),this.getEvaluators(),this.getCongress()}getCongress(){this.congressService.getCongressById().subscribe(n=>{this.fechaFinEv=n.data[0].fechaFinEvaluacion.split(" ")[0],this.fechaFinProrroga=n.data[0].fechaFinReEv.split(" ")[0];const a=864e5,e=new Date,i=n.data[0].fechaFinEvaluacion.split(" ")[0].split("/"),t=n.data[0].fechaFinReEv.split(" ")[0].split("/"),o=new Date(i[2],i[1]-1,i[0]),s=new Date(t[2],t[1]-1,t[0]);this.restFechaFinEv=Math.round(Math.abs((o.valueOf()-e.valueOf())/a)),this.restFechaFinProroga=Math.round(Math.abs((s.valueOf()-e.valueOf())/a))})}getPaperList(){this.articulosService.getPaperEvaluators().subscribe(n=>{this.paperList=n.data.filter(n=>"Sin Evaluar"===n.estadoArticuloNombre||"Enviado"===n.estadoArticuloNombre),this.assignedPaperList=this.paperList.map(n=>({idEval1:n.evaluadores[0].id,idEval2:n.evaluadores[1].id,idEval3:n.evaluadores[2].id,idArticulo:n.idArticulo,nombreArticulo:n.nombreArticulo,nomEval:n.evaluadores})),this.showAssignedPaperList=this.assignedPaperList.slice()})}getEvaluators(){this.evaluatorService.getEvaluatorsGroup().subscribe(n=>{this.evaluatorList=n.data})}selectOption1(n,a){this.assignedPaperList=this.assignedPaperList.map(e=>(a.idArticulo===e.idArticulo&&(e.idEval2!==+n&&e.idEval3!==+n?e.idEval1=+n:(alert("Evaluador ya asignado en este mismo paper"),a.idEval1=null)),e))}selectOption2(n,a){this.assignedPaperList=this.assignedPaperList.map(e=>(a.idArticulo===e.idArticulo&&(e.idEval1!==+n&&e.idEval3!==+n?e.idEval2=+n:(alert("Evaluador ya asignado en este mismo paper"),a.idEval2=null)),e))}selectOption3(n,a){this.assignedPaperList=this.assignedPaperList.map(e=>(a.idArticulo===e.idArticulo&&(e.idEval2!==+n&&e.idEval1!==+n?e.idEval3=+n:(alert("Evaluador ya asignado en este mismo paper"),a.idEval3=null)),e))}search(n){this.showAssignedPaperList=n}eliminarYAsignar(n,a){this.assignedPaperList=this.assignedPaperList.map(e=>(e.idArticulo===n.idArticulo&&(e.idEval1===a.id?e.idEval1=null:e.idEval2===a.id?e.idEval2=null:e.idEval3=null),e)),this.showAssignedPaperList=this.assignedPaperList.slice()}};c.ctorParameters=()=>[{type:d.a},{type:l.a},{type:r.a}],c=Object(i.c)([Object(t.o)({selector:"app-control-board",template:'<div class="container-fluid">\n  <div class="contenidos">\n    <hr>\n    <div class="row justify-content-center">\n      <h3 class=\'text-center col-md-3\'>Tablero de Control</h3>\n      <a\n      ngbPopover="En esta pantalla podr\xe1s observar todos los art\xedculos con su correspondiente estado, adem\xe1s podr\xe1s eliminar y reasignar nuevos evaluadores"\n      popoverClass="popover"\n      placement="bottom"\n      class="col-sm-1"\n      popoverTitle="Inforormaci\xf3n de la pantalla:">\n      <i class="fas fa-info-circle bigger"></i>\n      </a>\n    </div>\n    <hr>\n  </div>\n  <br>\n  <div class="row justify-content-between">\n    <app-search class="col-md-5" [fullList]=\'assignedPaperList\' [attribFilter]=\'nombreArticulo\'\n      (listEvent)=\'search($event)\'></app-search>\n      <div class="col-md-3">\n        <h5><a\n              ngbPopover="Dias restantes: {{restFechaFinEv}} "\n              popoverClass="popover"\n              placement="top"\n              popoverTitle="Tiempo restante de evaluaci\xf3n">\n              <i class="fas fa-clock clock pt-3"></i>\n              </a>&nbsp;Fin Evaluaci\xf3n: {{fechaFinEv}}</h5>\n      </div>\n      <div class="col-md-3">\n        <h5><a\n              ngbPopover="Dias restantes: {{restFechaFinProroga}} "\n              popoverClass="popover"\n              placement="top"\n              popoverTitle="Tiempo restante para el fin de prorroga de evaluaciones:">\n              <i class="fas fa-clock clock pt-3"></i>\n              </a>&nbsp;Fin Prorroga: {{fechaFinProrroga}}</h5>\n      </div>\n  </div>\n  <table class="table text-center table-hover table-bordered">\n    <thead class=\'thead\'>\n      <tr>\n        <th class="col-md-3">Art\xedculo</th>\n        <th class="col-md-2">Evaluador 1</th>\n        <th class="col-md-2">Evaluador 2</th>\n        <th class="col-md-2">Evaluador 3</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      <tr class=\'align-items-center\' *ngFor=\'let item of showAssignedPaperList\'>\n        <td>{{item.nombreArticulo}}</td>\n        <td *ngIf="item.idEval1">\n          <div class="row px-2">\n            <h6>{{item.nomEval[0].nombre}} {{item.nomEval[0].apellido}}</h6>\n          </div>\n          <div class="row px-2">\n            <div class="col-md-6">\n              Confirmado\n            </div>\n            <div class="col-md-3">\n              <button type="reset" class=\'redondo\' disabled\n                [ngClass]="item.nomEval[0].is_active ? \'verde\' : \'rojo\' "></button>\n            </div>\n          </div>\n          <div class="row px-2 pt-1">\n            <div class="col-md-6">\n              Evaluado\n            </div>\n            <div class="col-md-3">\n              <button type="reset" class=\'redondo\' disabled\n                [ngClass]=\'item.nomEval[0].idEstadoEvaluacion === 3 ? "verde" : "rojo"\'></button>\n            </div>\n          </div>\n          <div class="row px-2 pt-3" *ngIf="!(item.nomEval[0].idEstadoEvaluacion >= 2)">\n            <a (click)=\'eliminarYAsignar(item, item.nomEval[0])\' class="btn btn-secondary ">Eliminar y Reasignar</a>\n          </div>\n        </td>\n        <td *ngIf="!item.idEval1">\n          <div class="col-sm-12">\n            <select name="eval" class="form-control" (change)="selectOption1($event.target.value, item)">\n              <option hidden [selected]=\'item.idEval1===null\'>Evaluador 1</option>\n              <option *ngFor="let eval of evaluatorList" value=\'{{eval.idEvaluador}}\'\n                [selected]=\'item.idEval1 === eval.idEvaluador\'>{{ eval.nombreEv }} {{eval.apellidoEv}}</option>\n            </select>\n          </div>\n        </td>\n        <td *ngIf="item.idEval2">\n          <div class="row px-2">\n            <h6>{{item.nomEval[1].nombre}} {{item.nomEval[1].apellido}}</h6>\n          </div>\n          <div class="row px-2">\n            <div class="col-md-6">\n              Confirmado\n            </div>\n            <div class="col-md-3">\n              <button type="reset" class=\'redondo\' disabled\n                [ngClass]="item.nomEval[1].is_active ? \'verde\' : \'rojo\' "></button>\n            </div>\n          </div>\n          <div class="row px-2 pt-1">\n            <div class="col-md-6">\n              Evaluado\n            </div>\n            <div class="col-md-3">\n              <button type="reset" class=\'redondo\' disabled\n                [ngClass]=\'item.nomEval[1].idEstadoEvaluacion === 3 ? "verde" : "rojo"\'></button>\n            </div>\n          </div>\n          <div class="row px-2 pt-3" *ngIf="!(item.nomEval[1].idEstadoEvaluacion >= 2)">\n            <a (click)=\'eliminarYAsignar(item, item.nomEval[1])\' class="btn btn-secondary ">Eliminar y Reasignar</a>\n          </div>\n        </td>\n        <td *ngIf="!item.idEval2">\n          <div class="col-sm-12">\n            <select name="eval" class="form-control" (change)="selectOption2($event.target.value, item)">\n              <option hidden [selected]=\'item.idEval2===null\'>Evaluador 2</option>\n              <option *ngFor="let eval of evaluatorList" value=\'{{eval.idEvaluador}}\'\n                [selected]=\'item.idEval2===eval.idEvaluador\'>{{ eval.nombreEv }} {{eval.apellidoEv}}</option>\n            </select>\n          </div>\n        </td>\n        <td *ngIf="item.idEval3">\n          <div class="row px-2">\n            <h6>{{item.nomEval[2].nombre}} {{item.nomEval[2].apellido}}</h6>\n          </div>\n          <div class="row px-2">\n            <div class="col-md-6">\n              Confirmado\n            </div>\n            <div class="col-md-3">\n              <button type="reset" class=\'redondo\' disabled\n                [ngClass]="item.nomEval[2].is_active ? \'verde\' : \'rojo\' "></button>\n            </div>\n          </div>\n          <div class="row px-2 pt-1">\n            <div class="col-md-6">\n              Evaluado\n            </div>\n            <div class="col-md-3">\n              <button type="reset" class=\'redondo\' disabled\n                [ngClass]=\'item.nomEval[2].idEstadoEvaluacion === 3 ? "verde" : "rojo"\'></button>\n            </div>\n          </div>\n          <div class="row px-2 pt-3" *ngIf="!(item.nomEval[2].idEstadoEvaluacion >= 2)">\n            <a (click)=\'eliminarYAsignar(item, item.nomEval[2])\' class="btn btn-secondary ">Eliminar y Reasignar</a>\n          </div>\n        </td>\n        <td *ngIf="!item.idEval3">\n          <div class="col-sm-12">\n            <select name="eval" class="form-control" (change)="selectOption3($event.target.value, item)">\n              <option hidden [selected]=\'item.idEval3===null\'>Evaluador 3</option>\n              <option *ngFor="let eval of evaluatorList" [value]=\'eval.idEvaluador\'\n                [selected]=\'item.idEval3===eval.idEvaluador\'>{{ eval.nombreEv }} {{eval.apellidoEv}}</option>\n            </select>\n          </div>\n        </td>\n      </tr>\n\n    </tbody>\n  </table>\n</div>\n',styles:[".container-fluid {\n  background-color: #F4F4F4;\n\n}\n\n.contenidos {\n  padding-bottom: 3rem;\n}\n\n.thead {\n  background-color: #C8E5F1;\n}\n\n.greyned {\n  color: grey;\n}\n\n.btn-primary {\n  background-color: #3CAFE0;\n  border: none;\n}\n\ni {\n  cursor: pointer;\n}\n\ni:hover {\n  color: blue;\n}\n\n.fas {\n  font-size: 1.25rem;\n  color: #00609C;\n}\n\n.fa {\n  font-size: 1.25rem;\n  color: #00609C;\n}\n\nhr {\n  border: #00609C solid 1px;\n}\n\n@media (min-width: 768px) {\n  hr {\n    margin-left: 25%;\n    margin-right: 25%;\n\n  }\n\n  .container-fluid {\n    padding: 5rem;\n  }\n\n}\n\n.redondo{\n  display: block;\n  width: 25px;\n  height: 25px;\n  border-radius: 50%;\n}\n\n.rojo {\n  background-color: rgb(250, 79, 79);\n  border: rgb(214, 51, 51);\n}\n\n.verde {\n  background-color: rgb(109, 236, 109);\n  border: rgb(109, 236, 109);\n}\n\n:host >>> .popover .popover-header {\n  background-color: #3CAFE0;\n}\n\n.bigger {\n  font-size: 170%;\n  margin-bottom: 1rem;\n}\n"]})],c);const v=[{path:"",component:c}];let p=class{};p=Object(i.c)([Object(t.N)({imports:[s.c.forChild(v)],exports:[s.c]})],p);var m=e("pKmL"),u=e("1kSV");let E=class{};E=Object(i.c)([Object(t.N)({declarations:[c],imports:[o.c,p,m.a,u.a]})],E)}}]);
//# sourceMappingURL=21.js.map